"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path_1 = require("./path");
const fs_1 = require("fs");
const LarkClient_1 = tslib_1.__importDefault(require("./LarkClient"));
class User {
    constructor(config, token) {
        this.config = config;
        this.token = token;
        this.lark = new LarkClient_1.default(config, this);
        this.cacheFile = path_1.join(this.config.cacheDir, 'user');
    }
    async load() {
        if (this.token) {
            await this.initByToken(false);
        }
        else if (fs_1.existsSync(this.cacheFile)) {
            const { id, token } = JSON.parse(fs_1.readFileSync(this.cacheFile, 'utf-8'));
            this.token = token;
            this.id = id;
        }
        return this;
    }
    async initByToken(save = true) {
        const user = await this.lark.getUser();
        this.id = user.id;
        this.name = user.name;
        if (save) {
            this.save({ id: this.id, token: this.token });
        }
    }
    save(user) {
        fs_1.writeFileSync(this.cacheFile, JSON.stringify(user));
    }
}
exports.default = User;
