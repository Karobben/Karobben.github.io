import { IConfig } from './Config';
import LarkClient from './LarkClient';
export interface DocumentConfig {
    url?: string;
    public?: number;
    template?: boolean;
    __content: string;
}
export default class Document {
    filename: string;
    config: IConfig;
    body: string;
    title: string;
    slug: string;
    public?: number;
    template?: boolean;
    lark: LarkClient;
    raw: string;
    rendered?: string;
    assets: {
        hash: string;
        url: string;
    }[];
    larkDocs: any;
    id?: number;
    constructor(larkDocs: any, lark: LarkClient, config: IConfig, filename: string);
    createDoc(layout?: string): Promise<this>;
    signature(): string;
    applyLayout(layout?: string): void;
    getTemplate(): false | {
        variables: any;
        tags: any;
    };
    renderTemplate(): void;
    loadConfig(): void;
    dump(): {
        slug: string;
        title: string;
        body: string;
        public: number | undefined;
    };
    validate(): {
        valid: boolean;
        messages: string[];
    };
}
