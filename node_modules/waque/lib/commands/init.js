"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_1 = require("fs");
const inquirer_1 = require("inquirer");
const signale = tslib_1.__importStar(require("signale"));
const LarkClient_1 = tslib_1.__importDefault(require("../LarkClient"));
const base_1 = tslib_1.__importDefault(require("../base"));
const path_1 = require("../path");
inquirer_1.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'));
class Init extends base_1.default {
    async run() {
        const configFile = path_1.resolve('./yuque.yml');
        if (fs_1.existsSync(configFile)) {
            signale.error('yuque.yml 已存在.');
            this.exit(1);
        }
        const lark = new LarkClient_1.default(this.config, this.config.currentUser);
        const repos = await lark.getRepos();
        const questions = [
            {
                name: 'repo',
                message: '选择语雀知识库',
                type: 'autocomplete',
                source: (_answersSoFar, input) => {
                    let repoNames = repos
                        .filter((repo) => !!repo.user)
                        .map((repo) => `${repo.user.name}/${repo.name}(${repo.namespace})`);
                    if (input) {
                        repoNames = repoNames.filter((name) => name.includes(input));
                    }
                    return Promise.resolve(repoNames);
                },
                filter: (input) => input.match(/\((.+\/.+)\)/)[1],
                validate: (input) => !!input
            },
            {
                name: 'pattern',
                message: '要上传的文件',
                default: '**/*.md'
            }
        ];
        const { repo, pattern } = (await inquirer_1.prompt(questions));
        fs_1.writeFileSync(configFile, `
# 配置请参考：https://www.yuque.com/waquehq/docs/configuration
repo: '${repo}'
pattern: '${pattern}'
`.trimLeft());
        signale.success('Created yuque.yml');
    }
}
Init.description = 'generate yuque.yml';
Init.flags = base_1.default.flags;
exports.default = Init;
