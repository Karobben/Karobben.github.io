#!/usr/bin/env node

var cwd = process.cwd();

var fs = require('fs');
var path = require('path');

var ncp = require('ncp');
var mkdirp = require('mkdirp');
var marked = require('marked');
var ejs = require('ejs');

marked.setOptions({
  highlight: function (code) {
    return require('highlight.js').highlightAuto(code).value;
  }
});

var extend = function () {
  var ret = {};
  for (var i = 0; i < arguments.length; i++) {
    var obj = arguments[i];
    for (var key in obj) {
      ret[key] = obj[key];
    }
  }
  return ret;
};
var pkg;
try {
  pkg = require(path.join(cwd, 'column.json'));
} catch (ex) {
  console.log('column.json 文件有误');
  process.exit(1);
}

var docdir = path.join(cwd, 'doc');
var htmldir = path.join(cwd, 'articles');
mkdirp.sync(htmldir);

var assetdir = path.join(cwd, 'assets');
mkdirp.sync(assetdir);

var tpldir = path.join(__dirname, '../tpl');
var articleTpl = fs.readFileSync(path.join(tpldir, 'article.tpl'), 'utf-8');
var homeTpl = fs.readFileSync(path.join(tpldir, 'index.tpl'), 'utf-8');

// filter markdown files
var files = fs.readdirSync(docdir);
var markdowns = files.filter(function (filename) {
  var ext = path.extname(filename);
  return ext === '.md';
});
markdowns.forEach(function (filename) {
  var markdown = path.join(docdir, filename);
  var html = marked(fs.readFileSync(markdown, 'utf-8'));

  var basename = path.basename(filename, path.extname(filename));
  var output = ejs.render(articleTpl, extend({
    title: filename,
    html: html,
    filename: '../tpl/article.tpl'
  }, pkg));

  var article = path.join(htmldir, basename + '.html');
  fs.writeFileSync(article, output);
});

var articles = markdowns.map(function (filename) {
  return {
    title: path.basename(filename, path.extname(filename))
  };
});

var home = path.join(htmldir, '../index.html');
fs.writeFileSync(home, ejs.render(homeTpl, extend({
  articles: articles,
  filename: '../tpl/index.tpl'
}, pkg)));

console.log(markdowns);

ncp(path.join(tpldir, 'assets'), assetdir, function (err) {
  if (err) {
    return console.error(err);
  }
  console.log('done!');
});
