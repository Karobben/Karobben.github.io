<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Karobben</title>
  
  <subtitle>Engjoy~</subtitle>
  <link href="https://karobben.github.io/atom.xml" rel="self"/>
  
  <link href="https://karobben.github.io/"/>
  <updated>2023-02-12T01:22:27.130Z</updated>
  <id>https://karobben.github.io/</id>
  
  <author>
    <name>Karobben</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>From igraph to ggplot2</title>
    <link href="https://karobben.github.io/2023/02/07/R/igraph-ggplot2/"/>
    <id>https://karobben.github.io/2023/02/07/R/igraph-ggplot2/</id>
    <published>2023-02-07T18:44:28.000Z</published>
    <updated>2023-02-12T01:22:27.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Turn-igraph-result-to-ggplot2-plot">Turn igraph result to ggplot2 plot</h2><div class="admonition note"><p class="admonition-title">Why you want to turn igraph network polot to ggplot?</p><ul><li>Flexibility: ggplot is a very flexible and customizable plotting package that allows you to create high-quality, publication-ready plots with a high degree of control over the visual aesthetics of your plots. You can easily modify various aspects of the plot, such as the color, shape, and size of the nodes and edges, and the placement of the labels.</li><li>Integration with igraph: ggplot works seamlessly with igraph, making it easy to create complex and informative visualizations of your network data. You can use ggplot to visualize network data in a variety of ways, including heatmaps, scatterplots, and bar charts.</li><li>Consistency: ggplot provides a consistent grammar for building plots, which makes it easy to create plots with a consistent style and look across different datasets. This can be particularly useful if you are working with multiple datasets and want to create a consistent visual language for your plots.</li><li>Reproducibility: ggplot produces code that can be easily reproduced, making it easier to share and collaborate on your work. You can also easily modify and update your plots as your data or analysis changes.Overall, using ggplot to plot igraph results can help you create informative, visually appealing, and reproducible visualizations of your network data.</li></ul></div><p>Basic idea of this post is from <a href="https://chrischizinski.github.io/rstats/igraph-ggplotll/">© Christopher Chizinski, 2014</a>. It is an old post but all codes work just fine!</p><h2 id="Example-data-for-igraph">Example data for igraph</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(stringr)<br>library(reshape2)<br>library(ggplot2)<br>library(igraph)<br>library(RColorBrewer)<br>library(qgraph)<br>library(ggthemes)<br><br><br><span class="hljs-comment"># data clean</span><br>dataUU &lt;- read.table(<span class="hljs-string">&quot;https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyUndirectedUnweighted.csv&quot;</span>, header=<span class="hljs-literal">TRUE</span>)<br>TB &lt;- na.omit(melt(dataUU))<br>TB$from &lt;- str_replace_all(TB$from, <span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>)<br><span class="hljs-comment"># width of the edges</span><br>set.seed(<span class="hljs-number">3</span>)<br>TB$value = runif(nrow(TB), <span class="hljs-built_in">min</span>=<span class="hljs-number">0</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">10</span>)<br><span class="hljs-comment"># size of pointsd</span><br>TB_size &lt;- as.data.frame(table(<span class="hljs-built_in">c</span>(as.matrix(TB[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>]))))<br><br>network=graph_from_data_frame(TB[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>] )<br><br>set.seed(<span class="hljs-number">1</span>)<br>e &lt;- get.edgelist(network,<span class="hljs-built_in">names</span>=<span class="hljs-literal">FALSE</span>)<br>l &lt;- qgraph.layout.fruchtermanreingold(e,vcount=vcount(network),  <br>    area=<span class="hljs-number">30</span>*(vcount(network)^<span class="hljs-number">2</span>), repulse.rad=(vcount(network)^<span class="hljs-number">4</span>))  <br>plot(network,  <br>    layout=l, <br>    vertex.size=<span class="hljs-number">4</span>, vertex.label=<span class="hljs-literal">NA</span>,  <br>    edge.arrow.size= <span class="hljs-number">0</span>, <br>)<br></code></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r"><span class="hljs-comment">## convert the layout to a data.frame</span><br>fr.all.df &lt;- as.data.frame(l)<br><span class="hljs-comment">## add in the species codes</span><br>fr.all.df$species &lt;- V(network)$name<br><span class="hljs-comment">## add size for each nodes</span><br>fr.all.df$size &lt;- TB_size$Freq[match(fr.all.df$species, TB_size$Var1)]<br><br>g &lt;- TB[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>]<br>colnames(g) &lt;-<span class="hljs-built_in">c</span>(<span class="hljs-string">&#x27;from&#x27;</span>, <span class="hljs-string">&#x27;to&#x27;</span>)<br>g$weight = TB[[<span class="hljs-number">3</span>]]<br>g$from.x &lt;- fr.all.df$V1[match(g$from, fr.all.df$species)]  <span class="hljs-comment">#  match the from locations from the node data.frame we previously connected</span><br>g$from.y &lt;- fr.all.df$V2[match(g$from, fr.all.df$species)]<br>g$to.x &lt;- fr.all.df$V1[match(g$to, fr.all.df$species)]  <span class="hljs-comment">#  match the to locations from the node data.frame we previously connected</span><br>g$to.y &lt;- fr.all.df$V2[match(g$to, fr.all.df$species)]<br><br>P &lt;-ggplot() +<br>        geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y, size = weight),colour=<span class="hljs-string">&quot;black&quot;</span>, alpha =<span class="hljs-number">.1</span> ) +<br>        geom_point(data=fr.all.df,aes(x=V1,y=V2)) +<br>        geom_text(data=fr.all.df,aes(x=V1,y=V2,label=<span class="hljs-string">&quot;&quot;</span>)) +<br>        theme_map()   + coord_fixed(ratio = <span class="hljs-number">1</span>) + coord_fixed(ratio = <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2023/02/08/pS2NQED.png" alt=""></th><th style="text-align:center"><img src="https://s1.ax1x.com/2023/02/08/pS2N14H.png" alt=""></th></tr></thead><tbody></tbody></table><h2 id="include-size-of-the-dots-and-the-weight-of-edges">include size of the dots and the weight of edges</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">ggplot() +<br>  geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y, size = weight), size = <span class="hljs-built_in">log</span>(g$weight + <span class="hljs-number">1</span>)/<span class="hljs-number">2</span>, colour=<span class="hljs-string">&quot;black&quot;</span>, alpha =<span class="hljs-number">.1</span> ) +<br>  geom_point(data=fr.all.df,aes(x=V1,y=V2, size = size, color = size), alpha = <span class="hljs-number">.8</span>) +<br>  geom_text(data=fr.all.df,aes(x=V1,y=V2,label=<span class="hljs-string">&quot;&quot;</span>)) +<br>  theme_map()   + coord_fixed(ratio = <span class="hljs-number">1</span>) + coord_fixed(ratio = <span class="hljs-number">1</span>) + scale_color_gradient(high = <span class="hljs-string">&#x27;red&#x27;</span>, low = <span class="hljs-string">&#x27;steelblue&#x27;</span>)<br></code></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2023/02/08/pS2UVIg.png" alt=""></p><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Turn igraph result to ggplot2 and more</summary>
    
    
    
    <category term="R" scheme="https://karobben.github.io/categories/R/"/>
    
    <category term="Plot" scheme="https://karobben.github.io/categories/R/Plot/"/>
    
    <category term="GGPLOT" scheme="https://karobben.github.io/categories/R/Plot/GGPLOT/"/>
    
    
    <category term="ggplot2" scheme="https://karobben.github.io/tags/ggplot2/"/>
    
    <category term="network" scheme="https://karobben.github.io/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>How to set a static IP address for Linux</title>
    <link href="https://karobben.github.io/2023/01/31/Linux/linux-static-ip/"/>
    <id>https://karobben.github.io/2023/01/31/Linux/linux-static-ip/</id>
    <published>2023-01-31T16:40:12.000Z</published>
    <updated>2023-02-12T01:23:19.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-set-a-static-ip-for-Pop-os">How to set a static ip for Pop os</h2><ol><li>Find <code>Gateway</code> and the <code>DNS</code> for your network</li></ol><p><img src="https://s1.ax1x.com/2023/02/01/pS0LD5n.png" alt=""><br>Setting → Network → Check the details of your network.<br>Here, <code>Default Route</code> is the <code>Gateway</code>,<br><code>DNS</code> is the <code>DNS</code></p><ol start="2"><li>Find the Netmask for your network by <code>ifconfig</code></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">ifconfig<br></code></pre></td></tr></table></figure></div><pre>eno1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500        inet 192.168.3.1  netmask 255.255.255.0  broadcast 192.168.3.255...</pre><ol start="3"><li>fill them in IPv4 setting</li></ol><p>Fill the address you want and rest of other infor you jut get from above.<br>||<img src="https://s1.ax1x.com/2023/02/01/pS0L62V.png" alt=""></p><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">How to set a static IP address for Linux</summary>
    
    
    
    <category term="Linux" scheme="https://karobben.github.io/categories/Linux/"/>
    
    <category term="System" scheme="https://karobben.github.io/categories/Linux/System/"/>
    
    
    <category term="Linux" scheme="https://karobben.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>IdTrackerAI</title>
    <link href="https://karobben.github.io/2023/01/24/Bioinfor/idtracker/"/>
    <id>https://karobben.github.io/2023/01/24/Bioinfor/idtracker/</id>
    <published>2023-01-24T22:41:05.000Z</published>
    <updated>2023-02-12T01:23:31.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Set-up-Install">Set up/Install</h2><p><a href="http://localhost:4000/2023/01/24/Bioinfor/idtracker/">Documentation</a></p><p>how to install correct pytorch and cuda: <a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">conda create -y --name idtrackerai python=3.7 Tensorflow=2.0.0 cudatoolkit=11.3.1 pytorch=1.10.0<br>conda activate idtrackerai<br>pip install <span class="hljs-string">&quot;idtrackerai[gui]&quot;</span><br></code></pre></td></tr></table></figure></div><h2 id="Idtracker-Data-analysis">Idtracker Data analysis</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> trajectorytools <span class="hljs-keyword">as</span> tt<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>trajectories_file_path = <span class="hljs-string">&#x27;trajectories_wo_gaps/trajectories_wo_gaps.npy&#x27;</span><br>trajectories_dict = np.load(trajectories_file_path, allow_pickle=<span class="hljs-literal">True</span>).item()<br>trajectories = trajectories_dict[<span class="hljs-string">&#x27;trajectories&#x27;</span>]<br>tr = tt.Trajectories.from_positions(trajectories)<br><br><br>fig, ax_trajectories = plt.subplots(figsize=(<span class="hljs-number">5</span>,<span class="hljs-number">5</span>))<br>frame_range = <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>*<span class="hljs-number">30</span>) <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(tr.number_of_individuals):<br>    ax_trajectories.plot(tr.s[frame_range,i,<span class="hljs-number">0</span>], tr.s[frame_range,i,<span class="hljs-number">1</span>])<br>    ax_trajectories.set_aspect(<span class="hljs-string">&#x27;equal&#x27;</span>,<span class="hljs-string">&#x27;box&#x27;</span>)<br>    ax_trajectories.set_title(<span class="hljs-string">&#x27;Trajectories&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>    ax_trajectories.set_xlabel(<span class="hljs-string">&#x27;X (BL)&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>    ax_trajectories.set_ylabel(<span class="hljs-string">&#x27;Y (BL)&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>fig.savefig(<span class="hljs-string">&quot;trajectory2.png&quot;</span>)<br></code></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2023/01/25/pSt1TnH.png" alt="Trajectory"></p><p>With video</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> colors<br><br>Palette = [<span class="hljs-string">&quot;#B03D3B&quot;</span>, <span class="hljs-string">&quot;#B86C3D&quot;</span>, <span class="hljs-string">&quot;#BF8040&quot;</span>, <span class="hljs-string">&quot;#ACC144&quot;</span>, <span class="hljs-string">&quot;#78C144&quot;</span>, <span class="hljs-string">&quot;#47C291&quot;</span>, <span class="hljs-string">&quot;#478BC2&quot;</span>, <span class="hljs-string">&quot;#4760C2&quot;</span>, <span class="hljs-string">&quot;#574BC3&quot;</span>, <span class="hljs-string">&quot;#834BC3&quot;</span>, <span class="hljs-string">&quot;#C34BAB&quot;</span>, <span class="hljs-string">&quot;#C14465&quot;</span>, <span class="hljs-string">&quot;#DEB59C&quot;</span>, <span class="hljs-string">&quot;#D7DF9F&quot;</span>, <span class="hljs-string">&quot;#A7DF9F&quot;</span>, <span class="hljs-string">&quot;#9FDFD9&quot;</span>, <span class="hljs-string">&quot;#A3B3E0&quot;</span>, <span class="hljs-string">&quot;#D0A3E0&quot;</span>, <span class="hljs-string">&quot;#E2A7CD&quot;</span>, <span class="hljs-string">&quot;#361712&quot;</span>, <span class="hljs-string">&quot;#1A3913&quot;</span>, <span class="hljs-string">&quot;#132B39&quot;</span>, <span class="hljs-string">&quot;#2D1339&quot;</span>, <span class="hljs-string">&quot;#391330&quot;</span>]<br>Num = <span class="hljs-number">0</span><br><span class="hljs-comment">#V_loc = &#x27;/mnt/Ken_lap/Vlog/upload/promE-GFP/20210622_promE-GFP_C0074_Trim.mp4&#x27;</span><br>V_loc = <span class="hljs-string">&#x27;/mnt/Ken_lap/Vlog/upload/promE-fru-IR-v330035/20220116-promE-v330035-298d-C0379_Trim-2.mp4&#x27;</span><br><span class="hljs-comment">#V_loc = &#x27;/mnt/Ken_lap/Vlog/upload/elav-GS-fru-IR-V330035/20220123C0394_Trim.mp4&#x27;</span><br><br>cap=cv2.VideoCapture(V_loc)<br>fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;XVID&#x27;</span>)<br>out = cv2.VideoWriter(<span class="hljs-string">&#x27;output.avi&#x27;</span>,fourcc, <span class="hljs-number">20.0</span>, (<span class="hljs-number">1920</span>,<span class="hljs-number">1080</span>))<br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">True</span>):<br>  ret,frame=cap.read()<br>  <span class="hljs-keyword">for</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(trajectories[<span class="hljs-number">0</span>])):<br>    XY = np.array(trajectories[Num][<span class="hljs-built_in">id</span>], dtype = <span class="hljs-built_in">int</span>)<br>    C = np.array(colors.to_rgba(Palette[<span class="hljs-built_in">id</span>]))[:-<span class="hljs-number">1</span>] * <span class="hljs-number">225</span><br>    cv2.putText(frame, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>) ,(XY[<span class="hljs-number">0</span>], XY[<span class="hljs-number">1</span>]), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1</span>, C, <span class="hljs-number">2</span>)<br><br>  cv2.imshow(<span class="hljs-string">&quot;video&quot;</span>,frame)<br>  Num +=<span class="hljs-number">1</span> <br>  out.write(frame)<br>  <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">30</span>)&amp;<span class="hljs-number">0xFF</span>==<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>):<br>      cv2.destroyAllWindows()<br>      <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> trajectorytools <span class="hljs-keyword">as</span> tt<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> json<br><br><br>F = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data/csv/20220116-promE-v330035-298d-C0379_Trim-2.mp4_.json&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read()<br>Dict = json.loads(F)<br>trajectories = np.array([[Dict[i][ii][<span class="hljs-string">&#x27;body&#x27;</span>][:<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> np.sort([ii <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> Dict[<span class="hljs-string">&#x27;12&#x27;</span>].keys()])] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Dict.keys()])<br>tr = tt.Trajectories.from_positions(trajectories)<br><br>fig, ax_trajectories = plt.subplots(figsize=(<span class="hljs-number">5</span>,<span class="hljs-number">5</span>))<br>frame_range = <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>*<span class="hljs-number">30</span>) <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(tr.number_of_individuals):<br>    ax_trajectories.plot(tr.s[frame_range,i,<span class="hljs-number">0</span>], tr.s[frame_range,i,<span class="hljs-number">1</span>])<br>    ax_trajectories.set_aspect(<span class="hljs-string">&#x27;equal&#x27;</span>,<span class="hljs-string">&#x27;box&#x27;</span>)<br>    ax_trajectories.set_title(<span class="hljs-string">&#x27;Trajectories&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>    ax_trajectories.set_xlabel(<span class="hljs-string">&#x27;X (BL)&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>    ax_trajectories.set_ylabel(<span class="hljs-string">&#x27;Y (BL)&#x27;</span>,fontsize=<span class="hljs-number">24</span>)<br>    ax_trajectories.set_aspect(<span class="hljs-number">.5</span>)<br><br><br>fig.savefig(<span class="hljs-string">&quot;20220123C0394_Trim_30.png&quot;</span>)<br><br><br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> colors<br><br>Palette = [<span class="hljs-string">&quot;#B03D3B&quot;</span>, <span class="hljs-string">&quot;#B86C3D&quot;</span>, <span class="hljs-string">&quot;#BF8040&quot;</span>, <span class="hljs-string">&quot;#ACC144&quot;</span>, <span class="hljs-string">&quot;#78C144&quot;</span>, <span class="hljs-string">&quot;#47C291&quot;</span>, <span class="hljs-string">&quot;#478BC2&quot;</span>, <span class="hljs-string">&quot;#4760C2&quot;</span>, <span class="hljs-string">&quot;#574BC3&quot;</span>, <span class="hljs-string">&quot;#834BC3&quot;</span>, <span class="hljs-string">&quot;#C34BAB&quot;</span>, <span class="hljs-string">&quot;#C14465&quot;</span>, <span class="hljs-string">&quot;#DEB59C&quot;</span>, <span class="hljs-string">&quot;#D7DF9F&quot;</span>, <span class="hljs-string">&quot;#A7DF9F&quot;</span>, <span class="hljs-string">&quot;#9FDFD9&quot;</span>, <span class="hljs-string">&quot;#A3B3E0&quot;</span>, <span class="hljs-string">&quot;#D0A3E0&quot;</span>, <span class="hljs-string">&quot;#E2A7CD&quot;</span>, <span class="hljs-string">&quot;#361712&quot;</span>, <span class="hljs-string">&quot;#1A3913&quot;</span>, <span class="hljs-string">&quot;#132B39&quot;</span>, <span class="hljs-string">&quot;#2D1339&quot;</span>, <span class="hljs-string">&quot;#391330&quot;</span>]<br>V_list = &#123;<span class="hljs-string">&quot;20210622_promE-GFP_C0074_Trim.mp4&quot;</span>: <span class="hljs-string">&#x27;/mnt/8A26661926660713/Vlog/upload/promE-GFP/20210622_promE-GFP_C0074_Trim.mp4&#x27;</span>,<br>    <span class="hljs-string">&quot;20220116-promE-v330035-298d-C0379_Trim-2.mp4&quot;</span>: <span class="hljs-string">&#x27;/mnt/8A26661926660713/Vlog/upload/promE-fru-IR-v330035/20220116-promE-v330035-298d-C0379_Trim-2.mp4&#x27;</span>,<br>    <span class="hljs-string">&quot;20220123C0394_Trim.mp4&quot;</span>: <span class="hljs-string">&#x27;/mnt/8A26661926660713/Vlog/upload/elav-GS-fru-IR-V330035/20220123C0394_Trim.mp4&#x27;</span>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Video_output</span>(<span class="hljs-params">Video, V_loc</span>):</span><br>  loc = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">&quot;data/csv&quot;</span>) <span class="hljs-keyword">if</span> Video <span class="hljs-keyword">in</span> i <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;json&quot;</span> <span class="hljs-keyword">in</span> i][<span class="hljs-number">0</span>]<br>  F = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data/csv/&quot;</span> + loc , <span class="hljs-string">&#x27;r&#x27;</span>).read()<br>  Dict = json.loads(F)<br>  trajectories = np.array([[Dict[i][ii][<span class="hljs-string">&#x27;body&#x27;</span>][:<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> np.sort([ii <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> Dict[<span class="hljs-string">&#x27;12&#x27;</span>].keys()])] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Dict.keys()])<br>  tr = tt.Trajectories.from_positions(trajectories)<br><br>  Num = <span class="hljs-number">0</span><br>  cap=cv2.VideoCapture(V_loc)<br>  fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;XVID&#x27;</span>)<br>  out = cv2.VideoWriter(Video + <span class="hljs-string">&quot;_30.avi&quot;</span>, fourcc, <span class="hljs-number">20.0</span>, (<span class="hljs-number">1920</span>,<span class="hljs-number">1080</span>))<br>  <br>  List = []<br>  <span class="hljs-keyword">while</span> Num &lt;= <span class="hljs-number">900</span>:<br>    ret,frame=cap.read()<br>    List += [trajectories[Num]]<br>    List = List[-<span class="hljs-number">100</span>:]<br>    <span class="hljs-keyword">for</span> Trace <span class="hljs-keyword">in</span> List:<br>      <span class="hljs-keyword">for</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Trace)):<br>        XY = np.array(Trace[<span class="hljs-built_in">id</span>]  * (<span class="hljs-number">1920</span>, <span class="hljs-number">1080</span>), dtype = <span class="hljs-built_in">int</span>)<br>        C = np.array(colors.to_rgba(Palette[<span class="hljs-built_in">id</span>]))[:-<span class="hljs-number">1</span>] * <span class="hljs-number">225</span><br>        cv2.putText(frame, <span class="hljs-string">&quot;.&quot;</span> ,(XY[<span class="hljs-number">0</span>], XY[<span class="hljs-number">1</span>]), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1</span>, C, <span class="hljs-number">2</span>)<br><br>    Trace = List[-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Trace)):<br>      XY = np.array(Trace[<span class="hljs-built_in">id</span>]  * (<span class="hljs-number">1920</span>, <span class="hljs-number">1080</span>), dtype = <span class="hljs-built_in">int</span>)<br>      C = np.array(colors.to_rgba(Palette[<span class="hljs-built_in">id</span>]))[:-<span class="hljs-number">1</span>] * <span class="hljs-number">225</span><br>      cv2.putText(frame, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>) ,(XY[<span class="hljs-number">0</span>], XY[<span class="hljs-number">1</span>]), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1</span>, C, <span class="hljs-number">2</span>)<br><br>    cv2.imshow(<span class="hljs-string">&quot;video&quot;</span>,frame)<br>    Num +=<span class="hljs-number">1</span> <br>    out.write(frame)<br>    <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">30</span>)&amp;<span class="hljs-number">0xFF</span>==<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>):<br>        cv2.destroyAllWindows()<br>        out.write(frame)<br>        <span class="hljs-keyword">break</span><br>  cv2.destroyAllWindows()<br>  out.write(frame)<br><br><br><br><span class="hljs-keyword">for</span> Video <span class="hljs-keyword">in</span> V_list.keys():<br>    Video_output(Video, V_list[Video])<br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">IdTrackerAI</summary>
    
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Bioinformatics/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="Machine Learning" scheme="https://karobben.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>VS code</title>
    <link href="https://karobben.github.io/2023/01/13/Linux/vscode/"/>
    <id>https://karobben.github.io/2023/01/13/Linux/vscode/</id>
    <published>2023-01-13T20:31:21.000Z</published>
    <updated>2023-02-12T01:23:35.920Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VS-code">VS code</h2><p>I am a loyal Atom user. But Atom has died and I have to move on.</p><h2 id="Hotkeys">Hotkeys</h2><p><a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf">Keyboard shortcuts for Linux</a></p><ul><li>Fold all: <code>ctrl+k</code> <code>ctrl+0</code></li><li>Release all: <code>ctrl+k</code> <code>ctrl+j</code></li><li>wrap text: <code>Alt+z</code></li></ul><h2 id="Plugins-List">Plugins List</h2><p><code>ctrl+shift+x</code>  to open and search plugins.</p><ul><li>Markdown Preview Enhance</li><li>R</li><li>Code Spell Checker</li></ul><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">VS code, ide for all</summary>
    
    
    
    <category term="Linux" scheme="https://karobben.github.io/categories/Linux/"/>
    
    <category term="Software" scheme="https://karobben.github.io/categories/Linux/Software/"/>
    
    
    <category term="Linux" scheme="https://karobben.github.io/tags/Linux/"/>
    
    <category term="Software" scheme="https://karobben.github.io/tags/Software/"/>
    
    <category term="IDE" scheme="https://karobben.github.io/tags/IDE/"/>
    
    <category term="vscode" scheme="https://karobben.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>String DB</title>
    <link href="https://karobben.github.io/2023/01/09/Bioinfor/string-db/"/>
    <id>https://karobben.github.io/2023/01/09/Bioinfor/string-db/</id>
    <published>2023-01-10T03:01:48.000Z</published>
    <updated>2023-02-12T01:23:41.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="String-Database">String Database</h2><h3 id="Download-Specious-Network">Download Specious Network</h3><p><a href="https://string-db.org/cgi/download?sessionId=byDJhSpQeXPo&amp;species_text=Drosophila+melanogaster">Link to downloading the networks</a></p><p>An example of download files:</p><ul><li>Link file: <code>7227.protein.physical.links.full.v11.5.txt</code></li><li>Protein annotation: <code>7227.protein.info.v11.5.txt.gz</code></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">TB &lt;- read.table(<span class="hljs-string">&quot;7227.protein.links.detailed.v11.5.txt&quot;</span>, header = <span class="hljs-built_in">T</span>)<br><br><span class="hljs-built_in">dim</span>(TB)<br>str(TB)<br></code></pre></td></tr></table></figure></div><pre>[1] 4343798      10'data.frame':4343798 obs. of  10 variables: $ protein1      : chr  "7227.FBpp0070001" "7227.FBpp0070001" "7227.FBpp0070001" "7227.FBpp0070001" ... $ protein2      : chr  "7227.FBpp0293850" "7227.FBpp0087873" "7227.FBpp0079990" "7227.FBpp0080090" ... $ neighborhood  : int  0 0 0 0 0 0 0 0 0 0 ... $ fusion        : int  0 0 0 0 0 0 0 0 0 0 ... $ cooccurence   : int  0 0 0 0 0 0 0 0 0 0 ... $ coexpression  : int  151 153 167 298 446 371 242 371 373 238 ... $ experimental  : int  0 0 0 0 0 0 0 0 0 0 ... $ database      : int  0 0 0 0 0 0 0 0 0 0 ... $ textmining    : int  0 0 0 0 0 0 0 0 0 0 ... $ combined_score: int  150 152 167 298 446 371 241 371 373 237 ...</pre><ul><li>Protein 1: Start protein</li><li>Protein 2: Connections from Protein 1 to protein 2</li><li>neighborhood: Physical neighborhood on the Genome</li><li>fusion: raw fusion score for COG mode (deprecated).</li><li>cooccurence: raw cooccurence score for COG mode (deprecated).</li><li>coexpression: expression patterns in a group of RNA-Seq are similar</li><li>experimental: experimental score (derived from experimental data, such as, affinity chromatography).</li><li>database: database score (derived from curated data of various databases).</li><li>textmining:  textmining score (derived from co-occurring mentioning of gene/protein names in abstracts).</li><li>combined_score: scores in total</li></ul><p>From:</p><ul><li><a href="https://string-db.org/help/database/#table-networkscore_types">Table: network.score_types</a></li><li><a href="https://string-db.org/help/getting_started/">Starting Point</a></li></ul><div class="admonition question"><p class="admonition-title">How do I select a reasonable score cut-off value for my analysis?</p><p>You can use the score cut-off to limit the number of interactions to those that have higher confidence and are more likely to be true positives. Setting the cutoff lower will increase coverage but also a fraction of false positives. You have to choose some <strong>arbitrary number</strong> based on the number of interactions you need for your analysis.</p></div><div class="admonition question"><p class="admonition-title">What is co-occurrence</p><p>A type of phylogenetic profile – the patterns of the presence or absence of orthologs across many organisms<a href="https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002340">© Pan-Jun Kim, 2011</a></p></div><h3 id="Example-in-R">Example in R</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(ggplot2)<br>library(stringr)<br>library(igraph)<br>library(reshape2)<br><br>Anno &lt;-  read.csv(<span class="hljs-string">&quot;7227.protein.info.v11.5.txt&quot;</span>, sep =<span class="hljs-string">&#x27;\t&#x27;</span>, header = <span class="hljs-built_in">T</span>, <span class="hljs-built_in">quote</span> = <span class="hljs-string">&quot;&quot;</span>)<br>Anno[[<span class="hljs-number">1</span>]] &lt;- str_remove(Anno[[<span class="hljs-number">1</span>]], <span class="hljs-string">&quot;7227.&quot;</span>)<br><br>TB &lt;- read.table(<span class="hljs-string">&quot;7227.protein.links.detailed.v11.5.txt&quot;</span>, header = <span class="hljs-built_in">T</span>)<br>TB2 &lt;- TB[<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;protein1&quot;</span>, <span class="hljs-string">&quot;protein2&quot;</span>, <span class="hljs-string">&quot;fusion&quot;</span>, <span class="hljs-string">&quot;cooccurence&quot;</span>, <span class="hljs-string">&quot;coexpression&quot;</span>, <span class="hljs-string">&quot;experimental&quot;</span>)]<br>TB2$protein1 &lt;- str_remove(TB2$protein1, <span class="hljs-string">&quot;7227.&quot;</span>)<br>TB2$protein2 &lt;- str_remove(TB2$protein2, <span class="hljs-string">&quot;7227.&quot;</span>)<br><br>TB_df &lt;- apply(TB2[-<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)], <span class="hljs-number">1</span>, <span class="hljs-built_in">sum</span>)<br><br>N = <span class="hljs-number">18</span>+ which.max(density(TB_df[which(TB_df&gt;<span class="hljs-number">0</span>)])$y[-<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">18</span>)])<br>X = density(TB_df[which(TB_df&gt;<span class="hljs-number">0</span>)])$x[N]<br>Y = density(TB_df[which(TB_df&gt;<span class="hljs-number">0</span>)])$y[N]<br><br>ggplot() + geom_density(aes(x= TB_df[which(TB_df&gt;<span class="hljs-number">0</span>)])) + theme_bw() +<br>    geom_vline(xintercept =  X) +<br>    geom_text(aes(x= X, y = Y, label= <span class="hljs-built_in">round</span>(X, <span class="hljs-number">2</span>)), hjust = <span class="hljs-number">0</span>, vjust = <span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># LIST</span><br><br>LIST &lt;- <span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;FBpp0070483&quot;</span>, <span class="hljs-string">&quot;FBpp0288697&quot;</span>, <span class="hljs-string">&quot;FBpp0304573&quot;</span>, <span class="hljs-string">&quot;FBpp0305946&quot;</span>, <span class="hljs-string">&quot;FBpp0300852&quot;</span>, <span class="hljs-string">&quot;FBpp0083503&quot;</span>, <span class="hljs-string">&quot;FBpp0297544&quot;</span>, <span class="hljs-string">&quot;FBpp0085082&quot;</span>, <span class="hljs-string">&quot;FBpp0288660&quot;</span>, <span class="hljs-string">&quot;FBpp0077739&quot;</span>, <span class="hljs-string">&quot;FBpp0081139&quot;</span>, <span class="hljs-string">&quot;FBpp0293081&quot;</span>, <span class="hljs-string">&quot;FBpp0079676&quot;</span>, <span class="hljs-string">&quot;FBpp0288515&quot;</span>, <span class="hljs-string">&quot;FBpp0297890&quot;</span>, <span class="hljs-string">&quot;FBpp0304299&quot;</span>, <span class="hljs-string">&quot;FBpp0306192&quot;</span>, <span class="hljs-string">&quot;FBpp0074686&quot;</span>, <span class="hljs-string">&quot;FBpp0070417&quot;</span>, <span class="hljs-string">&quot;FBpp0086911&quot;</span>, <span class="hljs-string">&quot;FBpp0289616&quot;</span>)<br><br><span class="hljs-comment"># Try threshold at 2000</span><br><span class="hljs-comment"># TB3 &lt;- TB2[which(TB_df&gt;1000),]</span><br>TB3 &lt;- rbind(TB2[TB2$protein1 %in% LIST,], TB2[TB2$protein2 %in% LIST,])<br>TB_df &lt;- apply(TB3[-<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">2</span>)], <span class="hljs-number">1</span>, <span class="hljs-built_in">sum</span>)<br>TB3 &lt;- TB3[which(TB_df&gt;<span class="hljs-number">150</span>),]<br><span class="hljs-built_in">length</span>(unique(<span class="hljs-built_in">c</span>(TB3$protein1, TB3$protein2 )))<br><span class="hljs-comment"># 173; we have 173 unique proteins</span><br><br><br><span class="hljs-comment"># plot it with igraph</span><br>TB3$CN = <span class="hljs-number">1</span><br>TB4 &lt;- reshape(TB3[<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;protein1&quot;</span>, <span class="hljs-string">&quot;protein2&quot;</span>, <span class="hljs-string">&quot;CN&quot;</span>)], idvar = <span class="hljs-string">&quot;protein1&quot;</span>, timevar = <span class="hljs-string">&quot;protein2&quot;</span>, direction = <span class="hljs-string">&quot;wide&quot;</span>)<br>rownames(TB4) &lt;- TB4[[<span class="hljs-number">1</span>]]<br>TB4 &lt;- TB4[-<span class="hljs-number">1</span>]<br>colnames(TB4) &lt;- str_remove(colnames(TB4), <span class="hljs-string">&quot;CN.&quot;</span>)<br>TB4[<span class="hljs-built_in">is.na</span>(TB4)] &lt;- <span class="hljs-number">0</span><br><br>network=graph_from_adjacency_matrix(as.matrix(TB4) , mode=<span class="hljs-string">&#x27;undirected&#x27;</span>, diag=<span class="hljs-built_in">T</span> )<br><br>TB4.Size &lt;- as.data.frame(table(<span class="hljs-built_in">c</span>(TB3$protein1, TB3$protein2 )))<br>TB4.Size &lt;- TB4.Size[match(colnames(TB4),TB4.Size$Var1),]<br>TB4.Size$Anno &lt;- Anno[[<span class="hljs-number">2</span>]][match(TB4.Size$Var1,Anno[[<span class="hljs-number">1</span>]])]<br>TB4.Size$Anno2 = <span class="hljs-string">&quot;&quot;</span><br>TB4.Size$Anno2[which(TB4.Size$Freq&gt;=<span class="hljs-number">100</span>)] &lt;- TB4.Size$Anno[which(TB4.Size$Freq&gt;=<span class="hljs-number">100</span>)]<br><span class="hljs-comment">##DefauTB4.Size$Anno2 = &quot;&quot;</span><br>set.seed(<span class="hljs-number">1</span>)<br>par(mar=<span class="hljs-built_in">c</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))<br>plot(network,    <br>    vertex.size= <span class="hljs-built_in">log</span>(TB4.Size$Freq +<span class="hljs-number">1</span>),<br>    vertex.label = TB4.Size$Anno2 ,<br>    vertex.label.size= <span class="hljs-built_in">log</span>(TB4.Size$Freq +<span class="hljs-number">1</span>) ,<br>    vertex.frame.color= adjustcolor(<span class="hljs-string">&quot;salmon&quot;</span>, alpha.f = <span class="hljs-number">.5</span>),<br>    vertex.color = adjustcolor(<span class="hljs-string">&quot;salmon&quot;</span>, alpha.f = <span class="hljs-number">.5</span>),<br>    edge.color = adjustcolor(<span class="hljs-string">&quot;grey&quot;</span>, alpha.f = <span class="hljs-number">.1</span>), layout = layout_nicely)<br><br>lay = layout_with_graphopt(network)<br>R = <span class="hljs-built_in">max</span>(<span class="hljs-built_in">abs</span>(lay))<br>lay_Y = <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">asin</span>(<span class="hljs-built_in">sin</span>(lay[,<span class="hljs-number">2</span>]/<span class="hljs-built_in">sqrt</span>(lay[,<span class="hljs-number">1</span>]^<span class="hljs-number">2</span> + lay[,<span class="hljs-number">2</span>]^<span class="hljs-number">2</span>))) * R)<br>lay_X = <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">acos</span>(<span class="hljs-built_in">cos</span>(lay[,<span class="hljs-number">1</span>]/<span class="hljs-built_in">sqrt</span>(lay[,<span class="hljs-number">1</span>]^<span class="hljs-number">2</span> + lay[,<span class="hljs-number">2</span>]^<span class="hljs-number">2</span>))) * R)<br>lay_X[lay[,<span class="hljs-number">1</span>]&lt;<span class="hljs-number">0</span>] &lt;- lay_X[lay[,<span class="hljs-number">1</span>]&lt;<span class="hljs-number">0</span>] * -<span class="hljs-number">1</span><br>lay_Y[lay[,<span class="hljs-number">2</span>]&lt;<span class="hljs-number">0</span>] &lt;- lay_Y[lay[,<span class="hljs-number">2</span>]&lt;<span class="hljs-number">0</span>] * -<span class="hljs-number">1</span><br><br>LX &lt;- 2*(lay_X -lay[,<span class="hljs-number">1</span>]) <span class="hljs-comment">#+ lay[,1]</span><br>LY &lt;- 2*(lay_Y -lay[,<span class="hljs-number">2</span>]) <span class="hljs-comment">#+ lay[,2]</span><br><br>LAY &lt;- matrix(<span class="hljs-built_in">c</span>(LX, LY) , ncol = <span class="hljs-number">2</span>)<br><span class="hljs-comment">#layout_with_mds</span><br><span class="hljs-comment">#layout_nicely</span><br><span class="hljs-comment">#layout_with_graphopt</span><br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2023/01/10/pSejUfS.png" alt="string-db Density plot"></th></tr></thead><tbody></tbody></table><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">STRING database is a web-based tool that provides information on protein-protein interactions, including physical and functional associations. It consolidates and scores data from multiple sources, making it a valuable resource for functional annotation and network analysis in the life sciences. &lt;a title=&#39;ChatGPT&#39;&gt;Who sad this?&lt;/a&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Cellpose</title>
    <link href="https://karobben.github.io/2022/12/21/Bioinfor/cellpose/"/>
    <id>https://karobben.github.io/2022/12/21/Bioinfor/cellpose/</id>
    <published>2022-12-21T23:55:36.000Z</published>
    <updated>2023-02-12T01:23:46.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CellPose">CellPose</h2><p>CellPose is an awesome machine learning-based tool that could segment cells very easily. The pre-trained model could suit multiple scenarios and fit the basic usages. And it can do more than cell segmentation (Though the cell pose looks fancy, I still didn’t know who to work with the results.) To learn more, please read the <a href="https://cellpose.readthedocs.io/en/latest/index.html">documentation</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> cellpose <span class="hljs-keyword">import</span> models<br><span class="hljs-keyword">from</span> cellpose.io <span class="hljs-keyword">import</span> imread<br><br><span class="hljs-comment"># model_type=&#x27;cyto&#x27; or model_type=&#x27;nuclei&#x27;</span><br>model = models.Cellpose(gpu=<span class="hljs-literal">False</span>, model_type=<span class="hljs-string">&#x27;cyto&#x27;</span>)<br><br>files = [<span class="hljs-string">&#x27;img0.tif&#x27;</span>, <span class="hljs-string">&#x27;img1.tif&#x27;</span>]<br>imgs = [imread(f) <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> files]<br>masks, flows, styles, diams = model.<span class="hljs-built_in">eval</span>(imgs, diameter=<span class="hljs-literal">None</span>, channels=[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],<br>                                         flow_threshold=<span class="hljs-number">0.4</span>, do_3D=<span class="hljs-literal">False</span>)<br><br><br><br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">A quick note of how to use the cellpose to do cell segmentation</summary>
    
    
    
    <category term="Bioinfor" scheme="https://karobben.github.io/categories/Bioinfor/"/>
    
    
    <category term="Bioinfor" scheme="https://karobben.github.io/tags/Bioinfor/"/>
    
    <category term="Machine Learning" scheme="https://karobben.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>TCGA Database with R</title>
    <link href="https://karobben.github.io/2022/12/06/Bioinfor/tcga/"/>
    <id>https://karobben.github.io/2022/12/06/Bioinfor/tcga/</id>
    <published>2022-12-06T19:02:44.000Z</published>
    <updated>2023-02-12T01:24:43.730Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TCGA-Database">TCGA Database</h2><p>Reference:</p><ul><li><a href="https://bioconductor.org/packages/release/bioc/vignettes/TCGAbiolinks/inst/doc/download_prepare.html#Downloading_and_preparing_data_for_analysis">Documentation</a></li><li><a href="https://support.bioconductor.org/p/133576/">Bioconductor</a></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(TCGAbiolinks)<br>library(SummarizedExperiment)<br>library(dplyr)<br>library(DT)<br><br>projects &lt;- TCGAbiolinks:::getGDCprojects()$project_id<br>projects &lt;- projects[grepl(<span class="hljs-string">&#x27;^TCGA&#x27;</span>,projects,perl=<span class="hljs-built_in">T</span>)]<br><br>query &lt;- GDCquery(project = projects,<br>                  data.category = <span class="hljs-string">&quot;Transcriptome Profiling&quot;</span>,  <br>                  data.type = <span class="hljs-string">&quot;Gene Expression Quantification&quot;</span>,  <br>                  workflow.type = <span class="hljs-string">&quot;STAR - Counts&quot;</span>)<br><span class="hljs-comment"># counts &lt;- GDCprepare(query,save = TRUE, save.filename = &quot;all_tumor_htseq_raw_counts.rda&quot;)</span><br>data &lt;- GDCprepare(query = query)<br><br><span class="hljs-comment"># download and fetch the data from local</span><br>GDCdownload(query = query,<br>              method = <span class="hljs-string">&quot;api&quot;</span>,<br>              files.per.chunk = <span class="hljs-number">60</span>,<br>              directory = <span class="hljs-string">&quot;mRNA&quot;</span>)<br><br>expdat &lt;- GDCprepare(query = query,<br>                       directory = <span class="hljs-string">&quot;mRNA&quot;</span>)<br></code></pre></td></tr></table></figure></div><p>If you download successfully, you would see the red codes below.</p><code><pre style="background-color:white; color:red">--------------------------------------o GDCquery: Searching in GDC database--------------------------------------Genome of reference: hg38--------------------------------------------oo Accessing GDC. This might take a while...--------------------------------------------ooo Project: TCGA-ESCAooo Project: TCGA-SARCooo Project: TCGA-CESCooo Project: TCGA-UCEC--------------------oo Filtering results--------------------ooo By data.typeooo By workflow.type----------------oo Checking data----------------ooo Checking if there are duplicated casesooo Checking if there are results for the query-------------------o Preparing output-------------------</pre></code><div class="admonition note"><p class="admonition-title">Check the group and counts information</p></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># Check the mate information</span><br>as.data.frame(colData(data))<br><span class="hljs-comment"># Check Exression counts</span><br>assay(data)[<span class="hljs-number">1</span>:<span class="hljs-number">6</span>,<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br></code></pre></td></tr></table></figure></div><pre>TCGA-DX-A6Z0-01A-13R-A36F-07 TCGA-X2-A95T-01A-11R-A37L-07 TCGA-DX-A6BF-01A-11R-A30C-07 TCGA-DX-A1L1-01A-11R-A24X-07ENSG00000000003.15                         3415                          861                          316                         4004ENSG00000000005.6                           340                            4                           14                            0ENSG00000000419.13                         2296                          905                          938                         3935ENSG00000000457.14                          594                          454                           85                          595ENSG00000000460.17                          626                          318                           62                          458ENSG00000000938.13                          259                          138                          271                          381</pre><style>pre {  background-color:#38393d;  color: #5fd381;}</style><div class="admonition note"><p class="admonition-title">why download data</p></div><p>Sometimes, you may receive errors:</p><pre>Error in GDCquery(project = projects[3], data.category = "Transcriptome Profiling",  :  Please set a valid workflow.type argument from the list below:  => STAR - Counts</pre><p>You can’t turn the “GDCprepare” results into data directly. You need to download it first and convert it by “GDCprepare”. See details in <a href="https://github.com/BioinformaticsFMRP/TCGAbiolinks/issues/153">github</a></p><h2 id="Differential-Expression-Genes">Differential Expression Genes</h2><p>Reference: <a href="https://rdrr.io/bioc/TCGAbiolinks/f/vignettes/analysis.Rmd">rdrr.io</a></p><p>I am failed to get the expression matrix by using <code>GDCprepare</code>. According to [© g27182818, 2022], it caused by STAR-Count files has more infor than <code>GDCprepare</code> need. What ever, a modified solution could be like codes below:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(<span class="hljs-string">&#x27;TCGAbiolinks&#x27;</span>)<br>library(stringr)<br><br>project_name &lt;- <span class="hljs-string">&quot;TCGA-CHOL&quot;</span><br><br><span class="hljs-comment"># Defines the query to the GDC</span><br>query &lt;- GDCquery(project = project_name,<br>                  data.category = <span class="hljs-string">&quot;Transcriptome Profiling&quot;</span>,<br>                  data.type = <span class="hljs-string">&quot;Gene Expression Quantification&quot;</span>,<br>                  experimental.strategy = <span class="hljs-string">&quot;RNA-Seq&quot;</span>,<br>                  workflow.type = <span class="hljs-string">&quot;STAR - Counts&quot;</span>)<br><br><span class="hljs-comment"># Get metadata matrix</span><br>metadata &lt;- query[[<span class="hljs-number">1</span>]][[<span class="hljs-number">1</span>]]<br><br><span class="hljs-comment"># Get main directory where data is stored</span><br>main_dir &lt;- file.path(<span class="hljs-string">&quot;mRNA&quot;</span>, project_name)<br><span class="hljs-comment"># Get file list of downloaded files</span><br>file_list &lt;- file.path(<span class="hljs-string">&quot;mRNA&quot;</span>, project_name,list.files(main_dir,recursive = <span class="hljs-literal">TRUE</span>)) <br><br><span class="hljs-comment"># Read first downloaded to get gene names</span><br>test_tab &lt;- read.table(file = file_list[<span class="hljs-number">1</span>], sep = <span class="hljs-string">&#x27;\t&#x27;</span>, header = <span class="hljs-literal">TRUE</span>)<br><span class="hljs-comment"># Delete header lines that don&#x27;t contain usefull information</span><br>test_tab &lt;- test_tab[-<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">4</span>),]<br><span class="hljs-comment"># STAR counts and tpm datasets</span><br>tpm_data_frame &lt;- data.frame(test_tab[,<span class="hljs-number">1</span>])<br>count_data_frame &lt;- data.frame(test_tab[,<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># Append cycle to get the complete matrix</span><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(file_list))) &#123;<br>  <span class="hljs-comment"># Read table</span><br>  test_tab &lt;- read.table(file = file_list[i], sep = <span class="hljs-string">&#x27;\t&#x27;</span>, header = <span class="hljs-literal">TRUE</span>)<br>  <span class="hljs-comment"># Delete not useful lines</span><br>  test_tab &lt;- test_tab[-<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">4</span>),]<br>  <span class="hljs-comment"># Column bind of tpm and counts data</span><br>  tpm_data_frame &lt;- cbind(tpm_data_frame, test_tab[,<span class="hljs-number">7</span>])<br>  count_data_frame &lt;- cbind(count_data_frame, test_tab[,<span class="hljs-number">4</span>])<br>  <span class="hljs-comment"># Print progres from 0 to 1</span><br>  print(i/<span class="hljs-built_in">length</span>(file_list))<br>&#125;<br><br>ID_list &lt;- as.data.frame(str_split_fixed(file_list, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">7</span>))[[<span class="hljs-number">6</span>]]<br><br>row.names(count_data_frame) &lt;- count_data_frame[[<span class="hljs-number">1</span>]]<br>count_data_frame &lt;- count_data_frame[-<span class="hljs-number">1</span>]<br>colnames(count_data_frame) &lt;- metadata$cases[match(ID_list, metadata$id)]<br><br>N_control = <span class="hljs-built_in">length</span>(which(<span class="hljs-built_in">as.numeric</span>(gsub(<span class="hljs-string">&quot;[^0-9.-]&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, as.data.frame(str_split_fixed(metadata$cases, <span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-number">5</span>))[[<span class="hljs-number">4</span>]])) &gt;= <span class="hljs-number">10</span>))<br><br></code></pre></td></tr></table></figure></div><h2 id="The-meaning-of-the-barcode">The meaning of the barcode</h2><table><thead><tr><th style="text-align:center"><img src="https://docs.gdc.cancer.gov/Encyclopedia/pages/images/barcode.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://docs.gdc.cancer.gov/Encyclopedia/pages/TCGA_Barcode/">© NIH, GDC</a></td></tr></tbody></table><table><thead><tr><th style="text-align:left">Label</th><th style="text-align:left">Identifier for</th><th style="text-align:left">Value</th><th style="text-align:left">Value Description</th><th style="text-align:left">Possible Values</th></tr></thead><tbody><tr><td style="text-align:left">Analyte</td><td style="text-align:left">Molecular type of analyte for analysis</td><td style="text-align:left">D</td><td style="text-align:left">The analyte is a DNA sample</td><td style="text-align:left">See Code Tables Report</td></tr><tr><td style="text-align:left">Plate</td><td style="text-align:left">Order of plate in a sequence of 96-well plates</td><td style="text-align:left">182</td><td style="text-align:left">The 182nd plate</td><td style="text-align:left">4-digit alphanumeric value</td></tr><tr><td style="text-align:left">Portion</td><td style="text-align:left">Order of portion in a sequence of 100 - 120 mg sample portions</td><td style="text-align:left">1</td><td style="text-align:left">The first portion of the sample</td><td style="text-align:left">01-99</td></tr><tr><td style="text-align:left">Vial</td><td style="text-align:left">Order of sample in a sequence of samples</td><td style="text-align:left">C</td><td style="text-align:left">The third vial</td><td style="text-align:left">A to Z</td></tr><tr><td style="text-align:left">Project</td><td style="text-align:left">Project name</td><td style="text-align:left">TCGA</td><td style="text-align:left">TCGA project</td><td style="text-align:left">TCGA</td></tr><tr><td style="text-align:left">Sample</td><td style="text-align:left">Sample type</td><td style="text-align:left">1</td><td style="text-align:left">A solid tumor</td><td style="text-align:left">Tumor types range from 01 - 09, normal types from 10 - 19 and control samples from 20 - 29. See Code Tables Report for a complete list of sample codes</td></tr><tr><td style="text-align:left">Center</td><td style="text-align:left">Sequencing or characterization center that will receive the aliquot for analysis</td><td style="text-align:left">1</td><td style="text-align:left">The Broad InstituteGCC</td><td style="text-align:left">See Code Tables Report</td></tr><tr><td style="text-align:left">Participant</td><td style="text-align:left">Study participant</td><td style="text-align:left">1</td><td style="text-align:left">The first participant from MD Anderson for GBM study</td><td style="text-align:left">Any alpha-numeric value</td></tr><tr><td style="text-align:left">TSS</td><td style="text-align:left">Tissue source site</td><td style="text-align:left">2</td><td style="text-align:left">GBM (brain tumor) sample from MD Anderson</td><td style="text-align:left">See Code Tables Report</td></tr></tbody></table><p>So, the most important information for us is the sample type: <mark>Tumor types range from 01 - 09, normal types from 10 - 19 and control samples from 20 - 29. See Code Tables Report for a complete list of sample codes</mark></p><h2 id="Abbreviations-of-projects">Abbreviations of projects</h2><table><thead><tr><th style="text-align:left">Study Abbreviation</th><th style="text-align:left">Study Name</th></tr></thead><tbody><tr><td style="text-align:left">LAML</td><td style="text-align:left">Acute Myeloid Leukemia</td></tr><tr><td style="text-align:left">ACC</td><td style="text-align:left">Adrenocortical carcinoma</td></tr><tr><td style="text-align:left">BLCA</td><td style="text-align:left">Bladder Urothelial Carcinoma</td></tr><tr><td style="text-align:left">LGG</td><td style="text-align:left">Brain Lower Grade Glioma</td></tr><tr><td style="text-align:left">BRCA</td><td style="text-align:left">Breast invasive carcinoma</td></tr><tr><td style="text-align:left">CESC</td><td style="text-align:left">Cervical squamous cell carcinoma and endocervical adenocarcinoma</td></tr><tr><td style="text-align:left">CHOL</td><td style="text-align:left">Cholangiocarcinoma</td></tr><tr><td style="text-align:left">LCML</td><td style="text-align:left">Chronic Myelogenous Leukemia</td></tr><tr><td style="text-align:left">COAD</td><td style="text-align:left">Colon adenocarcinoma</td></tr><tr><td style="text-align:left">CNTL</td><td style="text-align:left">Controls</td></tr><tr><td style="text-align:left">ESCA</td><td style="text-align:left">Esophageal carcinoma</td></tr><tr><td style="text-align:left">FPPP</td><td style="text-align:left">FFPE Pilot Phase II</td></tr><tr><td style="text-align:left">GBM</td><td style="text-align:left">Glioblastoma multiforme</td></tr><tr><td style="text-align:left">HNSC</td><td style="text-align:left">Head and Neck squamous cell carcinoma</td></tr><tr><td style="text-align:left">KICH</td><td style="text-align:left">Kidney Chromophobe</td></tr><tr><td style="text-align:left">KIRC</td><td style="text-align:left">Kidney renal clear cell carcinoma</td></tr><tr><td style="text-align:left">KIRP</td><td style="text-align:left">Kidney renal papillary cell carcinoma</td></tr><tr><td style="text-align:left">LIHC</td><td style="text-align:left">Liver hepatocellular carcinoma</td></tr><tr><td style="text-align:left">LUAD</td><td style="text-align:left">Lung adenocarcinoma</td></tr><tr><td style="text-align:left">LUSC</td><td style="text-align:left">Lung squamous cell carcinoma</td></tr><tr><td style="text-align:left">DLBC</td><td style="text-align:left">Lymphoid Neoplasm Diffuse Large B-cell Lymphoma</td></tr><tr><td style="text-align:left">MESO</td><td style="text-align:left">Mesothelioma</td></tr><tr><td style="text-align:left">MISC</td><td style="text-align:left">Miscellaneous</td></tr><tr><td style="text-align:left">OV</td><td style="text-align:left">Ovarian serous cystadenocarcinoma</td></tr><tr><td style="text-align:left">PAAD</td><td style="text-align:left">Pancreatic adenocarcinoma</td></tr><tr><td style="text-align:left">PCPG</td><td style="text-align:left">Pheochromocytoma and Paraganglioma</td></tr><tr><td style="text-align:left">PRAD</td><td style="text-align:left">Prostate adenocarcinoma</td></tr><tr><td style="text-align:left">READ</td><td style="text-align:left">Rectum adenocarcinoma</td></tr><tr><td style="text-align:left">SARC</td><td style="text-align:left">Sarcoma</td></tr><tr><td style="text-align:left">SKCM</td><td style="text-align:left">Skin Cutaneous Melanoma</td></tr><tr><td style="text-align:left">STAD</td><td style="text-align:left">Stomach adenocarcinoma</td></tr><tr><td style="text-align:left">TGCT</td><td style="text-align:left">Testicular Germ Cell Tumors</td></tr><tr><td style="text-align:left">THYM</td><td style="text-align:left">Thymoma</td></tr><tr><td style="text-align:left">THCA</td><td style="text-align:left">Thyroid carcinoma</td></tr><tr><td style="text-align:left">UCS</td><td style="text-align:left">Uterine Carcinosarcoma</td></tr><tr><td style="text-align:left">UCEC</td><td style="text-align:left">Uterine Corpus Endometrial Carcinoma</td></tr><tr><td style="text-align:left">UVM</td><td style="text-align:left">Uveal Melanoma</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">TCGA Database usage. R packages, TCGA related API</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Database" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Database/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="api" scheme="https://karobben.github.io/tags/api/"/>
    
    <category term="TCGA" scheme="https://karobben.github.io/tags/TCGA/"/>
    
  </entry>
  
  <entry>
    <title>flybase api</title>
    <link href="https://karobben.github.io/2022/12/05/Python/flybase-api/"/>
    <id>https://karobben.github.io/2022/12/05/Python/flybase-api/</id>
    <published>2022-12-05T20:49:59.000Z</published>
    <updated>2023-02-12T01:24:00.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flybase-api">Flybase api</h2><p><a href="https://flybase.github.io/api/swagger-ui/#/Chado/getChadoXmlById">API documentation</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">from</span> urllib.request <span class="hljs-keyword">import</span> urlopen<br><br>ID = <span class="hljs-string">&quot;FBgn0051624&quot;</span><br>url = <span class="hljs-string">&quot;https://api.flybase.org/api/v1.0/chadoxml/&quot;</span> + ID<br>html = urlopen(url)<br>soup = BeautifulSoup(html, features=<span class="hljs-string">&#x27;xml&#x27;</span>)<br><br>Orth_all = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span>  soup.find_all(<span class="hljs-string">&quot;feature_relationship&quot;</span>) <span class="hljs-keyword">if</span> i.find(<span class="hljs-string">&#x27;name&#x27;</span>).get_text() == <span class="hljs-string">&#x27;orthologous_to&#x27;</span>]<br>Orth_Homo = [i  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Orth_all <span class="hljs-keyword">if</span> i.find(<span class="hljs-string">&#x27;genus&#x27;</span>).get_text() == <span class="hljs-string">&#x27;Homo&#x27;</span>]<br>Gene_Syambol = [i.find_all(<span class="hljs-string">&#x27;name&#x27;</span>)[<span class="hljs-number">2</span>].get_text().split(<span class="hljs-string">&#x27;\\&#x27;</span>)[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Orth_Homo]<br>Gene_Ensembl = [[i.find(<span class="hljs-string">&#x27;accession&#x27;</span>).get_text() <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ii.find_all(<span class="hljs-string">&quot;dbxref_id&quot;</span>) <span class="hljs-keyword">if</span> i.find(<span class="hljs-string">&#x27;name&#x27;</span>).get_text() == <span class="hljs-string">&quot;Ensembl_Homo_sapiens&quot;</span>][<span class="hljs-number">0</span>]  <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> Orth_Homo]<br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">flybase api</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Database" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Database/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="api" scheme="https://karobben.github.io/tags/api/"/>
    
    <category term="flybase" scheme="https://karobben.github.io/tags/flybase/"/>
    
  </entry>
  
  <entry>
    <title>RNA-structure and Prediction</title>
    <link href="https://karobben.github.io/2022/11/15/Bioinfor/rna-structure/"/>
    <id>https://karobben.github.io/2022/11/15/Bioinfor/rna-structure/</id>
    <published>2022-11-15T16:16:46.000Z</published>
    <updated>2023-02-12T01:22:34.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RNA-Structure-and-Prediction">RNA Structure and Prediction</h2><table><thead><tr><th style="text-align:left"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:left">Like protein, RNA also has secondary structure, tertiary structure, and quaternary stricture, too.</td><td style="text-align:center"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/DNA_RNA_structure_%28full%29.png/540px-DNA_RNA_structure_%28full%29.png" alt=""><br><a href="https://en.wikipedia.org/wiki/Nucleic_acid_sequence">© wiki</a>]</td></tr></tbody></table><p>In Secondary Structure, it could form:</p><ul><li>Double helix</li><li>Stem-loop structure</li><li>Pseudoknots</li></ul><p><a href="https://en.wikipedia.org/wiki/List_of_RNA_structure_prediction_software">wikipedia</a> listed a bunch of tools for RNA secondary structure prediction.</p><p>Online structure prediction servers:</p><ul><li><a href="https://rna.urmc.rochester.edu/RNAstructureWeb/Servers/Predict1/ResultsPages/20221115.114114-7c052f9f/Results.html">Mathews Lab</a></li><li><a href="http://rna.tbi.univie.ac.at/cgi-bin/RNAWebSuite/RNAfold.cgi">RNAfold</a></li></ul><h2 id="RAN-Secondary-Structure-Format">RAN Secondary Structure Format.</h2><ul><li>DB format (Dot bracket)<ul><li>Unpaired nucleotides are indicated with the . or : characters.</li><li>Matching pairs of parentheses indicate base pairs.</li><li>To indicate non-nested base pairs (pseudoknots), additional brackets may be used: [], {}, or &lt;&gt;.<br>Example:</li></ul></li></ul><pre>GGUGCAUGCCGAGGGGCGGUUGGCCUCGUAAAAAGCCGCAAAAAAUAGCAUGUAGUACC((((((((((((((.[[[[[[..))))).....]]]]]]........)))))...))))</pre><h2 id="Secondary-Structure-Predict">Secondary Structure Predict</h2><p>Seq:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">UGAGUGGUGUUGUUGGCUGCAUUAUGAUGUUGGUUAUAUUCUGGUUUUCUUCCACUCAACAACAACAACAACACGCAGUAGUAGAAGCAACAACAAGCAUAUAACCAACAUCAUAAUGCAGCCAACAACACCACUCA</span><br></code></pre></td></tr></table></figure></div><p>Website: <a href="http://rna.tbi.univie.ac.at/cgi-bin/RNAWebSuite/RNAfold.cgi">RANfold</a><br>Result:<br><img src="https://s1.ax1x.com/2022/11/16/zVgb0H.png" alt=""></p><h2 id="RNA-Secondary-Structure-Plot">RNA Secondary Structure Plot</h2><h3 id="RNAplot-from-ViennaRNA">RNAplot from ViennaRNA</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">RNAplot tmp.db <span class="hljs-comment"># RNAfold results</span><br></code></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2022/11/16/zV2KuF.png" alt=""></p><h3 id="RRNA-in-R">RRNA in R</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">install.package(<span class="hljs-string">&quot;RRNA&quot;</span>)<br>library(RRNA)<br>coord=ct2coord(ct)<br>ct=makeCt( <span class="hljs-string">&quot;(((((((((((((((((((((((((((((((((((((((.((.(((((((((.(((..((.................))))).)))).)).))).)).)))))))))))))))))))))))))))))))))))))))&quot;</span>, <span class="hljs-string">&quot;UGAGUGGUGUUGUUGGCUGCAUUAUGAUGUUGGUUAUAUUCUGGUUUUCUUCCACUCAACAACAACAACAACACGCAGUAGUAGAAGCAACAACAAGCAUAUAACCAACAUCAUAAUGCAGCCAACAACACCACUCA&quot;</span>)<br>RNAPlot(coord,hl=<span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;GGGUUU&quot;</span>,<span class="hljs-string">&quot;AAAUUU&quot;</span>),seqcols=<span class="hljs-built_in">c</span>(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>),labTF=<span class="hljs-built_in">F</span>)<br></code></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2022/11/16/zVg3Sf.png" alt=""></p><h2 id="Python">Python</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">pip install RNA forgi<br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">RNA-structure and Prediction</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/"/>
    
    <category term="miRNA" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/miRNA/"/>
    
    
    <category term="Software" scheme="https://karobben.github.io/tags/Software/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/tags/Protocol/"/>
    
    <category term="miRNA-Seq" scheme="https://karobben.github.io/tags/miRNA-Seq/"/>
    
  </entry>
  
  <entry>
    <title>Wet Lab Techs with Brief Explained</title>
    <link href="https://karobben.github.io/2022/11/09/LearnNotes/lab-techs/"/>
    <id>https://karobben.github.io/2022/11/09/LearnNotes/lab-techs/</id>
    <published>2022-11-09T19:54:20.000Z</published>
    <updated>2023-02-11T19:20:05.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Wet-Lab-Techs-with-Brief-Explained">Wet Lab Techs with Brief Explained</h2><h2 id="Gel-Shift-Assays–EMSA">Gel Shift Assays–EMSA</h2><div class="admonition note"><p class="admonition-title">What is EMSA</p><p>The interaction of proteins with DNA is central to the control of many cellular processes including DNA replication, recombination and repair, transcription, and viral assembly. One important technique for studying gene regulation and determining protein–DNA interactions is the electrophoretic mobility shift assay (EMSA). An advantage of studying protein–DNA interactions by an electrophoretic assay is the ability to resolve complexes of different stoichiometry or conformation. Another major advantage is that the source of the DNA-binding protein may be a crude nuclear or whole cell extract, in vitro transcription product or a purified preparation. EMSA can be used qualitatively to identify sequence-specific, DNA-binding proteins (such as transcription factors) in crude lysates and, in conjunction with mutagenesis, to identify the important binding sequences within the upstream regulatory region of a given gene. EMSA can also be utilized quantitatively to measure thermodynamic and kinetic parameters.<a href="https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/gel-shift-assays-emsa.html">@ ThermoFisher 2022</a></p></div><p>Brief explained: During Gel electrophoration, if we add DNA (oligo) and protein together and the protein could interact with the DNA, the transfer speed of DNA is much slower because protein is dragging them.</p><p>One of a standard kit for EMSA:</p><table><thead><tr><th style="text-align:left"><a href="https://www.thermofisher.com/order/catalog/product/20148">LightShift™ Chemiluminescent EMSA Kit</a> from thermofisher. (<a href="https://www.thermofisher.com/document-connect/document-connect.html?url=https://assets.thermofisher.com/TFS-Assets%2FLSG%2Fmanuals%2FMAN0011409_LightShift_Chemiluminescent_EMSA_UG.pdf">documentation</a>)</th><th style="text-align:left"><img src="https://www.thermofisher.com/TFS-Assets/LSG/product-images/20148-DNA-EMSA-Kit-b.jpg-650.jpg" alt=""></th></tr></thead><tbody></tbody></table><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/11/10/zSvqbD.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.thermofisher.com/order/catalog/product/20148">© ThermoFisher</a></td></tr></tbody></table><p>According its documentation, a group should have at least 3 tracks:</p><ol><li>labeled DNA: which works as negative control. It shows them band when there are no protein-DNA interaction.</li><li>labeled DNA + protein: The main track for results. The position of DNA shifts because proteins interact with them. The movement of DNA is hindered by proteins.</li><li>labeled DNA + protein + overload unlabeled DNA: By competition, most proteins interact with unlabeled DNA because the quantity of them is higher them labeled. As a result, we can see a dim-shifted band or no shifted band at all. The track could eliminate false positives brought by protein-label tag binding.</li></ol><p>Publication used:</p><ul><li>Shyamsunder, Pavithra, et al. “Identification of a novel enhancer of CEBPE essential for granulocytic differentiation.” Blood, The Journal of the American Society of Hematology 133.23 (2019): 2507-2517.</li></ul><h3 id="Eamples-in-paper">Eamples in paper</h3><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/11/10/zSxCKf.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://ashpublications.org/blood/article/133/23/2507/273839/Identification-of-a-novel-enhancer-of-CEBPE">© Shyamsunder, 2019</a></td></tr></tbody></table><p>In this paper, they showed the 4<sub>th</sub> track, which is protein + unlabeled DNA. In the panel right, there are weak shifted bind which could be the protein.</p><h2 id="Luciferase-Report-Assay">Luciferase Report Assay</h2><div class="admonition note"><p class="admonition-title">What is a Luciferase Report Assay?</p><p>A luciferase reporter assay is a test that investigates whether a protein can activate or repress the expression of a target gene using luciferase as a reporter protein (<a href="https://www.sciencedirect.com/science/article/pii/B9780128005118000150?via%3Dihub">Carter &amp; Shieh, 2015</a>). The synthesis of the reporter protein and the addition of a substrate results in a chemical reaction with bioluminescence (or the emission of photons) as a by-product. This bioluminescence directly corresponds with the effect of the protein on expression of the target gene.<a href="https://goldbio.com/articles/article/a-deep-dive-into-the-luciferase-assay-what-it-is-how-it-works-and-more">© GoldBio, 2022;</a></p></div><table><thead><tr><th style="text-align:center"><img src="https://www.jbc.org/cms/attachment/6d2ce07c-a367-4fc6-8d4f-c2e1efbe40b5/gr1.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.sciencedirect.com/science/article/pii/S0021925820371155?via%3Dihub">© Scholl, et al., 2014</a></td></tr><tr><td style="text-align:center"><img src="https://commercio.nyc3.digitaloceanspaces.com/goldbio-2018/pages/Functional%20luc.png" alt=""></td></tr><tr><td style="text-align:center"><a href="https://goldbio.com/articles/article/a-deep-dive-into-the-luciferase-assay-what-it-is-how-it-works-and-more">© GoldBio, 2022;</a></td></tr></tbody></table><p>Scholl, Zackary &amp; Yang, Weitao &amp; Marszalek, Piotr. (2014). Chaperones Rescue Luciferase Folding by Separating Its Domains. The Journal of biological chemistry. 290. 10.1074/jbc.M114.582049.</p><p>After inserting the target DNA segment in the plasmid, the vector is transferred into cells. If proteins could interact with the segment, luciferase would express and cells could illuminate.</p><table><thead><tr><th style="text-align:center"><img src="https://www.researchgate.net/profile/Chrysostomos-Tornari/publication/44789832/figure/fig11/AS:906421684170753@1593119178226/pGL410luc2-vector-Schematic-diagram-of-the-pGL410luc2-luciferase-reporter-vector.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.researchgate.net/figure/pGL410luc2-vector-Schematic-diagram-of-the-pGL410luc2-luciferase-reporter-vector_fig11_44789832">© Chrysostomos Tornari; 2010</a></td></tr></tbody></table><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Wet Lab Techs with Brief Explained</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Wet Protocol" scheme="https://karobben.github.io/categories/Biology/Wet-Protocol/"/>
    
    
    <category term="Biology" scheme="https://karobben.github.io/tags/Biology/"/>
    
  </entry>
  
  <entry>
    <title>RNA Seq: Alternative Splicing</title>
    <link href="https://karobben.github.io/2022/11/07/Bioinfor/alternative-splicing/"/>
    <id>https://karobben.github.io/2022/11/07/Bioinfor/alternative-splicing/</id>
    <published>2022-11-07T20:44:12.000Z</published>
    <updated>2023-02-12T01:21:54.210Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://github.com/flemingtonlab/SpliceTools">SpliceTools</a></li><li><a href="https://github.com/tgen/bisbee">Bisbee</a>; <a href="https://www.nature.com/articles/s41598-021-89938-2">paper</a></li><li><a href="https://rnaseq-mats.sourceforge.net/">rMATS</a></li></ul><h2 id="Some-background">Some background</h2><p>In seminar recording form <a href="https://www.youtube.com/watch?v=LknDQw08P5w">OHSU Informatics</a>, they talked about how rMATS worked and the limits of rMATS in overlapped genes and complicated splicing events.<br>Julian</p><h2 id="rMARS">rMARS</h2><blockquote><p>rMATS (multivariate analysis of transcript splicing ) is a computational tool to detect differential alternative splicing events from RNA-Seq data. The statistical model of MATS calculates the P-value and false discovery rate that the difference in the isoform ratio of a gene between two conditions exceeds a given user-defined threshold. From the RNA-Seq data, MATS can automatically detect and analyze alternative splicing events corresponding to all major types of alternative splicing patterns. MATS handles replicate RNA-Seq data from both paired and unpaired study design. (<a href="https://rnaseq-mats.sourceforge.net/">© Xing Lab</a>)</p></blockquote><table><thead><tr><th style="text-align:center"><img src="https://rnaseq-mats.sourceforge.net/splicing.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://rnaseq-mats.sourceforge.net/">© Xing Lab</a></td></tr></tbody></table><ol><li>Unpaired Replicates.</li></ol><h3 id="Other-Related-Tools">Other Related Tools</h3><blockquote><p>MISO, SpliceTrap, ALEXA- seq, and rSeqDiff are designed for two-sample com- parison and do not handle replicates. Cufflinks, FDM, and DiffSplice use the Jensen–Shannon divergence metric to detect differential isoform proportion while accounting for vari- ability among replicates. (rMATS)</p></blockquote><h3 id="Pipelines-form-the-paper">Pipelines form the paper</h3><p>SRS35482: → mapped into Ensembl transcripts (TopHat) → unmapped reads mapped into Genom h1g (TopHat) → rMATS</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo apt install libgsl-dev cmake cython<br>pip install Cython<br><br>git <span class="hljs-built_in">clone</span> https://github.com/Xinglab/rmats-turbo.git<br><span class="hljs-built_in">cd</span> rmats-turbo<br>./build_rmats<br><br><br>rmats.py --b1 path1 --b2 path2 --gtf ../Mutation/Yuwei_data/DATA/genes.gtf -t single --readLength 50 --nthread 4 --od output --tmp tmp_output<br><br>rmats.py --b1 path1 --b2 path2 --gtf ../DB/dmel-all-r6.39.gtf -t single --readLength 50 --nthread 4 --od output --tmp tmp_output<br><br></code></pre></td></tr></table></figure></div><h2 id="Aligner-Choose">Aligner Choose</h2><p>For aternative splicing, we have to use intron awareness aligners like tophat, hisat, stat, etc. Other well known aligners like bowtie and bwa should be avoided only you have significant reasons.</p><h3 id="Tophat">Tophat</h3><p>In the paper of rMATS, they choosed Tophat as the aligner.<br>You can’t add parameters at the end of the commands. All arguments should following <code>tophat</code> and tha last three is index + reads</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">tophat -G *.gtf -p &lt;threads&gt; -o &lt;out_dir&gt; &lt;bowtie_index&gt; &lt;reads1,reads2,...&gt; &lt;reads1,reads2,...&gt;<br><br><br>hisat2 [options]* -x &lt;ht2-idx&gt; &#123;-1 &lt;m1&gt; -2 &lt;m2&gt; | -U &lt;r&gt;&#125; [-S &lt;sam&gt;]<br><br><span class="hljs-comment"># build index</span><br>hisat2-build -p 16 genome.fa genome<br>hisat2 -p 40 -x hisat2-index -U A.fq -S out.sam<br><br><span class="hljs-keyword">for</span> SAMPLE <span class="hljs-keyword">in</span> CF TF; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> ../Merge_Tri_FQ/<span class="hljs-variable">$SAMPLE</span>*;<br>    sed <span class="hljs-string">&quot;s/Hi/ht2_<span class="hljs-variable">$SAMPLE</span>/;s/128/32/&quot;</span> ../Model.sh &gt; script/<span class="hljs-variable">$SAMPLE</span>\_ht2.sh<br>    <span class="hljs-built_in">echo</span> hisat2 -x ../DB/dmel-all-chromosome-r6.39 -p 40  -S ht2_<span class="hljs-variable">$SAMPLE</span>.sam -U $(ls ../Merge_Tri_FQ/<span class="hljs-variable">$SAMPLE</span>*| tr <span class="hljs-string">&quot;\n&quot;</span> <span class="hljs-string">&quot;,&quot;</span>| sed <span class="hljs-string">&#x27;s/,$/\n/&#x27;</span>)  &gt;&gt; script/<span class="hljs-variable">$SAMPLE</span>\_ht2.sh<br>    sbatch script/<span class="hljs-variable">$SAMPLE</span>\_ht2.sh<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure></div><p>PS: An interesting thing is you can’t build ‘hisat index’ with ‘gz’ file. So, we need to decompress it before building the index. Lol</p><div class="admonition note"><p class="admonition-title">Differential Expression and Differential Splicing.</p></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/11/11/zCFD2D.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://aacrjournals.org/mcr/article/15/9/1206/268100/The-Landscape-of-Isoform-Switches-in-Human">© K. Vitting-Seerup; 2017</a></td></tr></tbody></table><h2 id="Run-with-test-data">Run with test data</h2><p>In the official documentation, they applied a small group of test data:</p><p>Thanks for <a href="https://www.jieandze1314.com/post/cnposts/169/">Yunze Liu</a>, I knwo that we just need to download the human gtf for tarting the test.<br>I tried two set of parameters and the results end the same. But I do have different number of results from genome compared with Yunze Liu’s result which means we used different gtf (Mine has less genes). The reference I used is from <a href="https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/genes/">ucsc</a>: <a href="https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/genes/hg19.ensGene.gtf.gz">hg19</a></p><p>GTF and <a href="https://sourceforge.net/projects/rnaseq-mats/files/MATS/testData.tgz/download">Test data</a> from <a href="https://rnaseq-mats.sourceforge.net/">documentation</a></p><pre>.├── 231ESRP.25K.rep-1.bam├── 231ESRP.25K.rep-1.bam.bai├── 231ESRP.25K.rep-1.R1.fastq├── 231ESRP.25K.rep-1.R2.fastq├── 231ESRP.25K.rep-2.bam├── 231ESRP.25K.rep-2.bam.bai├── 231ESRP.25K.rep-2.R1.fastq├── 231ESRP.25K.rep-2.R2.fastq├── 231EV.25K.rep-1.bam├── 231EV.25K.rep-1.bam.bai├── 231EV.25K.rep-1.R1.fastq├── 231EV.25K.rep-1.R2.fastq├── 231EV.25K.rep-2.bam├── 231EV.25K.rep-2.bam.bai├── 231EV.25K.rep-2.R1.fastq├── 231EV.25K.rep-2.R2.fastq├── b1.txt├── b2.txt├── hg19.ensGene.gtf├── s1.txt└── s2.txt</pre><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">python ../Github/rmats-turbo/rmats.py  --b1 b1.txt --b2 b2.txt --gtf hg19.ensGene.gtf  --od bam_test --tmp bam_tmp -t paired --readLength 50 --cstat 0.0001 --libType fr-unstranded<br>python ../Github/rmats-turbo/rmats.py --b1 b1.txt  --b2 b2.txt  -t paired --readLength 50 --nthread 4 --od <span class="hljs-built_in">test</span> --tmp tmp_output --gtf hg19.ensGene.gtf<br></code></pre></td></tr></table></figure></div><pre>Done processing each gene from dictionary to compile AS eventsFound 39321 exon skipping eventsFound 2115 exon MX eventsFound 13456 alt SS eventsThere are 8337 alt 3 SS events and 5119 alt 5 SS events.Found 6244 RI events</pre><h2 id="Repeats-and-non-repeats-results">Repeats and non-repeats results</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">wc CFT*/*| awk <span class="hljs-string">&#x27;&#123;print $4,$1&#125;&#x27;</span>| tr <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-string">&#x27; &#x27;</span>| awk <span class="hljs-string">&#x27;&#123;print $2,$1,$3&#125;&#x27;</span>|sort | column -t -s<span class="hljs-string">&#x27; &#x27;</span><br></code></pre></td></tr></table></figure></div><pre>MXE.MATS.JCEC.txt             CFTF    350MXE.MATS.JCEC.txt             CFTF_s  109MXE.MATS.JC.txt               CFTF    349MXE.MATS.JC.txt               CFTF_s  109RI.MATS.JCEC.txt              CFTF    31RI.MATS.JCEC.txt              CFTF_s  17RI.MATS.JC.txt                CFTF    31RI.MATS.JC.txt                CFTF_s  17SE.MATS.JCEC.txt              CFTF    857SE.MATS.JCEC.txt              CFTF_s  334SE.MATS.JC.txt                CFTF    849SE.MATS.JC.txt                CFTF_s  333</pre><p>The first column is rMATS results. the second column is result folder. The last column is the number of row for each file.<br><code>CFTF</code> is triplicate result and <code>CFTF_s</code> is single result. We can find that triplicate result have more counts.</p><h2 id="Visualization">Visualization</h2><p>Tools: <a href="https://github.com/Xinglab/rmats2sashimiplot">Xinglab/rmats2sashimiplot</a></p><div class="admonition note"><p class="admonition-title">This tool is based ob python2, not python3!</p></div><p>An example of code could be: (<a href="https://evvail.com/2021/05/05/2400.html">Omics-Hunter</a>)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">rmats2sashimiplot --b1 231ESRP.25K.rep-1.bam,231ESRP.25K.rep-2.bam --b2  231EV.25K.rep-1.bam,231EV.25K.rep-2.bam -t SE -e bam_test/SE.MATS.JC.txt --l1 SampleOne --l2 SampleTwo --exon_s 1 --intron_s 5 -o test_events_output<br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/11/12/zPwasU.png" alt=""></th></tr></thead><tbody></tbody></table><div class="admonition info"><p class="admonition-title">Errors</p></div><pre>ImportError: No module named _bsddbmv: cannot stat '/mnt/cypress/kraken_RNA/asp2/plot/Sashimi_plot/2R:24671294:24688185:+.pdf': No such file or directory</pre><p>It is because you lack of</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">conda install -c conda-forge bsddb3<br></code></pre></td></tr></table></figure></div><h3 id="Plot-the-result-by-position">Plot the result by position</h3><p>By using the <code>rmats2sashimiplot</code> tool, you can create a plot of the output by specifying a region with the -c option. However, this can be prone to errors. Based on my experience, there are several factors that should be considered:</p><ul><li>It is recommended that each position should have its own directory, as the tool generates an index for that position which may not update even if the parameters are changed.</li><li>It is possible to assign a random position, but it is preferable to assign a position based on the position of exons.</li><li>If there are no genes located within the region that has been specified, an error will occur.</li></ul><div class="admonition info"><p class="admonition-title">png result</p><p>It appears that the <code>rmats2sashimiplot</code> tool is not capable of producing the result as a PNG image format. As a solution, we can use other tools such as <code>pdftoppm</code> to convert the generated PDF file to the PNG format. For instance, a command example to convert a file named p1.pdf to a PNG file named p1.png with a resolution of 1000 can be: <code>pdftoppm p1.pdf p1.png -png -r 1000</code>.</p></div><h2 id="Result-Explanation">Result Explanation</h2><div class="admonition note"><p class="admonition-title">result</p><ul><li>ES（Exon skipping）：外显子跳跃。外显子在前体mRNA剪接形成成熟mRNA过程中被跳过，最终没有出现在某些成熟mRNA上【发生跳跃的外显子和其两侧的内含子都被剪切掉；上游和下游的外显子被直接连着一起保留在剪切后的产物中】</li><li>RI（Retained intron）：内含子保留。前体mRNA在剪接形成成熟mRNA的过程中，部分内含子被保留下来【某一段核苷酸序列在一个剪切体中是外显子的一部分，而在与之对照的剪切体中却是内含子而被剪切掉】</li><li>AD（Alternate Donor site）或A5SS（Alternative 5’ splice site）：5’端可变剪接。前体mRNA在剪接形成成熟mRNA的过程中，5’端边界发生不同方式的剪接，导致5‘端外显子有所延长</li><li>AA（Alternate acceptor site）或A3SS（Alternative 3’ splice site）：3’端可变剪接。前体mRNA在剪接形成成熟mRNA的过程中，3’端边界发生不同方式的剪接，导致3‘端外显子有所延长</li><li>AT（Alternate terminator）或Alternative last exon：第一个外显子发生改变</li><li>AP（Alternate promoter）或Alternative first exon：最后一个外显子发生改变</li><li>ME（Mutually exclusive exon）：外显子选择性跳跃。形成的两种不同的转录本中，两转录本之间相同的外显子称为constitutive exon， 不同的外显子称为inclusive exon，inclusive exon不能同时存在与同一转录本中， 只能分别存在于不同转录本中from: <a href="https://www.jieandze1314.com/post/cnposts/169/">Yunze Liu</a></li></ul></div><p>An Example of “SE” results</p><pre>IDGeneIDgeneSymbolchrstrandexonStart_0baseexonEndupstreamESupstreamEEdownstreamESdownstreamEEIDIJC_SAMPLE_1SJC_SAMPLE_1IJC_SAMPLE_2SJC_SAMPLE_2IncFormLenSkipFormLenPValueFDRIncLevel1IncLevel2IncLevelDifference2365"FBgn0283521""lola"chr2R-105158341051605110510524105110041053203810532119236569,54,772,0,67,63,1598493.09913051888e-086.84584054917e-070.945,1.0,0.8650.538,0.1670.5842366"FBgn0283521""lola"chr2R-10527065105272191052480410525862105320381053211923664,0,97,6,75,30,098491.0012167162e-072.0676289395e-060.222,0.0,0.3911.0,1.0-0.7962341"FBgn0250823""gish"chr3R+1628208016282408162749531627516916289630162898392341400,517,47557,86,8233,4040,43984900.00.778,0.75,0.7430.292,0.3170.4532358"FBgn0250823""gish"chr3R+16299590162996891629717416297345163018221630237223584,8,40,0,01,02,198491.12175272649e-062.04962226569e-051.0,1.0,1.00.2,0.00.92356"FBgn0250823""gish"chr3R+16299590162996891629717416297345163005681630086523561,0,00,1,01,00,0984911.01.0,0.0,NA1.0,NA-0.52359"FBgn0250823""gish"chr3R+1629959016299689162984691629855016301244163013512359486,567,539562,650,571113,12534,32984900.00.302,0.304,0.3210.624,0.661-0.334</pre><p>There are lot’s of columns. Let’s check them one by one.</p><ul><li><strong>ID</strong>: A ID for this specific events. Numeric.</li><li><strong>GeneID</strong>: The ID of the event-location. Comes from the gtf file you given</li><li><strong>geneSymbol</strong>: The name of the genes. ‘lola’ for example.</li><li><strong>chr</strong>: chromosome name. It would add a chr at the head of each chromosome’s name. Don’t worry about this feature in <code>rmats2sashimiplot</code>. You just need the name as the same from gff file.</li><li><strong>strand</strong>: the direction of the gene.</li><li><strong>exonStart_0base</strong>:</li></ul><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">RNA Seq: Alternative Splicing</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/"/>
    
    <category term="Alternative Splicing" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/Alternative-Splicing/"/>
    
    
    <category term="RNA-Seq" scheme="https://karobben.github.io/tags/RNA-Seq/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/tags/Protocol/"/>
    
    <category term="RNA-Seq Protocol" scheme="https://karobben.github.io/tags/RNA-Seq-Protocol/"/>
    
  </entry>
  
  <entry>
    <title>KEGG API</title>
    <link href="https://karobben.github.io/2022/10/28/Bioinfor/kegg-api/"/>
    <id>https://karobben.github.io/2022/10/28/Bioinfor/kegg-api/</id>
    <published>2022-10-28T21:00:41.000Z</published>
    <updated>2023-02-12T01:22:10.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="KEGG-API">KEGG API</h2><p>list of all pathways:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">curl https://rest.kegg.jp/list/pathway/dme<br></code></pre></td></tr></table></figure></div><pre>path:dme00010Glycolysis / Gluconeogenesis - Drosophila melanogaster (fruit fly)path:dme00020Citrate cycle (TCA cycle) - Drosophila melanogaster (fruit fly)path:dme00030Pentose phosphate pathway - Drosophila melanogaster (fruit fly)</pre><p>list of all organisms gene ID</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">curl https://rest.kegg.jp/list/dme<br></code></pre></td></tr></table></figure></div><pre>dme:Dmel_CG40494CDSX:127449..140340RhoGAP1A; Rho GTPase activating protein at 1A, isoform Adme:Dmel_CR43552miRNAX:133385..133502mir-4915-RAdme:Dmel_CG17131CDSX:140318..200663tyn; trynity, isoform Adme:Dmel_CG17707CDSX:complement(142731..148426)CG17707; uncharacterized protein, isoform Bdme:Dmel_CG3038CDSX:complement(243954..245856)CG3038; uncharacterized protein, isoform Cdme:Dmel_CG2995CDSX:245978..254650G9a; G9a, isoform Bdme:Dmel_CG42376CDSX:254876..255524CG42376; uncharacterized protein, isoform A</pre><p>pathway information</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><code class="hljs awk">curl https:<span class="hljs-regexp">//</span>rest.kegg.jp<span class="hljs-regexp">/get/</span>dme00010<br></code></pre></td></tr></table></figure></div><pre>ENTRY       dme00010                    PathwayNAME        Glycolysis / Gluconeogenesis - Drosophila melanogaster (fruit fly)DESCRIPTION Glycolysis is the process of converting glucose into pyruvate and generating small amounts of ATP (energy) and NADH (reducing power). It is a central pathway that produces important precursor metabolites: six-carbon compounds of glucose-6P and fructose-6P and three-carbon compounds of glycerone-P, glyceraldehyde-3P, glycerate-3P, phosphoenolpyruvate, and pyruvate [MD:M00001]. Acetyl-CoA, another important precursor metabolite, is produced by oxidative decarboxylation of pyruvate [MD:M00307]. When the enzyme genes of this pathway are examined in completely sequenced genomes, the reaction steps of three-carbon compounds from glycerone-P to pyruvate form a conserved core module [MD:M00002], which is found in almost all organisms and which sometimes contains operon structures in bacterial genomes. Gluconeogenesis is a synthesis pathway of glucose from noncarbohydrate precursors. It is essentially a reversal of glycolysis with minor variations of alternative paths [MD:M00003].CLASS       Metabolism; Carbohydrate metabolismPATHWAY_MAP dme00010  Glycolysis / GluconeogenesisMODULE      dme_M00001  Glycolysis (Embden-Meyerhof pathway), glucose => pyruvate [PATH:dme00010]            dme_M00002  Glycolysis, core module involving three-carbon compounds [PATH:dme00010]            dme_M00003  Gluconeogenesis, oxaloacetate => fructose-6P [PATH:dme00010]            dme_M00307  Pyruvate oxidation, pyruvate => acetyl-CoA [PATH:dme00010]DBLINKS     GO: 0006096 0006094ORGANISM    Drosophila melanogaster (fruit fly) [GN:dme]GENE        Dmel_CG8094  Hex-C; hexokinase C [KO:K00844] [EC:2.7.1.1]            Dmel_CG32849  Hex-t2; Hex-t2 [KO:K00844] [EC:2.7.1.1]            Dmel_CG3001  Hex-A; hexokinase A, isoform C [KO:K00844] [EC:2.7.1.1]            Dmel_CG33102  Hex-t1; Hex-t1 [KO:K00844] [EC:2.7.1.1]</pre><p>KEGG modules</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">curl https://rest.kegg.jp/list/md<br></code></pre></td></tr></table></figure></div><pre>md:M00951Cremeomycin biosynthesis, aspartate/3,4-AHBA => cremeomycinmd:M00952Benzoxazinoid biosynthesis, indoleglycerol phosphate => DIMBOA-glucosidemd:M00953Mugineic acid biosynthesis, methionine => 3-epihydroxymugineic acidmd:M00956Lysine degradation, bacteria, L-lysine => succinatemd:M00957Lysine degradation, bacteria, L-lysine => glutarate => succinate/acetyl-CoAmd:M00958Adenine ribonucleotide degradation, AMP => Uratemd:M00959Guanine ribonucleotide degradation, GMP => Uratemd:M00960Lysine degradation, bacteria, L-lysine => D-lysine => succinatemd:M00961Betacyanin biosynthesis, L-tyrosine => amaranthinmd:M00962Psilocybin biosynthesis, tryptophan => psilocybinmd:M00963Chanoclavine aldehyde biosynthesis, tryptophan => chanoclavine-I aldehydemd:M00964Fumigaclavine biosynthesis, chanoclavine-I aldehyde => fumigaclavine Cmd:M00965Vindoline biosynthesis, tabersonine => vindoline</pre><h2 id="Another-Project">Another Project</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">curl https://rest.kegg.jp/get/hsa05130/image --output test.png<br>curl https://rest.kegg.jp/get/hsa05130/conf --output <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;test.png&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">title</span> =<span class="hljs-string">&quot;123&quot;</span>; <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #0075eb; width: 50px;position: absolute;  left: 485px; top: 959px;&quot;</span>&gt;</span>ITGB1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #eb0027; width: 50px;position: absolute;  left: 750px; top: 1788px;&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropbtn&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: #eb0027&quot;</span>&gt;</span>NAIP<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown-content&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> &gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> &gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> &gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>    .dropbtn &#123;<br><span class="css">        <span class="hljs-attribute">background-color</span>: black;</span><br><span class="css">        <span class="hljs-attribute">color</span>: white;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: #px;</span><br><span class="css">        <span class="hljs-attribute">font-size</span>: #px;</span><br><span class="css">        <span class="hljs-attribute">border</span>: none;</span><br>    &#125;<br><br>    .dropdown &#123;<br><span class="css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">        <span class="hljs-attribute">display</span>: inline-block;</span><br>    &#125;<br><br>    .dropdown-content &#123;<br><span class="css">        <span class="hljs-attribute">display</span>: none;</span><br><span class="css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">        <span class="hljs-attribute">background-color</span>: lightgrey;</span><br><span class="css">        <span class="hljs-attribute">min-width</span>: #px;</span><br><span class="css">        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.dropdown-content</span> <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">color</span>: black;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: #px #px;</span><br><span class="css">        <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.dropdown-content</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<span class="hljs-attribute">background-color</span>: white;&#125;</span><br><span class="css">    <span class="hljs-selector-class">.dropdown</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.dropdown-content</span> &#123;<span class="hljs-attribute">display</span>: block;&#125;</span><br><span class="css">    <span class="hljs-selector-class">.dropdown</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.dropbtn</span> &#123;<span class="hljs-attribute">background-color</span>: grey;&#125;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">KEGG API</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Database" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Database/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="Database" scheme="https://karobben.github.io/tags/Database/"/>
    
    <category term="api" scheme="https://karobben.github.io/tags/api/"/>
    
    <category term="KEGG" scheme="https://karobben.github.io/tags/KEGG/"/>
    
  </entry>
  
  <entry>
    <title>Venn Plot in R</title>
    <link href="https://karobben.github.io/2022/10/17/R/venn/"/>
    <id>https://karobben.github.io/2022/10/17/R/venn/</id>
    <published>2022-10-17T15:13:58.000Z</published>
    <updated>2023-02-12T01:22:15.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ggvenn">ggvenn</h2><p>Reference: <a href="https://statisticsglobe.com/ggvenn-r-package">statisticsglobe.com</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(ggvenn)<br><br>set.seed(<span class="hljs-number">654925</span>)                          <span class="hljs-comment"># Create example list</span><br>list_venn &lt;- <span class="hljs-built_in">list</span>(A = sort(sample(<span class="hljs-number">1</span>:<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)),<br>                  B = sort(sample(<span class="hljs-number">1</span>:<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)),<br>                  C = sort(sample(<span class="hljs-number">1</span>:<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)),<br>                  D = sort(sample(<span class="hljs-number">1</span>:<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)))<br>list_venn<br></code></pre></td></tr></table></figure></div><pre>list_venn                                                                                         $A[1]  1  3  4 11 19 20 22 32 34 36 47 48 58 59 60 64 69 72 97 98$B[1]  4 17 18 23 32 33 34 41 45 52 53 56 58 59 66 67 74 78 91 92$C[1]  3 10 28 31 34 38 46 47 51 57 58 65 67 70 72 74 80 89 94 97$D[1]  8 11 14 15 17 18 19 33 34 47 51 59 66 68 73 77 78 82 86 87</pre><table><thead><tr><th style="text-align:center"><img src="https://statisticsglobe.com/wp-content/uploads/2021/01/figure-1-plot-ggvenn-r-package-programming-language.png" alt=""></th><th style="text-align:center"><img src="https://statisticsglobe.com/wp-content/uploads/2021/01/figure-2-plot-ggvenn-r-package-programming-language.png" alt=""></th><th style="text-align:center"><img src="https://statisticsglobe.com/wp-content/uploads/2021/01/figure-3-plot-ggvenn-r-package-programming-language.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><code>ggvenn(list_venn, c(&quot;A&quot;, &quot;C&quot;))</code></td><td style="text-align:center"><code>ggvenn(list_venn, c(&quot;A&quot;, &quot;C&quot;, &quot;D&quot;))</code></td><td style="text-align:center"><code>ggvenn(list_venn)  </code></td></tr></tbody></table><div class="admonition note"><p class="admonition-title">Change the fill color</p><p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">ggvenn(list_venn, <span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>)) + scale_fill_brewer( palette = <span class="hljs-string">'Set1'</span>)<br></code></pre></td></tr></table></figure></div></p></div><p>Other related Posts:</p><ul><li><a href="https://www.datanovia.com/en/blog/venn-diagram-with-r-or-rstudio-a-million-ways/">Alboukadel</a><ul><li><a href="https://www.datanovia.com/en/blog/venn-diagram-with-r-or-rstudio-a-million-ways/"><img src="https://www.datanovia.com/en/wp-content/uploads/dn-tutorials/r-tutorial/figures/venn-diagram-in-r-or-rstudio-ggVennDiagram-1.png" alt=""></a></li></ul></li></ul><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Venn Plot in R</summary>
    
    
    
    <category term="R" scheme="https://karobben.github.io/categories/R/"/>
    
    <category term="Plot" scheme="https://karobben.github.io/categories/R/Plot/"/>
    
    <category term="GGPLOT" scheme="https://karobben.github.io/categories/R/Plot/GGPLOT/"/>
    
    
    <category term="Plot" scheme="https://karobben.github.io/tags/Plot/"/>
    
    <category term="ggplot" scheme="https://karobben.github.io/tags/ggplot/"/>
    
  </entry>
  
  <entry>
    <title>FPKM, RPKM, CPM, TPM, TMM in RNA-Seq</title>
    <link href="https://karobben.github.io/2022/10/04/Bioinfor/rnaseq-norm/"/>
    <id>https://karobben.github.io/2022/10/04/Bioinfor/rnaseq-norm/</id>
    <published>2022-10-04T18:00:32.000Z</published>
    <updated>2023-02-12T01:22:02.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RPKM-FPKM-reads-fragments-per-kilobase-of-transcript-per-million-reads-mapped">RPKM/FPKM (reads/fragments per kilobase of transcript per million reads mapped)</h2><p>$$<br>FPKM_ i = \frac{q_ i}{l_ i × \sum_ i{q_ i}}×10^ 9<br>$$</p><p>$q_i$ is raw read or fragment counts, $l_i$ is feature (i.e., gene or transcript) length</p><p>RPKM is for single ends reads, a read is a unit.<br>FPKM is for paired ends reads, a paired reads is a unit.</p><h2 id="TPM-transcript-per-million">TPM (transcript per million)</h2><p>$$<br>TPM_ i = \frac{q_ i/l_ i}{\sum_ j{q_ i/l_ i}}×10^ 6<br>$$</p><p>0 where $q_i$ denotes reads mapped to transcript, $l_i$  is the transcript length, and $\sum_ j{q_ i/l_ i}$</p><p>corresponds to the sum of mapped reads to transcript normalized by transcript length.</p><p>The TPM measure can easily be converted to FPKM:<br>$TPM_ i = \frac{FPKM_ i}{\sum_ j{FPKM_ i}}×10^ 6$</p><h2 id="CPM-counts-per-million-reads-mapped-CPM">CPM (counts per million reads mapped (CPM)</h2><p>$$<br>CPM_ i = \frac{q_ i}{\sum_ i{q_ i}} × 10^ 6<br>$$</p><p>The simplest RNA-seq feature expression unit reports normalized counts, or the number of reads that align to a particular feature after correcting for sequencing depth and transcriptome composition bias. Normalized counts are the most popular unit among differential expression analysis methods (including edgeR). However, feature length normalization is skipped, with the important consequence that within-sample differential feature expression analysis is not possible.</p><h2 id="Shortcomings">Shortcomings</h2><p>Example 1:<br>We have 2 genes:</p><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">Length</th><th style="text-align:left">Sample1</th><th style="text-align:left">Sample2</th></tr></thead><tbody><tr><td style="text-align:left">Gene1</td><td style="text-align:left">100</td><td style="text-align:left">200</td><td style="text-align:left">200</td></tr><tr><td style="text-align:left">Gene2</td><td style="text-align:left">2400</td><td style="text-align:left">0</td><td style="text-align:left">1200</td></tr></tbody></table><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">CPM &lt;- <span class="hljs-keyword">function</span>(TB) &#123;<br>&#125;<br><br>FPKM &lt;- <span class="hljs-keyword">function</span>(TB) &#123;<br>&#125;<br><br>TPM &lt;- <span class="hljs-keyword">function</span>(TB) &#123;<br>&#125;<br><br></code></pre></td></tr></table></figure></div><h2 id="Others">Others</h2><ul><li>TMM (trimmed mean of M values frpm edgeR)</li><li>RLE (Relative Log Expression from DESeq)</li><li>MRN (Median Ratio Normalization)</li></ul><p>Though, TPM, RPKM, and FPKM are designed to normalize the expression levels of genes, <mark>it suitable for the comparison within a sample, not cross samples</mark><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. According to Dillies<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>, normalization algorithms could be divided into two groups: library size concept (TMM and DESeq) or distribution adjustment of read counts (Total Counts, RPKM, Quantile from <code>limma</code>). The hypothesis of TMMP and DESeq is that most of genes are not DE and the both propose a scaling factor based on a mean, median, or ratio. Based on Real data and simulated date, TMM and DESeq’s performance are acceptable, but RPKM and total counts of genes are not suggested to be used on the down stream analysis<sup class="footnote-ref"><a href="#fn2" id="fnref2:1">[2:1]</a></sup><sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>. On the other hand, RPKM, FPKM, and TPM tend to perform poorly when transcript distribution differ between samples<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>. In another reseach, the title is without replicates RNA-Seq, but the data set is triplicates shows that the results from TMM, RLE, and MRN are really similar<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>. And for more complicated comparison, MRN might be better<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>.</p><style>pre {  background-color:#38393d;  color: #5fd381;}</style><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Zhao, Y., Li, MC., Konaté, M.M. et al. TPM, FPKM, or Normalized Counts? A Comparative Study of Quantification Measures for the Analysis of RNA-seq Data from the NCI Patient-Derived Models Repository. J Transl Med 19, 269 (2021). <a href="https://doi.org/10.1186/s12967-021-02936-w">https://doi.org/10.1186/s12967-021-02936-w</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Dillies MA, Rau A, Aubert J, Hennequet-Antier C, Jeanmougin M, Servant N, Keime C, Marot G, Castel D, Estelle J, et al. A comprehensive evaluation of normalization methods for Illumina high-throughput RNA sequencing data analysis. Brief Bioinform. 2013;14:671–83. <a href="#fnref2" class="footnote-backref">↩︎</a> <a href="#fnref2:1" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Conesa A, Madrigal P, Tarazona S, Gomez-Cabrero D, Cervera A, McPherson A, Szczesniak MW, Gaffney DJ, Elo LL, Zhang X, Mortazavi A. A survey of best practices for RNA-seq data analysis. Genome Biol. 2016;17:13. <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>Maza E (2016) In Papyro Comparison of TMM (edgeR), RLE (DESeq2), and MRN Normalization Methods for a Simple Two-Conditions-Without-Replicates RNA-Seq Experimental Design. Front. Genet. 7:164. doi: 10.3389/fgene.2016.00164 <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>Maza, E., Frasse, P., Senin, P., Bouzayen, M., and Zouine, M. (2013). Comparison of normalization methods for differential gene expression analysis in RNA-Seq experiments: a matter of relative size of studied transcriptomes. Commun. Integr. Biol. 6:e25849. doi: 10.4161/cib.25849 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">FPKM, RPKM, CPM, TPM, TMM in RNA-Seq</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/"/>
    
    <category term="RNA-Seq" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/RNA-Seq/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="RNA-Seq" scheme="https://karobben.github.io/tags/RNA-Seq/"/>
    
  </entry>
  
  <entry>
    <title>Gene Set Enrichment Analysis (GESA) in R</title>
    <link href="https://karobben.github.io/2022/10/03/Bioinfor/gsea/"/>
    <id>https://karobben.github.io/2022/10/03/Bioinfor/gsea/</id>
    <published>2022-10-04T02:39:56.000Z</published>
    <updated>2023-02-12T01:22:20.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GESA">GESA</h2><p>In clusterProfiler, there are functions designed to do GESA based on GO and KEGG gene sets. Here I am trying to show you how to do GESA with your customized data set.</p><p>There are two main functions which are <code>GSEA</code> from <code>clusterProfiler</code> and <code>fgsea</code> from <code>fgsea</code>. A quick enrichment analysis could be done by example data.</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(clusterProfiler)<br>library(plyr)<br>library(fgsea)<br><br><span class="hljs-comment"># loading example data set</span><br>data(examplePathways)<br>data(exampleRanks)<br><br>fgseaRes &lt;- fgsea(examplePathways, exampleRanks, nperm=<span class="hljs-number">1000</span>, maxSize=<span class="hljs-number">500</span>, minSize = <span class="hljs-number">10</span>))<br><br>TERM2GENE = ldply(examplePathways, data.frame)<br>gse &lt;- GSEA(gene = rev.default(exampleRanks) ,  TERM2GENE = TERM2GENE)<br><span class="hljs-comment">#gseaplot(gse, by = &quot;all&quot;, title = gse$Description[1], geneSetID = 1)</span><br></code></pre></td></tr></table></figure></div><div class="admonition note"><p class="admonition-title">Default Parameters for Two Functions</p></div><table><thead><tr><th style="text-align:left"><code>fgsea</code></th><th style="text-align:left"><code>GSEA</code></th></tr></thead><tbody><tr><td style="text-align:left"><code>fgsea( pathways, stats, nperm, minSize = 1, maxSize = Inf, nproc = 0, gseaParam = 1, BPPARAM = NULL)</code></td><td style="text-align:left"><code> GSEA( geneList, exponent = 1, nPerm = 1000, minGSSize = 10, maxGSSize = 500, pvalueCutoff = 0.05, pAdjustMethod = &quot;BH&quot;, TERM2GENE, TERM2NAME = NA, verbose = TRUE, seed = FALSE, by = &quot;fgsea&quot;)</code></td></tr></tbody></table><div class="admonition note"><p class="admonition-title">Check the Results from Tow Functions</p></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">List &lt;- gse$Description[<span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>,<span class="hljs-number">30</span>,<span class="hljs-number">100</span>)]<br>gse[gse$Description %in% List]<br>fgseaRes[fgseaRes$pathway %in% List,]<br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:left">Description</th><th style="text-align:left">setSize</th><th style="text-align:left">enrichmentScore</th><th style="text-align:left">NES</th><th style="text-align:left">pvalue</th><th style="text-align:left">p.adjust</th><th style="text-align:left">qvalues</th><th style="text-align:left">rank</th><th style="text-align:left">leading_edge</th></tr></thead><tbody><tr><td style="text-align:left">5991611_Processive_synthesis_on_the_C-strand_of_the_telomere</td><td style="text-align:left">11</td><td style="text-align:left">0.747047513123146</td><td style="text-align:left">1.92204468456492</td><td style="text-align:left">0.00374531835205993</td><td style="text-align:left">0.0280713464604887</td><td style="text-align:left">0.0209222578082764</td><td style="text-align:left">2110</td><td style="text-align:left">tags=82%, list=18%, signal=67%</td></tr><tr><td style="text-align:left">5990978_M_G1_Transition</td><td style="text-align:left">63</td><td style="text-align:left">0.578846390178477</td><td style="text-align:left">2.27421327922627</td><td style="text-align:left">0.00154320987654321</td><td style="text-align:left">0.0161091249574396</td><td style="text-align:left">0.012006522946795</td><td style="text-align:left">1970</td><td style="text-align:left">tags=48%, list=16%, signal=40%</td></tr><tr><td style="text-align:left">5991851_Mitotic_Prometaphase</td><td style="text-align:left">82</td><td style="text-align:left">0.725326964773323</td><td style="text-align:left">2.96349021486606</td><td style="text-align:left">0.0015527950310559</td><td style="text-align:left">0.0161091249574396</td><td style="text-align:left">0.012006522946795</td><td style="text-align:left">1042</td><td style="text-align:left">tags=54%, list=9%, signal=49%</td></tr></tbody></table><table><thead><tr><th style="text-align:left">pathway</th><th style="text-align:left">pval</th><th style="text-align:left">padj</th><th style="text-align:left">ES</th><th style="text-align:left">NES</th><th style="text-align:left">nMoreExtreme</th><th style="text-align:left">size</th></tr></thead><tbody><tr><td style="text-align:left">5991611_Processive_synthesis_on_the_C-strand_of_the_telomere</td><td style="text-align:left">0.001865672</td><td style="text-align:left">0.0307185</td><td style="text-align:left">0.7470475</td><td style="text-align:left">1.919031</td><td style="text-align:left">0</td><td style="text-align:left">11</td></tr><tr><td style="text-align:left">5990978_M_G1_Transition</td><td style="text-align:left">0.001545595</td><td style="text-align:left">0.0307185</td><td style="text-align:left">0.5788464</td><td style="text-align:left">2.236994</td><td style="text-align:left">0</td><td style="text-align:left">63</td></tr><tr><td style="text-align:left">5991851_Mitotic_Prometaphase</td><td style="text-align:left">0.001492537</td><td style="text-align:left">0.0307185</td><td style="text-align:left">0.7253270</td><td style="text-align:left">2.976492</td><td style="text-align:left">0</td><td style="text-align:left">82</td></tr></tbody></table><p>According to the comparison from above, their p-values are similar. But <code>GSEA</code> has a smaller <code>p.adjust</code>. Other wise, <code>Enrichment score</code> and <code>NES</code> are the same.</p><h2 id="Number-of-results">Number of results</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r"><span class="hljs-built_in">length</span>(examplePathways)<br>nrow(fgseaRes)<br>nrow(GSEA(gene = rev.default(exampleRanks) ,  TERM2GENE = TERM2GENE, pvalueCutoff = <span class="hljs-number">1</span>)@result)<br></code></pre></td></tr></table></figure></div><pre><code>[1] 1457[1] 757[1] 757</code></pre><p>In this result, we can find that the number of results is the same. Some of the gene sets are filtered out because of their size.</p><h2 id="Result-visualization">Result visualization</h2><p>Both two packages have functions for Visualizing their results. Function <code>plotEnrichment</code> is more friendly to customized data. What a surprise is it has <code>plotGseaTable</code> function which from <code>fgsea</code> could show multiple results in a table-like panel. Though this graphic is not fancy but could be very helpful in some situations.</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">gseaplot(gse, geneSetID = <span class="hljs-string">&quot;5991851_Mitotic_Prometaphase&quot;</span>)<br>plotEnrichment(examplePathways[[<span class="hljs-string">&#x27;5991851_Mitotic_Prometaphase&#x27;</span>]], exampleRanks)<br><br><span class="hljs-comment"># Example of using gse result</span><br><span class="hljs-comment"># plotEnrichment(gse@geneSets[[&#x27;5991851_Mitotic_Prometaphase&#x27;]], exampleRanks)</span><br><br>plotGseaTable(examplePathways[List], exampleRanks, fgseaRes,  <br>                  gseaParam=<span class="hljs-number">0.5</span>)<br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/04/xQ7iB6.png" alt=""></th><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/04/xQ7m3d.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><code>gseaplot</code>   from <code>clusterProfiler</code></td><td style="text-align:center"><code>plotEnrichment</code> from <code>fgsea</code></td></tr></tbody></table><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/04/xQHSIS.png" alt=""></th></tr></thead><tbody></tbody></table><h2 id="Check-the-Data-Formats-and-Fabric-a-group-of-GeneList-GeneSets">Check the Data Formats and Fabric a group of GeneList &amp; GeneSets</h2><ul><li><code>exampleRanks</code>:  <pre>  170942    109711     18124     12775     72148     16010  -63.33703 -49.74779 -43.63878 -41.51889 -33.26039 -32.77626 </pre></li><li><code>examplePathways</code>:  <pre>  $`186589_Late_stage_branching_morphogenesis_pancreatic_bud_precursor_cells`  [1] "11925"  "15205"  "21410"  "246086"</pre></li></ul><p>The above two lists show a quick view of example data. <code>exampleRanks</code> is an increasing/decreasing numeric vector. <code>examplePathways</code> is a list that contains the name of each set and genes under each set.</p><p>An example of generating your own data:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">set.seed(<span class="hljs-number">1</span>)<br>GeneList &lt;- sample(seq(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">0.01</span>), <span class="hljs-number">100</span>)<br><span class="hljs-built_in">names</span>(GeneList) &lt;- paste(<span class="hljs-string">&quot;Gene&quot;</span>, <span class="hljs-built_in">c</span>(<span class="hljs-number">1</span>:<span class="hljs-number">100</span>), sep=<span class="hljs-string">&quot;_&quot;</span>)<br>GeneSet &lt;- append(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">names</span>(GeneList)[<span class="hljs-number">1</span>:<span class="hljs-number">50</span>]), <span class="hljs-built_in">list</span>(<span class="hljs-built_in">names</span>(GeneList)[<span class="hljs-number">40</span>:<span class="hljs-number">100</span>]))<br><span class="hljs-built_in">names</span>(GeneSet) &lt;- <span class="hljs-built_in">c</span>(<span class="hljs-string">&quot;Set1&quot;</span>, <span class="hljs-string">&quot;Set2&quot;</span>)<br><br><span class="hljs-comment"># List table for clusterProfiler</span><br>TERM2GENE_exp = ldply(GeneSet, data.frame)<br><span class="hljs-comment"># Sort the GeneList</span><br>GeneList &lt;- sort(GeneList, decreasing =  <span class="hljs-built_in">T</span>)<br>fgseaRes &lt;- fgsea(GeneSet, GeneList, nperm=<span class="hljs-number">1000</span>, maxSize=<span class="hljs-number">500</span>, minSize = <span class="hljs-number">10</span>)<br><br>gse &lt;- GSEA(gene = GeneList ,  TERM2GENE = TERM2GENE_exp, pvalueCutoff = <span class="hljs-number">1</span>)<br><br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:left">pathway</th><th style="text-align:left">pval</th><th style="text-align:left">padj</th><th style="text-align:left">ES</th><th style="text-align:left">NES</th><th style="text-align:left">nMoreExtreme</th><th style="text-align:left">size</th></tr></thead><tbody><tr><td style="text-align:left">Set1</td><td style="text-align:left">0.845140032948929</td><td style="text-align:left">0.980519480519481</td><td style="text-align:left">0.20117826706011</td><td style="text-align:left">0.764831637359588</td><td style="text-align:left">512</td><td style="text-align:left">50</td></tr><tr><td style="text-align:left">Set2</td><td style="text-align:left">0.980519480519481</td><td style="text-align:left">0.980519480519481</td><td style="text-align:left">0.156182133808093</td><td style="text-align:left">0.582211034023132</td><td style="text-align:left">603</td><td style="text-align:left">61</td></tr></tbody></table><table><thead><tr><th style="text-align:left">Description</th><th style="text-align:left">setSize</th><th style="text-align:left">enrichmentScore</th><th style="text-align:left">NES</th><th style="text-align:left">pvalue</th><th style="text-align:left">p.adjust</th><th style="text-align:left">qvalues</th><th style="text-align:left">rank</th><th style="text-align:left">leading_edge</th></tr></thead><tbody><tr><td style="text-align:left">Set1</td><td style="text-align:left">50</td><td style="text-align:left">0.20117826706011</td><td style="text-align:left">0.750929659683889</td><td style="text-align:left">0.834633385335413</td><td style="text-align:left">0.971742543171115</td><td style="text-align:left">0.971742543171115</td><td style="text-align:left">34</td><td style="text-align:left">tags=38%, list=34%, signal=50%</td></tr><tr><td style="text-align:left">Set2</td><td style="text-align:left">61</td><td style="text-align:left">0.156182133808093</td><td style="text-align:left">0.586558400598972</td><td style="text-align:left">0.971742543171115</td><td style="text-align:left">0.971742543171115</td><td style="text-align:left">0.971742543171115</td><td style="text-align:left">18</td><td style="text-align:left">tags=18%, list=18%, signal=38%</td></tr></tbody></table><h3 id="Enrichment-Plot">Enrichment Plot</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="R"><figure class="iseeu highlight /r"><table><tr><td class="code"><pre><code class="hljs r">library(enrichplot)<br><br>gseaplot2(gse, geneSetID = <span class="hljs-number">1</span>, title = gse$Description[<span class="hljs-number">1</span>], color = <span class="hljs-string">&#x27;salmon&#x27;</span>, pvalue_table = <span class="hljs-literal">TRUE</span>)<br>gseaplot2(gse, geneSetID = <span class="hljs-number">1</span>:<span class="hljs-number">7</span>, title = <span class="hljs-string">&quot;GSEA&quot;</span>, color = <span class="hljs-string">&#x27;salmon&#x27;</span>, pvalue_table = <span class="hljs-literal">TRUE</span>)<br><br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/18/xr96ED.png" alt=""></th><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/18/xr9cUe.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><code>geneSetID = 1</code></td><td style="text-align:center"><code>geneSetID = 1:7</code></td></tr></tbody></table><div class="admonition error"><p class="admonition-title">What is nPerm</p><p>The nominal p value estimates the statistical significance of the enrichment score for a single gene set. However, <strong>when you are evaluating multiple gene sets, you must correct for gene set size and multiple hypothesis testing</strong>. Because the p value is not adjusted for either, it is of limited value when comparing gene sets.</p><p>The FDR is adjusted for gene set size and multiple hypotheses testing while the p value is not. When a top gene set has a <strong>small nominal p value and a high FDR value</strong>, it generally indicates that it is <strong>not as significant when compared with other gene sets in the empirical null distribution</strong>. This could be because you <strong>do not have enough samples</strong>, the biological signal is subtle, or the gene sets do not represent the biology in question very well. On the other hand, the FDR is based on two distributions of all gene sets; if only one of many gene sets is enriched, that gene set is likely to have a high FDR. Finally, a top gene set with a <strong>high nominal p value and a low FDR value</strong>, generally indicates a negative result: <strong>the gene set itself is not significant and other sets are weaker</strong>.</p><p>In the GSEA report, a p value of zero (0.0) indicates an actual p value of less than 1/number-of-permutations. For example, if the analysis performed 100 permutations, a reported p value of 0.0 indicates an actual p value of less than 0.01. For a more accurate p value, increase the number of permutations performed by the analysis. <strong>Typically, you will want to perform 1000 permutations (phenotype or gene_set). (If you attempt to perform significantly more than 1000 permutations, GSEA may run out of memory.)</strong></p><p>From: <a href="https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Interpreting_GSEA">© gsea-msigdb.org</a></p></div><p><mark>More FAQ</mark> could be found at: <a href="https://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/FAQ">software.broadinstitute.org</a></p><h2 id="Other-things-you-need-to-know">Other things you need to know</h2><blockquote><ul><li><strong>ES (enrichment score)</strong>: reflects the degree to which a gene-set is overrepresented at the top or bottom of a ranked list of genes.</li><li><strong>NES (normalized enrichment score)</strong>: NES corrects for differences in ES between gene-sets due to differences in gene-set sizes. It enables to compare the scores of the different tested gene-sets with each other.<br>NES = actual ES / mean of all ESs obtained from all random permutations for the single gene-set that is being tested</li><li><strong>nom p-value</strong>: The nominal p value estimates the statistical significance of the enrichment score for a single gene set. The p-value is calculated from the null distribution.<br>Using gene-set permutation, the null distribution is created by generating, for each permutation, a random gene set the same size as your specified gene set by selecting that number of genes from all of the genes in your expression data set (or pre-ranked list), and then calculating the enrichment score for that randomly selected gene set. The distribution of those enrichment scores across all of the permutations constitutes the null distribution.</li><li><strong>FDR</strong>: corrects for multiple hypothesis testing and enable a more correct comparison of the different tested gene-sets with each other.<ul><li><strong>note</strong>: for a given gene-set S and observed NES, called NES*, FDR is [% of all NES (including permutations) &gt;= NES*] / [% of all observed NES (=NES for all tested gene-sets) &gt;= NES*]</li></ul></li><li><strong>relationships between ES, pvalue , NES and FDR</strong>:<ul><li>pvalue is calculated from ES</li><li>FDR is calculated from NES</li><li>the higher the ES or NES and the lowest the FDR or pvalue</li><li>NES above 1.4 will usually give significant results</li></ul></li></ul><p><a href="http://www.baderlab.org/CancerStemCellProject/VeroniqueVoisin/AdditionalResources/GSEA#:~:text=ES%20(enrichment%20score)%3A%20reflects,differences%20in%20gene%2Dset%20sizes.">© BADER LAB, 2016</a></p></blockquote><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Gene Set Enrichment Analysis (GESA) in R</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="Protocol" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/"/>
    
    <category term="RNA-Seq" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/Protocol/RNA-Seq/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
    <category term="R" scheme="https://karobben.github.io/tags/R/"/>
    
    <category term="RNA-Seq" scheme="https://karobben.github.io/tags/RNA-Seq/"/>
    
    <category term="GSEA" scheme="https://karobben.github.io/tags/GSEA/"/>
    
  </entry>
  
  <entry>
    <title>Dash-bio, powered by plotly, python</title>
    <link href="https://karobben.github.io/2022/10/01/Python/dash-bio1/"/>
    <id>https://karobben.github.io/2022/10/01/Python/dash-bio1/</id>
    <published>2022-10-01T22:32:35.000Z</published>
    <updated>2023-02-11T19:20:05.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-dash-and-how-wants-dash">What is dash and how wants dash</h2><blockquote><p>Dash is the original low-code framework for rapidly building data apps in Python, R, Julia, and F# (experimental). Written on top of Plotly.js and React.js, Dash is ideal for <strong>building and deploying data apps</strong> with customized <strong>user interfaces</strong>. It’s particularly suited for anyone who works with data. Through a couple of simple patterns, Dash abstracts away all of the technologies and protocols that are required to build a full-stack web app with interactive data visualization. <mark>Dash is simple enough that you can bind a user interface to your code in less than 10 minutes.</mark><br>Dash apps are rendered in the <strong>web browser</strong>. You can deploy your apps to VMs or Kubernetes clusters and then <strong>share them through URLs</strong>. Since Dash apps are viewed in the web browser, Dash is inherently cross-platform and mobile ready. There is a lot behind the framework. Plotly develops Dash and also offers a platform for writing and deploying Dash apps in an enterprise environment. If you’re interested, please get in touch.<br>From: <a href="https://dash.plotly.com/introduction">dash.plotly.com</a></p></blockquote><p>Examples: <a href="https://dash.gallery/Portal/">Dash Galleries</a></p><h2 id="Installation">Installation</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">pip install dash<br>pip install jupyter-dash<br>pip install pandas<br>pip install dash_bio dash_auth<br>pip install matplotlib<br>pip install openpyxl<br></code></pre></td></tr></table></figure></div><h2 id="Hello-Word-for-Dash">Hello Word for Dash</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Run this app with `python app.py` and</span><br><span class="hljs-comment"># visit http://127.0.0.1:8050/ in your web browser.</span><br><br><span class="hljs-keyword">from</span> dash <span class="hljs-keyword">import</span> Dash, html, dcc<br><span class="hljs-keyword">import</span> plotly.express <span class="hljs-keyword">as</span> px<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>app = Dash(__name__)<br><br><span class="hljs-comment"># assume you have a &quot;long-form&quot; data frame</span><br><span class="hljs-comment"># see https://plotly.com/python/px-arguments/ for more options</span><br>df = pd.DataFrame(&#123;<br>    <span class="hljs-string">&quot;Fruit&quot;</span>: [<span class="hljs-string">&quot;Apples&quot;</span>, <span class="hljs-string">&quot;Oranges&quot;</span>, <span class="hljs-string">&quot;Bananas&quot;</span>, <span class="hljs-string">&quot;Apples&quot;</span>, <span class="hljs-string">&quot;Oranges&quot;</span>, <span class="hljs-string">&quot;Bananas&quot;</span>],<br>    <span class="hljs-string">&quot;Amount&quot;</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>],<br>    <span class="hljs-string">&quot;City&quot;</span>: [<span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>]<br>&#125;)<br><br>fig = px.bar(df, x=<span class="hljs-string">&quot;Fruit&quot;</span>, y=<span class="hljs-string">&quot;Amount&quot;</span>, color=<span class="hljs-string">&quot;City&quot;</span>, barmode=<span class="hljs-string">&quot;group&quot;</span>)<br><br>app.layout = html.Div(children=[<br>    html.H1(children=<span class="hljs-string">&#x27;Hello Dash&#x27;</span>),<br><br>    html.Div(children=<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        Dash: A web application framework for your data.</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span>),<br><br>    dcc.Graph(<br>        <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;example-graph&#x27;</span>,<br>        figure=fig<br>    )<br>])<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run_server(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></div><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/10/02/xK4pUs.png" alt=""></th></tr></thead><tbody></tbody></table><div class="admonition note"><p class="admonition-title">How Dash Works</p><p>For the example above, main layouts information was stored in <code>app.layout</code>. It is a list. Each part is arranged horizontally from top to bottom. We can add <code>tags</code> for html one by one. For example, the <code>h1</code> tag, <code>div</code> tag.</p></div><h3 id="Customize-Hello-Dash">Customize Hello Dash</h3><p><img src="https://s1.ax1x.com/2022/10/02/xKI759.png" alt=""></p><details><summary>Codes for Dashboard</summary><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dash <span class="hljs-keyword">import</span> Dash, html, dcc<br><span class="hljs-keyword">import</span> plotly.express <span class="hljs-keyword">as</span> px<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>app = Dash(__name__)<br><br><span class="hljs-comment"># assume you have a &quot;long-form&quot; data frame</span><br><span class="hljs-comment"># see https://plotly.com/python/px-arguments/ for more options</span><br>df = pd.DataFrame(&#123;<br>    <span class="hljs-string">&quot;Fruit&quot;</span>: [<span class="hljs-string">&quot;Apples&quot;</span>, <span class="hljs-string">&quot;Oranges&quot;</span>, <span class="hljs-string">&quot;Bananas&quot;</span>, <span class="hljs-string">&quot;Apples&quot;</span>, <span class="hljs-string">&quot;Oranges&quot;</span>, <span class="hljs-string">&quot;Bananas&quot;</span>],<br>    <span class="hljs-string">&quot;Amount&quot;</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>],<br>    <span class="hljs-string">&quot;City&quot;</span>: [<span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;SF&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>, <span class="hljs-string">&quot;Montreal&quot;</span>]<br>&#125;)<br><br>colors = &#123;<br>    <span class="hljs-string">&#x27;background&#x27;</span>: <span class="hljs-string">&#x27;#111111&#x27;</span>,<br>    <span class="hljs-string">&#x27;text&#x27;</span>: <span class="hljs-string">&#x27;#7FDBFF&#x27;</span><br>&#125;<br><br>markdown_text = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">### Dash and Markdown</span><br><span class="hljs-string"></span><br><span class="hljs-string">One of the greatist feature from Dash is the markdown rendering. It may can only redenring the basic features but it could be very helpful. unfortunately, it not support html tags in the markdown. **But it accepts code highlight!!  Chears!!!**&lt;br&gt;</span><br><span class="hljs-string">&lt;pre&gt;</span><br><span class="hljs-string">code test, this is a code block</span><br><span class="hljs-string">&lt;/pre&gt;</span><br><span class="hljs-string">\```bash</span><br><span class="hljs-string">echo hello world</span><br><span class="hljs-string">\```</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>fig = px.bar(df, x=<span class="hljs-string">&quot;Fruit&quot;</span>, y=<span class="hljs-string">&quot;Amount&quot;</span>, color=<span class="hljs-string">&quot;City&quot;</span>, barmode=<span class="hljs-string">&quot;group&quot;</span>)<br><br>app.layout = html.Div(children=[<br>    html.H1(children=<span class="hljs-string">&#x27;Hello Dash&#x27;</span>,<br>            style=&#123;<br>            <span class="hljs-string">&#x27;textAlign&#x27;</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<br>            <span class="hljs-string">&#x27;color&#x27;</span>: colors[<span class="hljs-string">&#x27;text&#x27;</span>]<br>        &#125;),<br><br>    html.Div(children=<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        Dash: A web application framework for your data.</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span>,<br>            style=&#123;<br>            <span class="hljs-string">&#x27;textAlign&#x27;</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<br>            <span class="hljs-string">&#x27;color&#x27;</span>: colors[<span class="hljs-string">&#x27;text&#x27;</span>],<br>        &#125;),<br><br>    html.Div(children=[<br>        html.Div(children=[dcc.Graph(<br>            <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;example-graph&#x27;</span>,<br>            figure=fig, style=&#123;<span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">720</span>&#125;)], style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;60%&quot;</span>,<span class="hljs-string">&#x27;height&#x27;</span>: <span class="hljs-string">&quot;100%&quot;</span>&#125;),<br>        html.Div(children=[<br>            dcc.Markdown(children=markdown_text),<br>            dcc.Graph(figure=fig, style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;100%&quot;</span>, <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-string">&quot;100%&quot;</span>&#125;)<br>            ],<br>            style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;40%&quot;</span>, <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-string">&quot;100%&quot;</span>&#125;)] ,<br>    style=&#123;<span class="hljs-string">&#x27;display&#x27;</span>: <span class="hljs-string">&#x27;flex&#x27;</span>, <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-string">&quot;100%&quot;</span>&#125;<br>    )<br>])<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run_server(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></div></details><h2 id="Styles">Styles</h2><h3 id="Height-auto-size-by-the-window">Height auto-size by the window</h3><p>50% of the height of the current window</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python">style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;100%&quot;</span>, <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-string">&quot;50vh&quot;</span>&#125;<br></code></pre></td></tr></table></figure></div><h3 id="Window-overflow-show">Window overflow-show</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python">style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;100%&quot;</span>, <span class="hljs-string">&quot;max-height&quot;</span>: <span class="hljs-string">&quot;50%&quot;</span>, <span class="hljs-string">&quot;overflow&quot;</span>: <span class="hljs-string">&quot;scroll&quot;</span>&#125;<br>style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;100%&quot;</span>, <span class="hljs-string">&quot;max-height&quot;</span>: <span class="hljs-string">&quot;50%&quot;</span>, <span class="hljs-string">&quot;overflow-x&quot;</span>: <span class="hljs-string">&quot;scroll&quot;</span>&#125;<br>style=&#123;<span class="hljs-string">&#x27;width&#x27;</span>:<span class="hljs-string">&quot;100%&quot;</span>, <span class="hljs-string">&quot;max-height&quot;</span>: <span class="hljs-string">&quot;50%&quot;</span>, <span class="hljs-string">&quot;overflow-y&quot;</span>: <span class="hljs-string">&quot;scroll&quot;</span>&#125;<br></code></pre></td></tr></table></figure></div><h2 id="Call-back">Call back</h2><!--<details>--><details><summary>Codes for Call back example</summary><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dash <span class="hljs-keyword">import</span> Dash, dcc, html, Input, Output<br><br>app = Dash(__name__)<br><br>app.layout = html.Div([<br>    html.H6(<span class="hljs-string">&quot;Change the value in the text box to see callbacks in action!&quot;</span>),<br>    html.Div([<br>        <span class="hljs-string">&quot;Input: &quot;</span>,<br>        dcc.Input(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-input&#x27;</span>, value=<span class="hljs-string">&#x27;initial value&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;text&#x27;</span>)<br>    ]),<br>    html.Br(),<br>    html.Div(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-output&#x27;</span>),<br><br>])<br><br><br><span class="hljs-meta">@app.callback(<span class="hljs-params"></span></span><br><span class="hljs-meta"><span class="hljs-params">    Output(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-output&#x27;</span>, component_property=<span class="hljs-string">&#x27;children&#x27;</span></span>),</span></span><br><span class="hljs-meta"><span class="hljs-params">    Input(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-input&#x27;</span>, component_property=<span class="hljs-string">&#x27;value&#x27;</span></span>)</span></span><br><span class="hljs-meta"><span class="hljs-params"></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update_output_div</span>(<span class="hljs-params">input_value</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Output: <span class="hljs-subst">&#123;input_value&#125;</span>&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run_server(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></div></details><!--</details>--><p>Example shw: <a href="https://dash.plotly.com/basic-callbacks">dash.plotly.com</a></p><div class="admonition note"><p class="admonition-title">Explain</p></div><p>Input widgets is from <code>dash.dcc.Input</code>. By giving an id as <code>my-input</code>, it could be called back. After we added it in a thread <code>@app.callback</code>, it can update automatically whenever you made a change.<br>For adding more callback widgets, we can add, Dropdown widgets for instance, and show the result on a new line. We can’t add the Input&amp;Output in the old thread directly. But we can add it in a new thread.</p><p>Two things for <code>callback</code> functions:</p><ol><li>A threads is paired with function behind.</li><li>The parameters in the function following the order of the <code>Input</code> from the <code>@</code> threads.</li></ol><p>When you paired a thread and function, the like below:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.callback(<span class="hljs-params"></span></span><br><span class="hljs-meta"><span class="hljs-params">    Output(<span class="hljs-params"><span class="hljs-string">&quot;id1&quot;</span>, <span class="hljs-string">&#x27;data&#x27;</span></span>)</span></span><br><span class="hljs-meta"><span class="hljs-params">    Input(<span class="hljs-params"><span class="hljs-string">&quot;id2&quot;</span>, <span class="hljs-string">&#x27;value&#x27;</span></span>)</span></span><br><span class="hljs-meta"><span class="hljs-params">    Input(<span class="hljs-params"><span class="hljs-string">&quot;id3&quot;</span>, <span class="hljs-string">&#x27;data&#x27;</span></span>)</span></span><br><span class="hljs-meta"><span class="hljs-params"></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span>(<span class="hljs-params">P1, P2</span>):</span><br>    P3 = P1 + P2<br>    <span class="hljs-keyword">return</span> P3<br></code></pre></td></tr></table></figure></div><p>In this result, it would accepts the data from widget ‘id3’ and ‘id2’. New variable <code>P3</code> is returned and be assigned into the widget ‘id1’. You can use it to make a sample calculator.</p><!--<details>--><details><summary>Codes for Call back example</summary><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dash <span class="hljs-keyword">import</span> Dash, dcc, html, Input, Output<br><br>app = Dash(__name__)<br><br>app.layout = html.Div([<br>    html.H6(<span class="hljs-string">&quot;Change the value in the text box to see callbacks in action!&quot;</span>),<br>    html.Div([<br>        <span class="hljs-string">&quot;Input: &quot;</span>,<br>        dcc.Input(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-input&#x27;</span>, value=<span class="hljs-string">&#x27;initial value&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;text&#x27;</span>),<br>        dcc.Dropdown([<span class="hljs-string">&#x27;New York City&#x27;</span>, <span class="hljs-string">&#x27;Montréal&#x27;</span>, <span class="hljs-string">&#x27;San Francisco&#x27;</span>], value=<span class="hljs-string">&#x27;Montréal&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-input2&#x27;</span>),<br>    ]),<br>    html.Br(),<br>    html.Div(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-output&#x27;</span>),<br>    html.Div(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;my-output2&#x27;</span>),<br><br>])<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">TEST</span>():</span><br>    print(<span class="hljs-string">&quot;123&quot;</span>)<br><br><span class="hljs-meta">@app.callback(<span class="hljs-params"></span></span><br><span class="hljs-meta"><span class="hljs-params">    Output(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-output2&#x27;</span>, component_property=<span class="hljs-string">&#x27;children&#x27;</span></span>),</span></span><br><span class="hljs-meta"><span class="hljs-params">    Input(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-input2&#x27;</span>, component_property=<span class="hljs-string">&#x27;value&#x27;</span></span>),</span></span><br><span class="hljs-meta"><span class="hljs-params"></span>)</span><br><br><span class="hljs-meta">@app.callback(<span class="hljs-params"></span></span><br><span class="hljs-meta"><span class="hljs-params">    Output(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-output&#x27;</span>, component_property=<span class="hljs-string">&#x27;children&#x27;</span></span>),</span></span><br><span class="hljs-meta"><span class="hljs-params">    Input(<span class="hljs-params">component_id=<span class="hljs-string">&#x27;my-input&#x27;</span>, component_property=<span class="hljs-string">&#x27;value&#x27;</span></span>),</span></span><br><span class="hljs-meta"><span class="hljs-params"></span></span><br><span class="hljs-meta"><span class="hljs-params"></span>)</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update_output_div</span>(<span class="hljs-params">input_value</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;Output: <span class="hljs-subst">&#123;input_value&#125;</span>&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run_server(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></div></details><!--</details>--><h2 id="Use-local-picture">Use local picture</h2><p>The easiest and lightest way to using local picture is cite a picture in Markdown. But before doing that, you should make a directory <code>assets</code> and then, put the picture in it.</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MD"><figure class="iseeu highlight /md"><table><tr><td class="code"><pre><code class="hljs md">![<span class="hljs-string">Picture</span>](<span class="hljs-link">/assets/1.png</span>)<br></code></pre></td></tr></table></figure></div><h2 id="Plots">Plots</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> plotly.express <span class="hljs-keyword">as</span> px<br><br><span class="hljs-comment"># All settings</span><br><br>fig = px.scatter(<br>    <span class="hljs-comment"># Colors for each elements</span><br>    color = [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>],<br>)<br><br><span class="hljs-comment">## map axis text</span><br>fig.update_layout(<br>    xaxis=<span class="hljs-built_in">dict</span>(title=<span class="hljs-string">&#x27;&#x27;</span>,<br>        tickvals= [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], <span class="hljs-comment"># raw text in axis</span><br>        ticktext = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>] <span class="hljs-comment"># alternative text</span><br>    )<br>)<br><br><span class="hljs-comment"># Other layout informations</span><br>fig.update_layout(<br>    <span class="hljs-comment"># stringent size</span><br>    autosize=<span class="hljs-literal">False</span>,<br>    width=<span class="hljs-number">500</span>,<br>    height=<span class="hljs-number">500</span>,<br>    xaxis_title= <span class="hljs-string">&quot;X Axis&quot;</span>,<br>    yaxis_title= <span class="hljs-string">&quot;Y Axis&quot;</span>,<br>    title_font_color=<span class="hljs-string">&quot;salmon&quot;</span>,<br>    <span class="hljs-comment">#more details for title</span><br>    title=&#123;<br>        <span class="hljs-string">&#x27;y&#x27;</span>:<span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;x&#x27;</span>:<span class="hljs-number">0.5</span>,<br>        <span class="hljs-string">&#x27;font&#x27;</span>: &#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">30</span>&#125;,<br>        <span class="hljs-string">&#x27;xanchor&#x27;</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<br>        <span class="hljs-string">&#x27;yanchor&#x27;</span>: <span class="hljs-string">&#x27;top&#x27;</span>&#125;<br><br>)<br><br><br><span class="hljs-comment"># Bar plot</span><br>fig = px.bar(long_df, x=<span class="hljs-string">&quot;nation&quot;</span>, y=<span class="hljs-string">&quot;count&quot;</span>, color=<span class="hljs-string">&quot;medal&quot;</span>, title=<span class="hljs-string">&quot;Long-Form Input&quot;</span>)<br></code></pre></td></tr></table></figure></div><h3 id="Blank-Background-for-plot">Blank Background for plot</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python">fig.update_layout(<br>    autosize=<span class="hljs-literal">False</span>,<br>    width=<span class="hljs-number">300</span>,<br>    paper_bgcolor=<span class="hljs-string">&#x27;rgba(0,0,0,0)&#x27;</span>,<br>    plot_bgcolor=<span class="hljs-string">&#x27;rgba(0,0,0,0)&#x27;</span>,<br>    title=&#123;<br>        <span class="hljs-string">&#x27;y&#x27;</span>:<span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;x&#x27;</span>:<span class="hljs-number">0.5</span>,<br>        <span class="hljs-string">&#x27;font&#x27;</span>: &#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">30</span>&#125;,<br>        <span class="hljs-string">&#x27;xanchor&#x27;</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<br>        <span class="hljs-string">&#x27;yanchor&#x27;</span>: <span class="hljs-string">&#x27;top&#x27;</span>&#125;<br>)<br></code></pre></td></tr></table></figure></div><h3 id="Pileup-example">Pileup example</h3><p>This function if for make a igv like graph.<br>The basic example is in this <a href="https://dash.plotly.com/dash-bio/pileup">link</a>. There is a few things worth to mention:</p><ul><li>The reference genome is ‘2bit’ format, which <a href="https://biojulia.net/BioSequences.jl/v1.0/io/twobit.html">is a binary file format designed for storing a genome consists of multiple chromosomal sequences.</a></li><li>To create a 2bi genome, you can follow the instruction from <a href="https://genome.ucsc.edu/goldenPath/help/twoBit.html">UCSC</a></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pysam<br><span class="hljs-keyword">import</span> collections<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>samfile = pysam.AlignmentFile(<span class="hljs-string">&quot;WD-wts+wts149+wts149_3.s.bam&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>)<br><br><br>Depth = []<br><span class="hljs-keyword">for</span> read <span class="hljs-keyword">in</span> samfile.fetch(<span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-number">3134870</span>, <span class="hljs-number">3172221</span>):<br>    Depth += [i[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> read.aligned_pairs]<br><br>frequency = collections.Counter(Depth)<br>Dep_TB = pd.DataFrame(<span class="hljs-built_in">dict</span>(frequency), index=[<span class="hljs-string">&#x27;Freq&#x27;</span>]).T<br>Dep_TB[<span class="hljs-string">&#x27;Loc&#x27;</span>] = Dep_TB.index<br>Dep_TB.Loc = pd.to_numeric(Dep_TB.Loc)<br><br><br>plt.plot(Dep_TB.Loc,  Dep_TB.Freq)<br></code></pre></td></tr></table></figure></div><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Dash-bio, powered by plotly, python</summary>
    
    
    
    
    <category term="python" scheme="https://karobben.github.io/tags/python/"/>
    
    <category term="dash" scheme="https://karobben.github.io/tags/dash/"/>
    
  </entry>
  
  <entry>
    <title>Regulatory RNA</title>
    <link href="https://karobben.github.io/2022/09/29/LearnNotes/rnas/"/>
    <id>https://karobben.github.io/2022/09/29/LearnNotes/rnas/</id>
    <published>2022-09-29T15:10:59.000Z</published>
    <updated>2023-02-11T19:20:05.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Regulatory-RNA">Regulatory RNA</h2><p>miRNA, piRNA, siRNA, lncRNA</p><ul><li>miRNA<br>A kind of small RNA. Short RNA  which pair with mRNA regions and target them for degradation.</li><li>siRNAs<br>A kind of small RNA.</li><li>piRNA<br>A kind of small RNA. Similar to miRNA.</li><li>LncRNA<br>lncRNA associated with X chromosome inactivation. Some other lncRNA have been found associated with regulation of stem cell pluripotency and cell division.</li><li>Enhancer RNA<br>transcribed from enhancers which could up-regulate teh transcription of the genes</li><li>prokaryotes RNA<br>sRNA</li><li>circulating RNA<br>?</li></ul><div class="admonition note"><p class="admonition-title">Small RNA</p><p>Saml RNA are short (~18-30nt), non-coding RNA molecules which can regulate gene expression. They can interfering the expression (RNAi) or increase the expression (RNAa). There are three main classes of small RNAs: microRNAs (miRNAs), siRNAs and Piwi-interacting RNAs (piRNAs).</p></div><p>Samll RNA like miRNA may directly regulate 30% of genes in human<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. A review from 2009 elaborately talked the funciton of miRNA plaied important roles in gene regulation, cell differentiation, proliferation, migration, apoptosis, metabolism, defense, development, and disease<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p><h2 id="miRNA">miRNA</h2><blockquote><p>MicroRNAs (miRNAs) are a class of short(~22-nt), <strong>endogenously-initiated</strong> non-coding RNAs that post-transcriptionally control gene expression via either <strong>translational repression</strong> or <strong>mRNA degradation</strong>. Meanwhile, miRNA itself is coordinatively <strong>modulated by multifarious effectors</strong> when carrying out basic functions, such as SNP, miRNA editing, methylation and circadian clock. it constitute nearly 1% of all predicted genes in nematodes, flies and mammals<br>1. most of the known miRNAs are encoded as polycistronic transcripts<br>2. considerable number of miRNAs are highly conserved in sequences among different organisms<br>3. miRNAs tend to target and regulate a set of mRNAs instead of a specific mRNA substrate<br>4. miRNA pathway is an ancient regulatory mechanism evolved before the divergence of multicellular and unicellular organisms<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><br>5. viral miRNAs do not seem to share significant homology<br>Cite: Cai, Y. 2009<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>.</p></blockquote><table><thead><tr><th style="text-align:center"><img src="https://ars.els-cdn.com/content/image/1-s2.0-S1672022908600443-gr1.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.sciencedirect.com/science/article/pii/S1672022908600443#f0005">© Cai, Y. 2009</a></td></tr></tbody></table><style>pre {  background-color:#38393d;  color: #5fd381;}</style><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Lewis B P, Burge C B, Bartel D P. Conserved seed pairing, often flanked by adenosines, indicates that thousands of human genes are microRNA targets[J]. cell, 2005, 120(1): 15-20. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Zhang C. Novel functions for small RNA molecules. Curr Opin Mol Ther. 2009;11(6):641-651. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Zhao, Tao, et al. “A complex system of small RNAs in the unicellular green alga Chlamydomonas reinhardtii.” Genes &amp; development 21.10 (2007): 1190-1203. <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>Cai, Y., Yu, X., Hu, S., &amp; Yu, J. (2009). A Brief Review on the Mechanisms of miRNA Regulation. Genomics, Proteomics &amp; Bioinformatics, 7(4), 147-154. <a href="https://doi.org/10.1016/S1672-0229(08)60044-3">https://doi.org/10.1016/S1672-0229(08)60044-3</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">Different kinds of RNA</summary>
    
    
    
    <category term="Notes" scheme="https://karobben.github.io/categories/Notes/"/>
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Notes/Biology/"/>
    
    <category term="Genetics" scheme="https://karobben.github.io/categories/Notes/Biology/Genetics/"/>
    
    
    <category term="Biology" scheme="https://karobben.github.io/tags/Biology/"/>
    
  </entry>
  
  <entry>
    <title>Drosophila Parasites</title>
    <link href="https://karobben.github.io/2022/09/28/LearnNotes/fly-parasite/"/>
    <id>https://karobben.github.io/2022/09/28/LearnNotes/fly-parasite/</id>
    <published>2022-09-28T17:37:34.000Z</published>
    <updated>2023-02-11T19:20:05.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Parasites-in-Drosophila">Parasites in Drosophila</h2><p>In drosophila, we expect that it has wide range of parasites</p><p>A table of drosophila parasites<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p><table><thead><tr><th style="text-align:left">Parasites</th><th style="text-align:left">EXP.</th><th style="text-align:left">Defenses</th></tr></thead><tbody><tr><td style="text-align:left">Transposable elements</td><td style="text-align:left">copia</td><td style="text-align:left">RNAi</td></tr><tr><td style="text-align:left">Viruses</td><td style="text-align:left">RNA viruses Sigma<br>Drosophila C<br>Nora<br>DNA virus DiNV</td><td style="text-align:left">RNAi, siRNA</td></tr><tr><td style="text-align:left">Prokaryotes</td><td style="text-align:left">Wolbachia<br>Spiroplasma</td><td style="text-align:left">immune signaling pathways such as Toll and Imd, circulating hemocytes</td></tr><tr><td style="text-align:left">Protists</td><td style="text-align:left">trypanosomatids</td><td style="text-align:left">poorly characterized</td></tr><tr><td style="text-align:left">Fungi</td><td style="text-align:left">microsporidians;yeast-like fungus Coccidiascus legeri</td><td style="text-align:left">uncharacterized</td></tr><tr><td style="text-align:left">Animals</td><td style="text-align:left">wasp<br>mite<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup><br>nematodes (<em><strong>Howardula aoronymphium</strong></em><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>)</td><td style="text-align:left">wasp: mounting an encapsulation response defined by hemocytes migrating towards, binding to, and consolidating around the wasp eggs;</td></tr></tbody></table><p>Genome-wide study shows that some SNP could help D. melanogaster to resist viruses like Drosophila C and D. Melanogaster-specific Sigma viruse<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><p>Generally, the Toll, Imd, Jak-Stat, and JNK pathways are involved in different kinds of parasite affection. The humoral response model shows that secreted or membrane-bound receptors recognize antigens and activate NF-κB TF to produce the antimicrobial peptides<sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4:1]</a></sup>. In signaling pathways Toll pathway and the Imd pathway<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>, and the Jak-Stat and JNK pathways<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup> seem to play an important role in microbes immunity.</p><h3 id="TEs">TEs</h3><p>Transcriptional silencing of mobile elements could be acheived via the <mark>PIWI-interacting RNA (piRNA) pathway</mark>. piRNA which contains target sequence paired with PIWI fanuky proteins <em>Piwi</em>, <em>Aub</em>, and <em>Ago3</em> could resist the transcription of the TEs<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>. In germ cells, piRNA maturation occurs in nuage through three pathways; the de <strong>novo biogenesis pathway, the ping-pong cycle (i.e., piRNA amplification pathway), and phasing</strong><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>.</p><blockquote><p>The key difference between DNA transposons and retrotransposons is that DNA transposons are mobile genetic elements that move from one place to another in the genome by using a cut and paste mechanism, while retrotransposons are mobile genetic elements that move from one place to another in the genome by using copy and paste mechanism.<br>Cite: Samanthi, 2022<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></p></blockquote><table><thead><tr><th style="text-align:center"><img src="https://i.pinimg.com/originals/7c/ca/f2/7ccaf212d4ac0a97edba9d057ef2dcae.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.differencebetween.com/what-is-the-difference-between-dna-transposons-and-retrotransposons/">© Samanthi, 2022</a></td></tr></tbody></table><h3 id="Viruses">Viruses</h3><table><thead><tr><th style="text-align:center"><img src="https://www.researchgate.net/publication/303395236/figure/fig1/AS:1086762969505793@1636115891374/Two-distinct-sized-particles-are-produced-from-a-Nora-virus-infection-of-Drosophila.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center">Brad Ericson, 2016. Nora Virus from D. melanogaster<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup></td></tr></tbody></table><p>Previous studies show that some <strong>peptidoglycan recognition proteins</strong> and <strong>antimicrobial peptides</strong> from <strong>Toll</strong> and <strong>Imd</strong> pathway may responsible for <strong>sigma virus</strong> infection in <em>D. melanogaster</em><sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup><sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup>. Gene <em><strong>ref(2)P</strong></em><sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup><sup class="footnote-ref"><a href="#fn14" id="fnref14">[14]</a></sup> which related to selective autophagy, <em><strong>CHKov1</strong></em>, and <em><strong>CHKov2</strong></em>, other resistance factors<sup class="footnote-ref"><a href="#fn4" id="fnref4:2">[4:2]</a></sup> may work together to increase the resistance of the sigma virus.</p><p><abbr title="Drosophila C Virus">DCV</abbr> can increase the mortality of the flies. <em><strong>hopscotch</strong></em> mutant makes <em>D. melanogaster</em> more vulnerable to <abbr title="Drosophila C Virus">DCV</abbr> which indicates that the Jak-Stat pathway is important to flies against <abbr title="Drosophila C Virus">DCV</abbr><sup class="footnote-ref"><a href="#fn15" id="fnref15">[15]</a></sup><sup class="footnote-ref"><a href="#fn16" id="fnref16">[16]</a></sup>. Besides, <em><strong>pastrel</strong></em> was also connected to <abbr title="Drosophila C Virus">DCV</abbr> mortality<sup class="footnote-ref"><a href="#fn4" id="fnref4:3">[4:3]</a></sup>. Though the <strong>RNAi mechanism</strong> in <abbr title="Drosophila C Virus">DCV</abbr> defense is unclear, it could potentially play an important role in virus resistance. Similarly, RNAi related mechanism, including <em><strong>piwi</strong></em>, vasa intronic gene (<em><strong>vig</strong></em>), aubergine (<em><strong>aub</strong></em>), armitage (<em><strong>armi</strong></em>), <em><strong>Rm62</strong></em>, <em><strong>r2d2</strong></em> and Argonaute2 (<em><strong>AGO2</strong></em>) as having vital roles in responding to Drosophila X Virus (<abbr title="Drosophila X Virus">DXV</abbr>)<sup class="footnote-ref"><a href="#fn17" id="fnref17">[17]</a></sup>. RNAi pathway initiation denpends on the dsRNA produced by genome or RNA viruses.</p><p>Others like the <strong>picoran-like Nora virus</strong> could evade the effects of RNAi, Toll, and Jak-STAT pathways<sup class="footnote-ref"><a href="#fn18" id="fnref18">[18]</a></sup>. They studied the genes <em><strong>AGO2</strong></em>, <em><strong>Dicer-2</strong></em>, <em><strong>r2d2</strong></em>, which could help the <em><strong><abbr title="RNA-induced silencing complex">RISC</abbr></strong></em> assembly<sup class="footnote-ref"><a href="#fn19" id="fnref19">[19]</a></sup>, from siRNA pathway; <em><strong>piwi1</strong></em> and <em><strong>piwi2</strong></em> from piRNA pathway, <em><strong>Dicer-1</strong></em> from miRNA pathway, <em><strong>pelle</strong></em> from Toll pathway, and <em><strong>hop</strong></em> from Jak-Stat pathway to show that those 5 commonly involved in viral infection doesn’t affect the activity of Nora virus. But flies are able to clean viruses by themselves in low titer infection experiments.</p><p>Though, RNA interference played an important role in anti-virus mechanism, some reseachs also show Toll, Imd, and Jak/STAT also activated to against viruses<sup class="footnote-ref"><a href="#fn20" id="fnref20">[20]</a></sup><sup class="footnote-ref"><a href="#fn21" id="fnref21">[21]</a></sup><sup class="footnote-ref"><a href="#fn22" id="fnref22">[22]</a></sup>.</p><table><thead><tr><th style="text-align:center"><img src="https://s1.ax1x.com/2022/09/29/xnV7BF.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.rcsb.org/structure/7v6c">© PDB:7V6C</a> Structure of the Dicer-2-R2D2 heterodimer bound to small RNA duplex</td></tr></tbody></table><h3 id="Bacteria">Bacteria</h3><table><thead><tr><th style="text-align:center"><img src="https://www.researchgate.net/profile/Mariya-Zhukova/publication/225675809/figure/fig4/AS:393838033162255@1470909712393/Changes-in-morphology-of-Wolbachia-wMelPop-in-the-cytoplasm-of-ovarian-cells-of-D.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.researchgate.net/publication/225675809_High_temperature_initiates_changes_in_Wolbachia_ultrastructure_in_ovaries_and_early_embryos_of_Drosophila_melanogaster">© Mariya Zhukova</a> Changes in morphology of Wolbachia (wMelPop) in the cytoplasm of ovarian cells of D. melanogaster (w1118) after treatment of flies with heat</td></tr></tbody></table><p><em>Pseudomonas entomophila</em> was isolated from a wild-caught fly. Larvae activated Imd, Jak-Stat, and JNK pathways to response the infection of <em>P. entomophila1</em>. Mutanted <em>relish</em> from Imd pathway could increasing the mortality<sup class="footnote-ref"><a href="#fn23" id="fnref23">[23]</a></sup> and vise vursis(Liehl et al., 2006).</p><p><em>Wolbachia</em>: A well-described effect of Wolbachia infection is cytoplasmic incompatibility. It describes embryonic lethality resulting from mitotic defects. Wolbachia-induced alteration of <em><strong>Hira</strong></em> expression causes cytoplasmic incompatibility<sup class="footnote-ref"><a href="#fn24" id="fnref24">[24]</a></sup>. On the other hand, <em>Wolbachia</em> infection could increase the activaty of the Imd pathway and antimicrobial peptides<sup class="footnote-ref"><a href="#fn25" id="fnref25">[25]</a></sup>. Wolbachia could also boost female flies fecundity<sup class="footnote-ref"><a href="#fn26" id="fnref26">[26]</a></sup>, increase individuals resistance to some RNA viruses<sup class="footnote-ref"><a href="#fn27" id="fnref27">[27]</a></sup><sup class="footnote-ref"><a href="#fn28" id="fnref28">[28]</a></sup><sup class="footnote-ref"><a href="#fn29" id="fnref29">[29]</a></sup>, and fungal<sup class="footnote-ref"><a href="#fn30" id="fnref30">[30]</a></sup>. A model show that wolbachia could mediates host RNAi machinery to resistance <abbr title="Drosophila C Virus">DCV</abbr><sup class="footnote-ref"><a href="#fn31" id="fnref31">[31]</a></sup>. Other studies show that it failed to response some other pathogens<sup class="footnote-ref"><a href="#fn32" id="fnref32">[32]</a></sup><sup class="footnote-ref"><a href="#fn29" id="fnref29:1">[29:1]</a></sup><sup class="footnote-ref"><a href="#fn33" id="fnref33">[33]</a></sup><sup class="footnote-ref"><a href="#fn34" id="fnref34">[34]</a></sup></p><h3 id="Wasps">Wasps</h3><table><thead><tr><th style="text-align:center"><img src="https://www.researchgate.net/profile/Tomas-Dolezal-4/publication/310459942/figure/fig10/AS:429489348976646@1479409648648/Parasitoid-wasp-infection-of-Drosophila-larva-and-subsequent-immune-response-of-the-host.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.researchgate.net/publication/310459942_FROM_DROSOPHILA_MODEL_TO_HUMAN_DISEASE_AND_BACK_AGAIN_-_Ado_Route_to_Immunity_and_Size_of_Wings_versus_Breast_Cancer">© Tomas Dolezal</a> Parasitoid wasp infection of Drosophila larva and subsequent immune response of the host</td></tr></tbody></table><blockquote><p>Flies mount a melanotic encapsulation response against the wasp eggs, whereby the egg is recognized as foreign, circulating plasmatocytes are activated and migrate to the wasp egg, the lymph gland (the hematopoietic organ) begins producing new specialized hemocytes termed lamellocytes, the lamellocytes form successive cellular layers on top of the plasmatocytes, the hemocytes consolidate around the wasp egg via septate junctions, and inner cells in the capsule release free radicals and melanin inside the capsule to kill the developing wasp<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></p></blockquote><h2 id="Innate-immunity-of-Drosophila">Innate immunity of Drosophila</h2><h3 id="Hemocytes">Hemocytes</h3><p>The immune cell circulating along blood cells within flies are hemocytes and there are three types of them and Plasmatocytes is the most common hemocytes (95%). It resembles mammalian phagocytes and like macrophages. Hemocytes could be recruited to epithelia tumors which usually generated by mutant for apical/basal polarity genes like <em>scrib</em> (<em>scr</em>), <em>lethal giant larvae</em> (<em>lgl</em>), or <em>discs large</em> (<em>dlg</em>) while expressing drosophila oncogene <em>dRas1</em><sup class="footnote-ref"><a href="#fn35" id="fnref35">[35]</a></sup><sup class="footnote-ref"><a href="#fn36" id="fnref36">[36]</a></sup>. Apical/basal polarity genes mutated cell usually are eliminated by apoptosis through JNK pathways (A part of FOXO signaling pathway in KEGG) <sup class="footnote-ref"><a href="#fn37" id="fnref37">[37]</a></sup>. However, apical/basal polarity genes mutated cell co-expressed <em>dRas1</em> promotes <em>MMP</em> expression, basement membrane degradation and invasion instead of apoptosis along with the activation of JNK pathway <sup class="footnote-ref"><a href="#fn38" id="fnref38">[38]</a></sup><sup class="footnote-ref"><a href="#fn39" id="fnref39">[39]</a></sup>. Though tumor may can recruit hemocytes, but basement membrane disruption in the absence of tumors by overexpression of MMP2 is enough to attracting them, too<sup class="footnote-ref"><a href="#fn40" id="fnref40">[40]</a></sup>. For against tumor, JNK pathway could promote the secretion of JAK-STAT activating cytokines (<em>Upd</em> ligands) and cause the proliferation of hymocytes<sup class="footnote-ref"><a href="#fn40" id="fnref40:1">[40:1]</a></sup>.<br>Another inflammatory response is TNF introduced and which could response to microbial infection, tissue damage and malignant cells<sup class="footnote-ref"><a href="#fn41" id="fnref41">[41]</a></sup>. <em>Egr</em> is the TNF in drosophila and which is needed to clearing the <em>crib</em><sup>−/−</sup> or <em>lgl</em><sup>−/−</sup> cells from the epithelium<sup class="footnote-ref"><a href="#fn42" id="fnref42">[42]</a></sup>. Tumor Associated Hemocytes which infiltrated into tumor tissue also show high expression of <em>egr</em> and it is required to induce JNK signaling and MMP expression<sup class="footnote-ref"><a href="#fn43" id="fnref43">[43]</a></sup>. Some <em>H. pylori</em> could inject virulence factor <em>CagA</em> protein into gastric carcinoma<sup class="footnote-ref"><a href="#fn44" id="fnref44">[44]</a></sup>. <em>CagA</em> expressed in wing disc epithelium could recruit hymocytes <sup class="footnote-ref"><a href="#fn45" id="fnref45">[45]</a></sup>.</p><table><thead><tr><th style="text-align:center"><img src="https://ars.els-cdn.com/content/image/1-s2.0-S0165247820303485-gr1.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center">Drosophila JNK pathway; <a href="https://www.sciencedirect.com/science/article/pii/S0165247820303485">© GhadaTafesh-EdwardsIoannisEleftherianos</a></td></tr></tbody></table><h3 id="Toll-Signaling-Pathway">Toll Signaling Pathway</h3><p>Toll is one of the most important signaling pathway for flies to against microbes. In human, Toll like receptor could activate the MAPK signaling pathway and genes like NFκB, IRF (interferon regulatory factors)<sup class="footnote-ref"><a href="#fn46" id="fnref46">[46]</a></sup>. Some reseachs show that innate immunity response could also affects the migratory potential of epithelia cells<sup class="footnote-ref"><a href="#fn47" id="fnref47">[47]</a></sup><sup class="footnote-ref"><a href="#fn48" id="fnref48">[48]</a></sup>.</p><p>In human, the best-characterized TLR microbial ligands are as follows:</p><ul><li>TLR1, TLR2 and TLR6: bacterial lipoproteins and lipotechoic acid and fungal zymosan;</li><li>TLR3: double-stranded RNA;</li><li>TLR4: lipopolysaccharide (LPS; endotoxin) from Gram-negative bacteria;</li><li>TLR5: bacterial flagellin;</li><li>TLR7 and TLR8: and single-stranded RNA</li><li>TLR9 unmethylated CpG motifs present in DNA that function;</li><li>TLR11: a profilin-like molecule from the protozoan Toxoplasma gondii;</li></ul><blockquote><p>In addition to microbial ligands, an increasing number of endogenous ligands are being reported as candidate stimulators of TLRs, in particular of TLR2 and TLR4. These include heat shock proteins (HSP60, HSP70, endoplasmin, HSPB8 and α-crystallin A chain)7,8,9,10,11,12,13, high mobility group box 1 (HMGB1)14,15, uric acid crystals16,17, surfactant protein A18, and various products of the extracellular matrix such as fibronectin19, heparan sulphate20, biglycan21, fibrinogen22, oligosaccharides of hyaluronan23 and hyaluronan breakdown fragments24,25,26.<br>cite: Rakoff-Nahoum S, 2009<sup class="footnote-ref"><a href="#fn46" id="fnref46:1">[46:1]</a></sup></p></blockquote><table><thead><tr><th style="text-align:center"><img src="https://media.springernature.com/lw685/springer-static/image/art%3A10.1038%2Fnrc2541/MediaObjects/41568_2009_Article_BFnrc2541_Fig1_HTML.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.nature.com/articles/nrc2541">© Rakoff-Nahoum, 2009</a></td></tr></tbody></table><p>In drosophila, gram positive bacterial or fungal infection could activate the Toll signaling pathway and produce antimicrobial peptide gene <em>Drosomycin</em> (<em>Drs</em>) through activating NFκB related protein Dorsal-related immune factor (<em>DIF</em>), a transcription factor<sup class="footnote-ref"><a href="#fn49" id="fnref49">[49]</a></sup>. In verses, Imd responds to gram negative bacteria and secretes <em>Diptericin</em> (<em>DptA</em>/<em>DptB</em>)<sup class="footnote-ref"><a href="#fn50" id="fnref50">[50]</a></sup>. Transposons inserted <em>GNBP1</em> failed transcription/stability leading to low tolerance in Gram positive bacteria infection<sup class="footnote-ref"><a href="#fn51" id="fnref51">[51]</a></sup>.</p><p>After cleavage of <em>spz</em> by <em>spe</em> (Spätzle-Processing Enzyme)<sup class="footnote-ref"><a href="#fn52" id="fnref52">[52]</a></sup>, it binds into the C-terminal of Leucine-rich repeats of <em>Toll</em><sup class="footnote-ref"><a href="#fn53" id="fnref53">[53]</a></sup> and induces conformation change<sup class="footnote-ref"><a href="#fn54" id="fnref54">[54]</a></sup> to generate an activated dimer, which could interact with <em>MyD88</em><sup class="footnote-ref"><a href="#fn55" id="fnref55">[55]</a></sup>.</p><table><thead><tr><th style="text-align:center"><img src="https://ars.els-cdn.com/content/image/1-s2.0-S0145305X13001158-gr1.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.sciencedirect.com/science/article/pii/S0145305X13001158">© Lindsay A. 2014</a></td></tr></tbody></table><h3 id="Imd">Imd</h3><p>General review: <a href="https://www.jimmunol.org/content/192/8/3455.short">The Drosophila Imd Signaling Pathway; 2014</a><sup class="footnote-ref"><a href="#fn56" id="fnref56">[56]</a></sup></p><div class="admonition note"><p class="admonition-title">Why Imd is so important:</p></div><p>Imd (mmune deficiency) pathway which could activate 3<sup>rd</sup> <em>Drosopila</em> NFκB protein, Relish<sup class="footnote-ref"><a href="#fn57" id="fnref57">[57]</a></sup>, to activate different kind <abbr title="Antimicrobial peptides">AMP</abbr> expression<sup class="footnote-ref"><a href="#fn58" id="fnref58">[58]</a></sup>.</p><p>The first step for activating Imd signaling pathway is recognizing microbes by Peptidoglycan-recognition proteins (<em>PGRP</em>)<sup class="footnote-ref"><a href="#fn59" id="fnref59">[59]</a></sup>. <em>PGRP</em> family could be a intracellular, extracellular, or transmembrane proteins.</p><ul><li>PGRP-LD: unclear</li><li>PGRP-LC: transmembrane receptor and binds  a meso-diaminopimelic acid–type PGN found on Gram-negative bacteria and some certain G<sup>+</sup> Bacteria like Bacillus spp.<sup class="footnote-ref"><a href="#fn60" id="fnref60">[60]</a></sup>. It is the principal receptor for activate the Imd signaling pathway<sup class="footnote-ref"><a href="#fn61" id="fnref61">[61]</a></sup>.<ul><li>PGRP-LCx: recognizes polymeric PGN<sup class="footnote-ref"><a href="#fn60" id="fnref60:1">[60:1]</a></sup>.</li><li>PGRP-LCa: Not bind PGN directly, but acts as a coreceptor with PGRP-LCx to bind monomeric PGN fragmetns(tracheal cytotoxin, or TCT)<sup class="footnote-ref"><a href="#fn62" id="fnref62">[62]</a></sup>.</li></ul></li><li>PGRP-LE: cytoplasmic PGRP-LE could interact and activate Imd signaling pathway directly<sup class="footnote-ref"><a href="#fn63" id="fnref63">[63]</a></sup>.<ul><li>Short from: secreted and binds PGN in the hemolymph<sup class="footnote-ref"><a href="#fn64" id="fnref64">[64]</a></sup>; It might help to present the PGN to <em>PGRP-LC</em>. It can introduce autophagy<sup class="footnote-ref"><a href="#fn65" id="fnref65">[65]</a></sup>.</li><li>Full form: in the cytoplasm and recognize TCT fragments<sup class="footnote-ref"><a href="#fn62" id="fnref62:1">[62:1]</a></sup>.</li></ul></li><li><mark>PGRP-LF</mark>: transmembrane protein, acts as a inhibitor by binds with <em>PGRP-LC</em> and prevent its dimerization<sup class="footnote-ref"><a href="#fn66" id="fnref66">[66]</a></sup>.</li><li>PGRP-LA: positively regulate the Imd pathway in barrier epithelia<sup class="footnote-ref"><a href="#fn67" id="fnref67">[67]</a></sup>.</li><li>PGRP-LB, PGRP-SC1A, PGRP-SC1B, and PGRP-SC2 have an amidase activity and are shown to play somewhat redundant roles in downregulating the Imd pathway during a systemic response<sup class="footnote-ref"><a href="#fn56" id="fnref56:1">[56:1]</a></sup>.</li></ul><table><thead><tr><th style="text-align:center"><img src="https://www.jimmunol.org/content/jimmunol/192/8/3455/F1.large.jpg" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.jimmunol.org/content/192/8/3455.short">© Myllymäki H; 2014</a></td></tr></tbody></table><p>Imd was cleaved by <em>Dredd</em>, which removes 30-aa N-terminal fragment and create a bind site to <em>lap2</em>, which can then K63-ubiquitinate Imd<sup class="footnote-ref"><a href="#fn68" id="fnref68">[68]</a></sup><sup class="footnote-ref"><a href="#fn69" id="fnref69">[69]</a></sup>. After that, Tab2/Tak1 complex is recruited and Drosophila IKK complex was phosphorylated<sup class="footnote-ref"><a href="#fn70" id="fnref70">[70]</a></sup><sup class="footnote-ref"><a href="#fn71" id="fnref71">[71]</a></sup>. At the end of the Imd signaling pathway, <em>Relish</em> was phosphorylated on multiple sites at N terminus by <em>IKK</em> complex<sup class="footnote-ref"><a href="#fn72" id="fnref72">[72]</a></sup>. Among them, S528 and S529 phosphorylation are crucial to recruitment RNA PoII<sup class="footnote-ref"><a href="#fn72" id="fnref72:1">[72:1]</a></sup><sup class="footnote-ref"><a href="#fn73" id="fnref73">[73]</a></sup>. C-terminal (Rel-49) remains in cytoplasm and N-terminal (Rel-68) form as a dimer and translocates into nucleus to activate transcription<sup class="footnote-ref"><a href="#fn74" id="fnref74">[74]</a></sup>.</p><p>Ubiquiting could also regulates the Imd signaling pathways, too. <em>dUSP36/Scny</em> accumulation prevent actviate form, K63-ubiquitinated Imd and promotes its K48-linked ubiquitination and subsequent degradation<sup class="footnote-ref"><a href="#fn75" id="fnref75">[75]</a></sup>. Similarly, deubiquitinating enzyme <em>faf</em> could prevent Imd ubiquitin<sup class="footnote-ref"><a href="#fn76" id="fnref76">[76]</a></sup>. RING-finger protein POSH could degrade <em>Tak1</em><sup class="footnote-ref"><a href="#fn77" id="fnref77">[77]</a></sup>. Deubiquitinating <em>CYLD</em> could also negatively regulated Imd by interact with IKK<sup class="footnote-ref"><a href="#fn78" id="fnref78">[78]</a></sup>. Relish activate is relied on degradation by SCF complex<sup class="footnote-ref"><a href="#fn79" id="fnref79">[79]</a></sup> and might promoted by ubiquitin-binding protein dRYBP<sup class="footnote-ref"><a href="#fn80" id="fnref80">[80]</a></sup>. Caspar is also inhibits the Dredd-mediated cleavage of Relish<sup class="footnote-ref"><a href="#fn81" id="fnref81">[81]</a></sup>.</p><p>Transcription factor: <em>Imd</em> pathway is negatively regulated by transcriptional factor <em>zfh1</em> and the <em>AP-1/Stat92E</em> complex. <em>Zfh1</em> could down-regulating dramatically in vitro but not quit clear in vivo<sup class="footnote-ref"><a href="#fn82" id="fnref82">[82]</a></sup><sup class="footnote-ref"><a href="#fn83" id="fnref83">[83]</a></sup><sup class="footnote-ref"><a href="#fn84" id="fnref84">[84]</a></sup>. The JNK pathway TF AP-1, Stat92E, and Dsp1 thant bands to the <em>Relish</em> target genes.<br>Fead back gene <em>prik</em> could regulate the Imd pathway, too<sup class="footnote-ref"><a href="#fn85" id="fnref85">[85]</a></sup>. And it is needed for the normal tolerance of gut macrobiota<sup class="footnote-ref"><a href="#fn86" id="fnref86">[86]</a></sup>. Caudal is the intestinal homeobox gene and expressed in adult gut<sup class="footnote-ref"><a href="#fn87" id="fnref87">[87]</a></sup>. Silencing of it could cause AMPs constantly expression<sup class="footnote-ref"><a href="#fn88" id="fnref88">[88]</a></sup>.</p><p>20-Hydroxyecdysterone (ecdysone) is needed for the phagocytic of hymocytes<sup class="footnote-ref"><a href="#fn89" id="fnref89">[89]</a></sup> and may directly effect the Imd signaling pathway<sup class="footnote-ref"><a href="#fn90" id="fnref90">[90]</a></sup>.</p><p>!!! Others related Imd<br>Genes like <em>PGRPs</em> and <em>Relish</em> from Imd and seom <em><abbr title="Antimicrobial peptides">AMP</abbr></em> are increased during aging<sup class="footnote-ref"><a href="#fn91" id="fnref91">[91]</a></sup><sup class="footnote-ref"><a href="#fn92" id="fnref92">[92]</a></sup><sup class="footnote-ref"><a href="#fn93" id="fnref93">[93]</a></sup>. In calorie-resistance diet experiment shows that Relish mutanted flies could live longer<sup class="footnote-ref"><a href="#fn94" id="fnref94">[94]</a></sup>. On the other hand, over-expression <em>Relish</em> related AMPs could induce neurodegeneratetion<sup class="footnote-ref"><a href="#fn95" id="fnref95">[95]</a></sup>.</p><h3 id="Reactive-Oxygen-Species">Reactive Oxygen Species</h3><blockquote><p>Reactive oxygen species (ROS) is a collective term that includes both oxygen radicals, such as superoxide (O<sub>2</sub><sup>·−</sup>), hydroxyl (OH<sup>·</sup>), peroxyl (RO<sub>2</sub><sup>·</sup>), and hydroperoxyl (HO<sub>2</sub><sup>·</sup>) radicals, and certain nonradical oxidizing agents, such as hydrogen peroxide (H<sub>2</sub>O<sub>2</sub>), hypochlorous acid (HOCl), and ozone (O<sub>3</sub>), that can be converted easily to into radicals<sup class="footnote-ref"><a href="#fn96" id="fnref96">[96]</a></sup>. ROS are also produced during normal metabolism and are involved in enzymatic reactions, mitochondrial electron transport, signal transduction, activation of nuclear transcription factors, gene expression, and the antimicrobial action of neutrophils and macrophages.</p><p>This reducing environment is maintained by the action of antioxidant enzymes and substances, such as superoxide dismutase (<strong>SOD</strong>), catalase (<strong>cat</strong>), glutathione peroxidase (<strong>Gpxl</strong>/<strong>Gtpx</strong>), glutathione (<strong>GSH</strong>), ascorbate (<strong>V<sub>C</sub></strong>), α-tocopherol ( <strong>V<sub>E</sub></strong>), and thioredoxin (<strong>Prx4</strong>). Alterations in the redox state and depletion of antioxidants by exposure to oxidants lead to oxidative stress and resultant oxidative injury.</p><p>The oxygen molecule (dioxygen; O<sub>2</sub>) qualifies as a radical because (in its ground state) it has two unpaired electrons. From a quantum mechanical standpoint, the electron spin quantum number for ground state dioxygen is three (i.e., oxygen is a triplet species). Since most stable organic molecules are in singlet state (electron spin quantum number equal to one), the reaction of ground state oxygen with cellular constituents is “spin forbidden” even though oxygen is considered a powerful oxidizing agent. To overcome spin restriction, oxygen prefers to accept electrons one at a time, and the sequential addition of electrons leads to formation of ROS. Acceptance of a single electron by an oxygen molecule forms O<sub>2</sub><sup>·−</sup>, which has one unpaired electron. Superoxide itself has limited reactivity. It is capable of inactivating few enzymes directly. The reduced nicotinamide adenine dinucleotide phosphate dehydrogenase complex of the mitochondrial electron transport chain is one of the enzymes shown to be a direct target for O<sub>2</sub><sup>·−</sup> attack<sup class="footnote-ref"><a href="#fn97" id="fnref97">[97]</a></sup>.<br>cite: <a href="https://journals.lww.com/ccmjournal/Fulltext/2005/12001/Reactive_oxygen_species.00031.aspx">Bayr, 2005</a> (<strong>Bold words</strong> are added by me)</p></blockquote><div class="admonition info"><p class="admonition-title">r Source of ROS</p><p>The main source of ROS comes from nicotinamide adenine dinucleotide phosphate (NADPH) oxidase, xanthine oxidoreductase (XOR), and myeloperoxidase (MPO)</p></div><ul><li>Important function in innate immunity<sup class="footnote-ref"><a href="#fn98" id="fnref98">[98]</a></sup></li><li>signaling molecules: H<sub>2</sub>O<sub>2</sub> regulating NFκB, MAPK pathways<sup class="footnote-ref"><a href="#fn99" id="fnref99">[99]</a></sup></li><li>It could produced by:<ul><li>Mitochondria<sup class="footnote-ref"><a href="#fn100" id="fnref100">[100]</a></sup></li><li>NADPH oxidase<sup class="footnote-ref"><a href="#fn101" id="fnref101">[101]</a></sup> (<abbr title="dual oxidase">DUOX</abbr>)</li><li>Peroxisomes (which contain enzymes that produce H<sub>2</sub>O<sub>2</sub> e.g. polyamine oxidase)<sup class="footnote-ref"><a href="#fn102" id="fnref102">[102]</a></sup>.</li></ul></li></ul><p>Increasing intestine epithelia cells calcium could increase the ROS level and it could be rescude by EGTA or diphenylene iodonium (DPI)<sup class="footnote-ref"><a href="#fn103" id="fnref103">[103]</a></sup>.  Some oncogenes activation could increasing ROS<sup class="footnote-ref"><a href="#fn104" id="fnref104">[104]</a></sup><sup class="footnote-ref"><a href="#fn105" id="fnref105">[105]</a></sup>. ROS oxidize dNTPs which is needed for polymerase<sup class="footnote-ref"><a href="#fn106" id="fnref106">[106]</a></sup><sup class="footnote-ref"><a href="#fn107" id="fnref107">[107]</a></sup>. On the other hand, ROX may slower the replication speed<sup class="footnote-ref"><a href="#fn108" id="fnref108">[108]</a></sup>, as a physical obstacle<sup class="footnote-ref"><a href="#fn109" id="fnref109">[109]</a></sup> and broken it to form fragments<sup class="footnote-ref"><a href="#fn110" id="fnref110">[110]</a></sup>. <em>NRF2</em> deficiency could also increase ROS because <em>NRF2</em> TF promotes the expression of oxidative stress related genes<sup class="footnote-ref"><a href="#fn111" id="fnref111">[111]</a></sup>.</p><p>Read this one: <a href="https://www.sciencedirect.com/science/article/pii/S2213231718309017#bib28">ROS and the DNA damage response in cancer</a></p><h4 id="DUOX-dual-oxidase"><abbr title="dual oxidase">DUOX</abbr> (dual oxidase)</h4><p>Duox is a kind of NADPH oxidase which could catalase NADPH into ROS (H<sub>2</sub>O<sub>2</sub>)<sup class="footnote-ref"><a href="#fn112" id="fnref112">[112]</a></sup>. Minor infection through food microbe-contaminated food could kill <abbr title="dual oxidase">DUOX</abbr>-deficiency flies but doesn’t change the Nox/NFκB deficiency flies<sup class="footnote-ref"><a href="#fn103" id="fnref103:1">[103:1]</a></sup>. In verses, Immune-regulated catalase (<em>Irc</em>) could consume ROS and work with Duox to keep the concentration of ROS in balance<sup class="footnote-ref"><a href="#fn113" id="fnref113">[113]</a></sup>.IRC-RNAi fly would have a high level of ROS and it could be rescued by <abbr title="dual oxidase">DUOX</abbr>-RNAi</p><style>pre {  background-color:#38393d;  color: #5fd381;}</style><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.sciencedirect.com/science/article/pii/S0145305X13001638">Keebaugh, Erin S., and Todd A. Schlenke. “Insights from natural host–parasite interactions: The Drosophila model.” Developmental &amp; Comparative Immunology 42.1 (2014): 111-123.</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Perez-Leanos, Alejandra et al. “Ectoparasitic mites and their Drosophila hosts.” Fly vol. 11,1 (2017): 10-18. doi:10.1080/19336934.2016.1222998 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://www.jstor.org/stable/2462359">Jaenike, John. “Mycophagous Drosophila and their nematode parasites.” The American Naturalist 139.5 (1992): 893-906.</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>Magwire MM, Fabian DK, Schweyen H, Cao C, Longdon B, Bayer F, Jiggins FM. Genome-wide association studies reveal a simple genetic basis of resistance to naturally coevolving viruses in Drosophila melanogaster . Plos Genet. 2012; 8:e1003057. [PubMed: 23166512] <a href="#fnref4" class="footnote-backref">↩︎</a> <a href="#fnref4:1" class="footnote-backref">↩︎</a> <a href="#fnref4:2" class="footnote-backref">↩︎</a> <a href="#fnref4:3" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>De Gregorio E, Spellman PT, Tzou P, Rubin GM, Lemaitre B. The Toll and Imd pathways are the major regulators of the immune response in Drosophila. EMBO J. 2002; 21:2568–2579. [PubMed:12032070] <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p>Boutros M, Agaisse H, Perrimon N. Sequential activation of signaling pathways during innate immune responses in Drosophila. Dev Cell. 2002; 3:711–722. [PubMed: 12431377] <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p>Brennecke J, Malone CD, Aravin AA, Sachidanandam R, Stark A, Hannon GJ. An epigenetic role for maternally inherited piRNAs in transposon silencing. Science. 2008; 322:1387–1392. [PubMed: 19039138] <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p>Sato K, Siomi MC. The piRNA pathway in Drosophila ovarian germ and somatic cells. Proc Jpn Acad Ser B Phys Biol Sci. 2020;96(1):32-42. doi:10.2183/pjab.96.003 <a href="#fnref8" class="footnote-backref">↩︎</a></p></li><li id="fn9" class="footnote-item"><p>Dr.Samanthi, 2022; What is the Difference Between DNA Transposons and Retrotransposons <a href="#fnref9" class="footnote-backref">↩︎</a></p></li><li id="fn10" class="footnote-item"><p><a href="https://www.researchgate.net/publication/303395236_Characterization_of_Nora_Virus_Structural_Proteins_via_Western_Blot_Analysis">Ericson, Brad &amp; Carlson, Darby &amp; Carlson, Kim. (2016). Characterization of Nora Virus Structural Proteins via Western Blot Analysis. Scientifica. 2016. 1-8. 10.1155/2016/9067848. </a> <a href="#fnref10" class="footnote-backref">↩︎</a></p></li><li id="fn11" class="footnote-item"><p>Carpenter J, Hutter S, Baines JF, Roller J, Saminadin-Peter SS, Parsch J, Jiggins FM. The transcriptional response of Drosophila melanogaster to infection with the sigma virus (Rhabdoviridae). PLoS One. 2009; 4:e6838. [PubMed: 19718442] <a href="#fnref11" class="footnote-backref">↩︎</a></p></li><li id="fn12" class="footnote-item"><p>Tsai CW, McGraw EA, Ammar ED, Dietzgen RG, Hogenhout SA. Drosophila melanogaster mounts a unique immune response to the Rhabdovirus sigma virus. Appl Environ Microbiol. 2008; 74:3251–3256. [PubMed: 18378641] <a href="#fnref12" class="footnote-backref">↩︎</a></p></li><li id="fn13" class="footnote-item"><p>Longdon B, Jiggins FM. Vertically transmitted viral endosymbionts of insects: do sigma viruses walk alone? Proc Biol Sci. 2012; 279:3889–3898. [PubMed: 22859592] <a href="#fnref13" class="footnote-backref">↩︎</a></p></li><li id="fn14" class="footnote-item"><p>Magwire MM, Bayer F, Webster CL, Cao CA, Jiggins FM. Successive increases in the resistance of Drosophila to viral infection through a transposon insertion followed by a duplication. Plos Genet. 2011; 7:e1002337. [PubMed: 22028673] <a href="#fnref14" class="footnote-backref">↩︎</a></p></li><li id="fn15" class="footnote-item"><p>Dostert C, Jouanguy E, Irving P, Troxler L, Galiana-Arnoux D, Hetru C, Hoffmann JA, Imler JL. The Jak-STAT signaling pathway is required but not sufficient for the antiviral response of Drosophila. Nat Immunol. 2005; 6:946–953. [PubMed: 16086017] <a href="#fnref15" class="footnote-backref">↩︎</a></p></li><li id="fn16" class="footnote-item"><p>Kemp C, Mueller S, Goto A, Barbier V, Paro S, Bonnay F, Dostert C, Troxler L, Hetru C, Meignin C, Pfeffer S, Hoffmann JA, Imler JL. Broad RNA interference-mediated antiviral immunity and virus-specific inducible responses in Drosopila. J Immunol. 2013; 190:650–658. [PubMed: 23255357] <a href="#fnref16" class="footnote-backref">↩︎</a></p></li><li id="fn17" class="footnote-item"><p><a href="https://onlinelibrary.wiley.com/doi/full/10.1111/j.1462-5822.2006.00688.x">Zambon R A, Vakharia V N, Wu L P. RNAi is an antiviral immune response against a dsRNA virus in Drosophila melanogaster[J]. Cellular microbiology, 2006, 8(5): 880-889.</a> <a href="#fnref17" class="footnote-backref">↩︎</a></p></li><li id="fn18" class="footnote-item"><p><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0005731">Habayeb MS, Ekstrom JO, Hultmark D. Nora virus persistent infections are not affected by the RNAi machinery. PLoS One. 2009; 4:e5731. [PubMed: 19478998]</a> <a href="#fnref18" class="footnote-backref">↩︎</a></p></li><li id="fn19" class="footnote-item"><p>Liu, Qinghua, et al. “R2D2, a bridge between the initiation and effector steps of the Drosophila RNAi pathway.” Science 301.5641 (2003): 1921-1925. <a href="#fnref19" class="footnote-backref">↩︎</a></p></li><li id="fn20" class="footnote-item"><p>Dostert, C., Jouanguy, E., Irving, P., Troxler, L., Galiana-Arnoux, D., Hetru, C., et al. (2005). The Jak-STAT signaling pathway is required but not sufficient for the antiviral response of drosophila. Nat. Immunol. 6, 946–953. doi: 10.1038/ni1237 <a href="#fnref20" class="footnote-backref">↩︎</a></p></li><li id="fn21" class="footnote-item"><p>Zambon, R. A., Nandakumar, M., Vakharia, V. N., and Wu, L. P. (2005). The Toll pathway is important for an antiviral response in Drosophila. Proc. Natl. Acad. Sci. U.S.A. 102, 7257–7262. doi: 10.1073/pnas.0409181102 <a href="#fnref21" class="footnote-backref">↩︎</a></p></li><li id="fn22" class="footnote-item"><p>Costa, A., Jan, E., Sarnow, P., and Schneider, D. (2009). The Imd pathway is involved in antiviral immune responses in Drosophila. PLoS ONE 4:e7436. doi: 10.1371/journal.pone.0007436 <a href="#fnref22" class="footnote-backref">↩︎</a></p></li><li id="fn23" class="footnote-item"><p>Vodovar N, Vinals M, Liehl P, Basset A, Degrouard J, Spellman P, Boccard F, Lemaitre B. Drosophila host defense after oral infection by an entomopathogenic Pseudomonas species. Proc Natl Acad Sci USA. 2005; 102:11414–11419. [PubMed: 16061818] <a href="#fnref23" class="footnote-backref">↩︎</a></p></li><li id="fn24" class="footnote-item"><p>Zheng Y, Ren PP, Wang JL, Wang YF. Wolbachia-induced cytoplasmic incompatibility is associated with decreased Hira expression in male Drosophila. PLoS One. 2011a; 6:e19512. [PubMed: 21559343] <a href="#fnref24" class="footnote-backref">↩︎</a></p></li><li id="fn25" class="footnote-item"><p>Zheng Y, Wang JL, Liu C, Wang CP, Walker T, Wang YF. Differentially expressed profiles in the larval testes of Wolbachia infected and uninfected Drosophila. BMC Genomics. 2011b; 12:595. [PubMed: 22145623] <a href="#fnref25" class="footnote-backref">↩︎</a></p></li><li id="fn26" class="footnote-item"><p>Weeks AR, Turelli M, Harcombe WR, Reynolds KT, Hoffmann AA. From parasite to mutualist: Rapid evolution of Wolbachia in natural populations of Drosophila. Plos Biol. 2007; 5:997–1005. <a href="#fnref26" class="footnote-backref">↩︎</a></p></li><li id="fn27" class="footnote-item"><p>Hedges LM, Brownlie JC, O’Neill SL, Johnson KN. Wolbachia and virus protection in insects. Science. 2008; 322:702. [PubMed: 18974344] <a href="#fnref27" class="footnote-backref">↩︎</a></p></li><li id="fn28" class="footnote-item"><p>Osborne SE, Leong YS, ONeill SL, Johnson KN. Variation in antiviral protection mediated by different Wolbachia strains in Drosophila simulans . PLoS Pathog. 2009; 5:e1000656. [PubMed: 19911047] <a href="#fnref28" class="footnote-backref">↩︎</a></p></li><li id="fn29" class="footnote-item"><p>Teixeira L, Ferreira A, Ashburner M. The bacterial symbiont Wolbachia induces resistance to RNA viral infections in Drosophila melanogaster . PLoS Biol. 2008; 6:e2. [PubMed: 19222304] <a href="#fnref29" class="footnote-backref">↩︎</a> <a href="#fnref29:1" class="footnote-backref">↩︎</a></p></li><li id="fn30" class="footnote-item"><p>Panteleev D, Goriacheva II, Andrianov BV, Reznik NL, Lazebnyi OE, Kulikov AM. The endosymbiotic bacterium Wolbachia enhances the nonspecific resistance to insect pathogens and alters behavior of Drosophila melanogaster . Genetika. 2007; 43:1277–1280. [PubMed: 17990528] <a href="#fnref30" class="footnote-backref">↩︎</a></p></li><li id="fn31" class="footnote-item"><p>Hedges LM, Yamada R, O’Neill SL, Johnson KN. The small interfering RNA pathway is not essential for Wolbachia-mediated antiviral protection in Drosophila melanogaster . Appl Environ Microbiol. 2012; 78:6773–6776. [PubMed: 22798369] <a href="#fnref31" class="footnote-backref">↩︎</a></p></li><li id="fn32" class="footnote-item"><p>Rottschaefer SM, Lazzaro BP. No effect of Wolbachia on resistance to intracellular infection by pathogenic bacteria in Drosophila melanogaster . PLoS One. 2012; 7:e40500. [PubMed: 22808174] <a href="#fnref32" class="footnote-backref">↩︎</a></p></li><li id="fn33" class="footnote-item"><p>Unckless RL. A DNA virus of Drosophila. PLoS One. 2011; 6:e26564. [PubMed: 22053195] <a href="#fnref33" class="footnote-backref">↩︎</a></p></li><li id="fn34" class="footnote-item"><p>Wong ZS, Hedges LM, Brownlie JC, Johnson KN. Wolbachia-mediated antibacterial protection and immune gene regulation in Drosophila. PLoS One. 2011; 6:e25430. [PubMed: 21980455] <a href="#fnref34" class="footnote-backref">↩︎</a></p></li><li id="fn35" class="footnote-item"><p>Pastor-Pareja, J. C., Wu, M., and Xu, T. (2008). An innate immune response of blood cells to tumors and tissue damage in Drosophila. Dis. Model. Mech. 1, 144–154. discussion: 53. doi: 10.1242/dmm.000950 <a href="#fnref35" class="footnote-backref">↩︎</a></p></li><li id="fn36" class="footnote-item"><p>Gonzalez, C. (2013). Drosophila melanogaster: a model and a tool to investigate malignancy and identify new therapeutics. Nat. Rev. Cancer 13, 172–183. doi: 10.1038/nrc3461 <a href="#fnref36" class="footnote-backref">↩︎</a></p></li><li id="fn37" class="footnote-item"><p>Rudrapatna, V. A., Cagan, R. L., and Das, T. K. (2012). Drosophila cancer models. Dev. Dyn. 241, 107–118. doi: 10.1002/dvdy.22771 <a href="#fnref37" class="footnote-backref">↩︎</a></p></li><li id="fn38" class="footnote-item"><p>Brumby, A. M., and Richardson, H. E. (2003). Scribble mutants cooperate with oncogenic Ras or Notch to cause neoplastic overgrowth in Drosophila. EMBO J. 22, 5769–5779. doi: 10.1093/emboj/cdg548 <a href="#fnref38" class="footnote-backref">↩︎</a></p></li><li id="fn39" class="footnote-item"><p>Pagliarini, R. A., and Xu, T. (2003). A genetic screen in Drosophila for metastatic behavior. Science 302, 1227–1231. doi: 10.1126/science.1088474 <a href="#fnref39" class="footnote-backref">↩︎</a></p></li><li id="fn40" class="footnote-item"><p><a href="https://www.frontiersin.org/articles/10.3389/fcimb.2013.00103/full">Bangi E. Drosophila at the intersection of infection, inflammation, and cancer. Front Cell Infect Microbiol. 2013;3:103. Published 2013 Dec 19. doi:10.3389/fcimb.2013.00103</a> <a href="#fnref40" class="footnote-backref">↩︎</a> <a href="#fnref40:1" class="footnote-backref">↩︎</a></p></li><li id="fn41" class="footnote-item"><p>Waters, J. P., Pober, J. S., and Bradley, J. R. (2013). Tumour necrosis factor in infectious disease. J. Pathol. 230, 132–147. doi: 10.1002/path.4187 <a href="#fnref41" class="footnote-backref">↩︎</a></p></li><li id="fn42" class="footnote-item"><p>Igaki, T., Pastor-Pareja, J. C., Aonuma, H., Miura, M., and Xu, T. (2009). Intrinsic tumor suppression and epithelial maintenance by endocytic activation of Eiger/TNF signaling in Drosophila. Dev. Cell 16, 458–465. doi: 10.1016/j.devcel.2009.01.002 <a href="#fnref42" class="footnote-backref">↩︎</a></p></li><li id="fn43" class="footnote-item"><p>Cordero, J. B., Macagno, J. P., Stefanatos, R. K., Strathdee, K. E., Cagan, R. L., and Vidal, M. (2010). Oncogenic ras diverts a host TNF Tumor suppressor activity into Tumor promoter. Dev. Cell 18, 999–1011. doi: 10.1016/j.devcel.2010.05.014 <a href="#fnref43" class="footnote-backref">↩︎</a></p></li><li id="fn44" class="footnote-item"><p>Hatakeyama, M. (2008). SagA of CagA in Helicobacter pylori pathogenesis. Curr. Opin. Microbiol. 11, 30–37. doi: 10.1016/j.mib.2007.12.003 <a href="#fnref44" class="footnote-backref">↩︎</a></p></li><li id="fn45" class="footnote-item"><p>Wandler, A. M., and Guillemin, K. (2012). Transgenic expression of the Helicobacter pylori virulence factor CagA promotes apoptosis or tumorigenesis through JNK activation in Drosophila. PLoS Pathog. 8:e1002939. doi: 10.1371/journal.ppat.1002939 <a href="#fnref45" class="footnote-backref">↩︎</a></p></li><li id="fn46" class="footnote-item"><p><a href="https://www.nature.com/articles/nrc2541">Rakoff-Nahoum S, Medzhitov R. Toll-like receptors and cancer[J]. Nature reviews cancer, 2009, 9(1): 57-63.</a> <a href="#fnref46" class="footnote-backref">↩︎</a> <a href="#fnref46:1" class="footnote-backref">↩︎</a></p></li><li id="fn47" class="footnote-item"><p>Wang, J. H., Manning, B. J., Wu, Q. D., Blankson, S., Bouchier-Hayes, D., Redmond, H. P., et al. (2003). Endotoxin/lipopolysaccharide activates NF-kappa B and enhances tumor cell adhesion and invasion through a beta 1 integrin-dependent mechanism. J. Immunol. 170, 795–804. <a href="#fnref47" class="footnote-backref">↩︎</a></p></li><li id="fn48" class="footnote-item"><p>Merrell, M. A., Ilvesaro, J. M., Lehtonen, N., Sorsa, T., Gehrs, B., Rosenthal, E., et al. (2006). Toll-like receptor 9 agonists promote cellular invasion by increasing matrix metalloproteinase activity. Mol. Cancer Res. 4, 437–447. doi: 10.1158/1541-7786.MCR-06-0007 <a href="#fnref48" class="footnote-backref">↩︎</a></p></li><li id="fn49" class="footnote-item"><p>Rutschmann S, Jung AC, Hetru C, Reichhart JM, Hoffmann JA, Ferrandon D. The Rel protein DIF mediates the antifungal but not the antibacterial host defense in Drosophila. Immunity. 2000 May;12(5):569-80. doi: 10.1016/s1074-7613(00)80208-3. PMID: 10843389. <a href="#fnref49" class="footnote-backref">↩︎</a></p></li><li id="fn50" class="footnote-item"><p>J. A. Hoffmann, J. M. Reichhart, Nature Immunol.3, 121 (2002). <a href="#fnref50" class="footnote-backref">↩︎</a></p></li><li id="fn51" class="footnote-item"><p>Gobert, Vanessa, et al. “Dual activation of the Drosophila toll pathway by two pattern recognition receptors.” Science 302.5653 (2003): 2126-2130. <a href="#fnref51" class="footnote-backref">↩︎</a></p></li><li id="fn52" class="footnote-item"><p>Jang, In-Hwan, et al. “A Spätzle-processing enzyme required for toll signaling activation in Drosophila innate immunity.” Developmental cell 10.1 (2006): 45-55. <a href="#fnref52" class="footnote-backref">↩︎</a></p></li><li id="fn53" class="footnote-item"><p>A.N. Weber, M. Gangloff, M.C. Moncrieffe, Y. Hyvert, J.L. Imler, N.J. Gay; Role of the Spatzle Pro-domain in the generation of an active Toll receptor ligand. J. Biol. Chem., 282 (2007), pp. 13522-13531 <a href="#fnref53" class="footnote-backref">↩︎</a></p></li><li id="fn54" class="footnote-item"><p>M. Gangloff, A. Murali, J. Xiong, C.J. Arnot, A.N. Weber, A.M. Sandercock, C.V. Robinson, R. Sarisky, A. Holzenburg, C. Kao, N.J. Gay; Structural insight into the mechanism of activation of the Toll receptor by the dimeric ligand Spatzle. J. Biol. Chem., 283 (2008), pp. 14629-14635 <a href="#fnref54" class="footnote-backref">↩︎</a></p></li><li id="fn55" class="footnote-item"><p>Close T. Horng, R. Medzhitov. Drosophila MyD88 is an adapter in the Toll signaling pathway. Proc. Natl. Acad. Sci. USA, 98 (2001), pp. 12654-12658 <a href="#fnref55" class="footnote-backref">↩︎</a></p></li><li id="fn56" class="footnote-item"><p>Myllymäki H, Valanne S, Rämet M. The Drosophila imd signaling pathway[J]. The Journal of Immunology, 2014, 192(8): 3455-3462. <a href="#fnref56" class="footnote-backref">↩︎</a> <a href="#fnref56:1" class="footnote-backref">↩︎</a></p></li><li id="fn57" class="footnote-item"><p>Dushay M. S., B. Asling, D. Hultmark. 1996. Origins of immunity: Relish, a compound Rel-like gene in the antibacterial defense of Drosophila. Proc. Natl. Acad. Sci. USA 93: 10343–10347. <a href="#fnref57" class="footnote-backref">↩︎</a></p></li><li id="fn58" class="footnote-item"><p>Lemaitre B., E. Kromer-Metzger, L. Michaut, E. Nicolas, M. Meister, P. Georgel, J. M. Reichhart, J. A. Hoffmann. 1995. A recessive mutation, immune deficiency (imd), defines two distinct control pathways in the Drosophila host defense. Proc. Natl. Acad. Sci. USA 92: 9465–9469. <a href="#fnref58" class="footnote-backref">↩︎</a></p></li><li id="fn59" class="footnote-item"><p>Werner T., G. Liu, D. Kang, S. Ekengren, H. Steiner, D. Hultmark. 2000. A family of peptidoglycan recognition proteins in the fruit fly Drosophila melanogaster. Proc. Natl. Acad. Sci. USA 97: 13772–13777. <a href="#fnref59" class="footnote-backref">↩︎</a></p></li><li id="fn60" class="footnote-item"><p>Kaneko T., W. E. Goldman, P. Mellroth, H. Steiner, K. Fukase, S. Kusumoto, W. Harley, A. Fox, D. Golenbock, N. Silverman. 2004. Monomeric and polymeric gram-negative peptidoglycan but not purified LPS stimulate the Drosophila IMD pathway. Immunity 20: 637–649. <a href="#fnref60" class="footnote-backref">↩︎</a> <a href="#fnref60:1" class="footnote-backref">↩︎</a></p></li><li id="fn61" class="footnote-item"><p>Choe K. M., T. Werner, S. Stöven, D. Hultmark, K. V. Anderson. 2002. Requirement for a peptidoglycan recognition protein (PGRP) in Relish activation and antibacterial immune responses in Drosophila. Science 296: 359–362. <a href="#fnref61" class="footnote-backref">↩︎</a></p></li><li id="fn62" class="footnote-item"><p>Lim J. H., M. S. Kim, H. E. Kim, T. Yano, Y. Oshima, K. Aggarwal, W. E. Goldman, N. Silverman, S. Kurata, B. H. Oh. 2006. Structural basis for preferential recognition of diaminopimelic acid-type peptidoglycan by a subset of peptidoglycan recognition proteins. J. Biol. Chem. 281: 8286–8295. <a href="#fnref62" class="footnote-backref">↩︎</a> <a href="#fnref62:1" class="footnote-backref">↩︎</a></p></li><li id="fn63" class="footnote-item"><p>Kaneko T., T. Yano, K. Aggarwal, J. H. Lim, K. Ueda, Y. Oshima, C. Peach, D. Ertürk-Hasdemir, W. E. Goldman, B. H. Oh, et al. 2006. PGRP-LC and PGRP-LE have essential yet distinct functions in the drosophila immune response to monomeric DAP-type peptidoglycan. Nat. Immunol. 7: 715–723. <a href="#fnref63" class="footnote-backref">↩︎</a></p></li><li id="fn64" class="footnote-item"><p>Takehana A., T. Katsuyama, T. Yano, Y. Oshima, H. Takada, T. Aigaki, S. Kurata. 2002. Overexpression of a pattern-recognition receptor, peptidoglycan-recognition protein-LE, activates imd/relish-mediated antibacterial defense and the prophenoloxidase cascade in Drosophila larvae. Proc. Natl. Acad. Sci. USA 99: 13705–13710. <a href="#fnref64" class="footnote-backref">↩︎</a></p></li><li id="fn65" class="footnote-item"><p>Schmidt R. L., T. R. Trejo, T. B. Plummer, J. L. Platt, A. H. Tang. 2008. Infection-induced proteolysis of PGRP-LC controls the IMD activation and melanization cascades in Drosophila. FASEB J. 22: 918–929. <a href="#fnref65" class="footnote-backref">↩︎</a></p></li><li id="fn66" class="footnote-item"><p>Persson C., S. Oldenvi, H. Steiner. 2007. Peptidoglycan recognition protein LF: a negative regulator of Drosophila immunity. Insect Biochem. Mol. Biol. 37: 1309–1316. <a href="#fnref66" class="footnote-backref">↩︎</a></p></li><li id="fn67" class="footnote-item"><p>Gendrin M., A. Zaidman-Rémy, N. A. Broderick, J. Paredes, M. Poidevin, A. Roussel, B. Lemaitre. 2013. Functional analysis of PGRP-LA in Drosophila immunity. PLoS ONE 8: e69742. <a href="#fnref67" class="footnote-backref">↩︎</a></p></li><li id="fn68" class="footnote-item"><p>Meinander A., C. Runchel, T. Tenev, L. Chen, C. H. Kim, P. S. Ribeiro, M. Broemer, F. Leulier, M. Zvelebil, N. Silverman, P. Meier. 2012. Ubiquitylation of the initiator caspase DREDD is required for innate immune signalling. EMBO J. 31: 2770–2783. <a href="#fnref68" class="footnote-backref">↩︎</a></p></li><li id="fn69" class="footnote-item"><p>Paquette N., M. Broemer, K. Aggarwal, L. Chen, M. Husson, D. Ertürk-Hasdemir, J. M. Reichhart, P. Meier, N. Silverman. 2010. Caspase-mediated cleavage, IAP binding, and ubiquitination: linking three mechanisms crucial for Drosophila NF-kappaB signaling. Mol. Cell 37: 172–182. <a href="#fnref69" class="footnote-backref">↩︎</a></p></li><li id="fn70" class="footnote-item"><p>Lu Y., L. P. Wu, K. V. Anderson. 2001. The antibacterial arm of the drosophila innate immune response requires an IkappaB kinase. Genes Dev. 15: 104–110. <a href="#fnref70" class="footnote-backref">↩︎</a></p></li><li id="fn71" class="footnote-item"><p>Kleino A., S. Valanne, J. Ulvila, J. Kallio, H. Myllymäki, H. Enwald, S. Stöven, M. Poidevin, R. Ueda, D. Hultmark, et al. 2005. Inhibitor of apoptosis 2 and TAK1-binding protein are components of the Drosophila Imd pathway. EMBO J. 24: 3423–3434. <a href="#fnref71" class="footnote-backref">↩︎</a></p></li><li id="fn72" class="footnote-item"><p>Silverman N., R. Zhou, S. Stöven, N. Pandey, D. Hultmark, T. Maniatis. 2000. A Drosophila IkappaB kinase complex required for Relish cleavage and antibacterial immunity. Genes Dev. 14: 2461–2471. <a href="#fnref72" class="footnote-backref">↩︎</a> <a href="#fnref72:1" class="footnote-backref">↩︎</a></p></li><li id="fn73" class="footnote-item"><p>Ertürk-Hasdemir D., M. Broemer, F. Leulier, W. S. Lane, N. Paquette, D. Hwang, C. H. Kim, S. Stöven, P. Meier, N. Silverman. 2009. Two roles for the Drosophila IKK complex in the activation of Relish and the induction of antimicrobial peptide genes. Proc. Natl. Acad. Sci. USA 106: 9779–9784. <a href="#fnref73" class="footnote-backref">↩︎</a></p></li><li id="fn74" class="footnote-item"><p>Delaney J. R., S. Stöven, H. Uvell, K. V. Anderson, Y. Engström, M. Mlodzik. 2006. Cooperative control of Drosophila immune responses by the JNK and NF-kappaB signaling pathways. EMBO J. 25: 3068–3077. <a href="#fnref74" class="footnote-backref">↩︎</a></p></li><li id="fn75" class="footnote-item"><p>Thevenon D., E. Engel, A. Avet-Rochex, M. Gottar, E. Bergeret, H. Tricoire, C. Benaud, J. Baudier, E. Taillebourg, M. O. Fauvarque. 2009. The Drosophila ubiquitin-specific protease dUSP36/Scny targets IMD to prevent constitutive immune signaling. Cell Host Microbe 6: 309–320. <a href="#fnref75" class="footnote-backref">↩︎</a></p></li><li id="fn76" class="footnote-item"><p>Yagi Y., Y. M. Lim, L. Tsuda, Y. Nishida. 2013. fat facets induces polyubiquitination of Imd and inhibits the innate immune response in Drosophila. Genes Cells 18: 934–945. <a href="#fnref76" class="footnote-backref">↩︎</a></p></li><li id="fn77" class="footnote-item"><p>Tsuda M., C. Langmann, N. Harden, T. Aigaki. 2005. The RING-finger scaffold protein Plenty of SH3s targets TAK1 to control immunity signalling in Drosophila. EMBO Rep. 6: 1082–1087. <a href="#fnref77" class="footnote-backref">↩︎</a></p></li><li id="fn78" class="footnote-item"><p>Tsichritzis T., P. C. Gaentzsch, S. Kosmidis, A. E. Brown, E. M. Skoulakis, P. Ligoxygakis, G. Mosialos. 2007. A Drosophila ortholog of the human cylindromatosis tumor suppressor gene regulates triglyceride content and antibacterial defense. Development 134: 2605–2614. <a href="#fnref78" class="footnote-backref">↩︎</a></p></li><li id="fn79" class="footnote-item"><p>Khush R. S., W. D. Cornwell, J. N. Uram, B. Lemaitre. 2002. A ubiquitin-proteasome pathway represses the Drosophila immune deficiency signaling cascade. Curr. Biol. 12: 1728–1737. <a href="#fnref79" class="footnote-backref">↩︎</a></p></li><li id="fn80" class="footnote-item"><p>Aparicio R., C. Neyen, B. Lemaitre, A. Busturia. 2013. dRYBP contributes to the negative regulation of the Drosophila Imd pathway. PLoS ONE 8: e62052. <a href="#fnref80" class="footnote-backref">↩︎</a></p></li><li id="fn81" class="footnote-item"><p>Kim M., J. H. Lee, S. Y. Lee, E. Kim, J. Chung. 2006. Caspar, a suppressor of antibacterial immunity in Drosophila. Proc. Natl. Acad. Sci. USA 103: 16358–16363. <a href="#fnref81" class="footnote-backref">↩︎</a></p></li><li id="fn82" class="footnote-item"><p>Goto A., K. Matsushita, V. Gesellchen, L. El Chamy, D. Kuttenkeuler, O. Takeuchi, J. A. Hoffmann, S. Akira, M. Boutros, J. M. Reichhart. 2008. Akirins are highly conserved nuclear proteins required for NF-kappaB-dependent gene expression in drosophila and mice. Nat. Immunol. 9: 97–104. <a href="#fnref82" class="footnote-backref">↩︎</a></p></li><li id="fn83" class="footnote-item"><p>Kim T., J. Yoon, H. Cho, W. B. Lee, J. Kim, Y. H. Song, S. N. Kim, J. H. Yoon, J. Kim-Ha, Y. J. Kim. 2005. Downregulation of lipopolysaccharide response in Drosophila by negative crosstalk between the AP1 and NF-kappaB signaling modules. Nat. Immunol. 6: 211–218. <a href="#fnref83" class="footnote-backref">↩︎</a></p></li><li id="fn84" class="footnote-item"><p>Myllymäki H., M. Rämet. 2013. Transcription factor zfh1 downregulates Drosophila Imd pathway. Dev. Comp. Immunol. 39: 188–197. <a href="#fnref84" class="footnote-backref">↩︎</a></p></li><li id="fn85" class="footnote-item"><p>Kallio J., A. Leinonen, J. Ulvila, S. Valanne, R. A. Ezekowitz, M. Rämet. 2005. Functional analysis of immune response genes in Drosophila identifies JNK pathway as a regulator of antimicrobial peptide gene expression in S2 cells. Microbes Infect. 7: 811–819. <a href="#fnref85" class="footnote-backref">↩︎</a></p></li><li id="fn86" class="footnote-item"><p>Lhocine N., P. S. Ribeiro, N. Buchon, A. Wepf, R. Wilson, T. Tenev, B. Lemaitre, M. Gstaiger, P. Meier, F. Leulier. 2008. PIMS modulates immune tolerance by negatively regulating Drosophila innate immune signaling. Cell Host Microbe 4: 147–158. <a href="#fnref86" class="footnote-backref">↩︎</a></p></li><li id="fn87" class="footnote-item"><p>Buchon N., D. Osman, F. P. David, H. Y. Fang, J. P. Boquete, B. Deplancke, B. Lemaitre. 2013. Morphological and molecular characterization of adult midgut compartmentalization in Drosophila. Cell Rep. 3: 1725–1738. <a href="#fnref87" class="footnote-backref">↩︎</a></p></li><li id="fn88" class="footnote-item"><p>Ryu J. H., S. H. Kim, H. Y. Lee, J. Y. Bai, Y. D. Nam, J. W. Bae, D. G. Lee, S. C. Shin, E. M. Ha, W. J. Lee. 2008. Innate immune homeostasis by the homeobox gene caudal and commensal-gut mutualism in Drosophila. Science 319: 777–782. <a href="#fnref88" class="footnote-backref">↩︎</a></p></li><li id="fn89" class="footnote-item"><p>Regan J. C., A. S. Brandão, A. B. Leitão, A. R. Mantas Dias, E. Sucena, A. Jacinto, A. Zaidman-Rémy. 2013. Steroid hormone signaling is essential to regulate innate immune cells and fight bacterial infection in Drosophila. PLoS Pathog. 9: e1003720. <a href="#fnref89" class="footnote-backref">↩︎</a></p></li><li id="fn90" class="footnote-item"><p>Rus F., T. Flatt, M. Tong, K. Aggarwal, K. Okuda, A. Kleino, E. Yates, M. Tatar, N. Silverman. 2013. Ecdysone triggered PGRP-LC expression controls Drosophila innate immunity. EMBO J. 32: 1626–1638. <a href="#fnref90" class="footnote-backref">↩︎</a></p></li><li id="fn91" class="footnote-item"><p>Landis G. N., D. Abdueva, D. Skvortsov, J. Yang, B. E. Rabin, J. Carrick, S. Tavaré, J. Tower. 2004. Similar gene expression patterns characterize aging and oxidative stress in Drosophila melanogaster. Proc. Natl. Acad. Sci. USA 101: 7663–7668. <a href="#fnref91" class="footnote-backref">↩︎</a></p></li><li id="fn92" class="footnote-item"><p>Seroude L., T. Brummel, P. Kapahi, S. Benzer. 2002. Spatio-temporal analysis of gene expression during aging in Drosophila melanogaster. Aging Cell 1: 47–56. <a href="#fnref92" class="footnote-backref">↩︎</a></p></li><li id="fn93" class="footnote-item"><p>Pletcher S. D., S. J. Macdonald, R. Marguerie, U. Certa, S. C. Stearns, D. B. Goldstein, L. Partridge. 2002. Genome-wide transcript profiles in aging and calorically restricted Drosophila melanogaster. Curr. Biol. 12: 712–723. <a href="#fnref93" class="footnote-backref">↩︎</a></p></li><li id="fn94" class="footnote-item"><p>Valtonen T. M., A. Kleino, M. Rämet, M. Rantala. 2010. Starvation reveals maintenance cost of humoral immunity. Evol. Biol. 37: 49–57. <a href="#fnref94" class="footnote-backref">↩︎</a></p></li><li id="fn95" class="footnote-item"><p>Cao Y., S. Chtarbanova, A. J. Petersen, B. Ganetzky. 2013. Dnr1 mutations cause neurodegeneration in Drosophila by activating the innate immune response in the brain. Proc. Natl. Acad. Sci. USA 110: E1752–E1760. <a href="#fnref95" class="footnote-backref">↩︎</a></p></li><li id="fn96" class="footnote-item"><p>Halliwell B, Gutridge JMC: Free Radicals in Biology and Medicine. Second Edition Oxford, UK, Clarendon Press, 1989 <a href="#fnref96" class="footnote-backref">↩︎</a></p></li><li id="fn97" class="footnote-item"><p>Zhang Y, Marcillat O, Giulivi C, et al: The oxidative inactivation of mitochondrial electron transport chain components and ATPase. J Biol Chem 1990; 265:16330–16336 <a href="#fnref97" class="footnote-backref">↩︎</a></p></li><li id="fn98" class="footnote-item"><p>C. Dahlgren, A. Karlsson. Respiratory burst in human neutrophils. [J] Immunol. Methods, 232 (1–2) (1999), pp. 3-14 <a href="#fnref98" class="footnote-backref">↩︎</a></p></li><li id="fn99" class="footnote-item"><p>J. Zhang, X. Wang, V. Vikash, Q. Ye, D. Wu, Y. Liu, W. Dong. ROS and ROS-Mediated Cellular Signaling. Oxid. Med. Cell Longev., 2016 (2016), p. 4350965 <a href="#fnref99" class="footnote-backref">↩︎</a></p></li><li id="fn100" class="footnote-item"><p>J.J. Perry, D.S. Shin, E.D. Getzoff, J.A. Tainer. The structural biochemistry of the superoxide dismutases. Biochim. Biophys. Acta, 1804 (2) (2010), pp. 245-262 <a href="#fnref100" class="footnote-backref">↩︎</a></p></li><li id="fn101" class="footnote-item"><p>J.L. Meitzler, S. Antony, Y. Wu, A. Juhasz, H. Liu, G. Jiang, J. Lu, K. Roy, J.H. Doroshow. NADPH oxidases: a perspective on reactive oxygen species production in tumor biology. Antioxid. Redox Signal., 20 (17) (2014), pp. 2873-2889 <a href="#fnref101" class="footnote-backref">↩︎</a></p></li><li id="fn102" class="footnote-item"><p>M. Fransen, M. Nordgren, B. Wang, O. Apanasets. Role of peroxisomes in ROS/RNS-metabolism: implications for human disease. Biochim. Biophys. Acta, 1822 (9) (2012), pp. 1363-1373 <a href="#fnref102" class="footnote-backref">↩︎</a></p></li><li id="fn103" class="footnote-item"><p>Ha E. M., C. T. Oh, Y. S. Bae, W. J. Lee. 2005. A direct role for dual oxidase in Drosophila gut immunity. Science 310: 847–850. <a href="#fnref103" class="footnote-backref">↩︎</a> <a href="#fnref103:1" class="footnote-backref">↩︎</a></p></li><li id="fn104" class="footnote-item"><p>A. Maya-Mendoza, J. Ostrakova, M. Kosar, A. Hall, P. Duskova, M. Mistrik, J.M. Merchut-Maya, Z. Hodny, J. Bartkova, C. Christensen, et al. Myc and Ras oncogenes engage different energy metabolism programs and evoke distinct patterns of oxidative and DNA replication stress. Mol. Oncol., 9 (3) (2015), pp. 601-616 <a href="#fnref104" class="footnote-backref">↩︎</a></p></li><li id="fn105" class="footnote-item"><p>M.T. Park, M.J. et al. Novel signaling axis for ROS generation during K-Ras-induced cellular transformation. Cell Death Differ., 21 (8) (2014), pp. 1185-1197 <a href="#fnref105" class="footnote-backref">↩︎</a></p></li><li id="fn106" class="footnote-item"><p>Y. Meng, C.W. Chen, et al. DUOXA1-mediated ROS production promotes cisplatin resistance by activating ATR-Chk1 pathway in ovarian cancer. Cancer Lett., 428 (2018), pp. 104-116 <a href="#fnref106" class="footnote-backref">↩︎</a></p></li><li id="fn107" class="footnote-item"><p>D. Graindorge, S. Martineau, et al., Singlet oxygen-mediated oxidation during UVA radiation alters the dynamic of genomic DNA replication. PLoS One, 10 (10) (2015), p. e0140645 <a href="#fnref107" class="footnote-backref">↩︎</a></p></li><li id="fn108" class="footnote-item"><p>K. Somyajit, R. Gupta, et al., Redox-sensitive alteration of replisome architecture safeguards genome integrity. Science, 358 (6364) (2017), pp. 797-802 <a href="#fnref108" class="footnote-backref">↩︎</a></p></li><li id="fn109" class="footnote-item"><p>Y. Sedletska, J.P. Radicella, E. Sage. Replication fork collapse is a major cause of the high mutation frequency at three-base lesion clusters. Nucleic Acids Res., 41 (20) (2013), pp. 9339-9348 <a href="#fnref109" class="footnote-backref">↩︎</a></p></li><li id="fn110" class="footnote-item"><p>P. Kotsantis, E. Petermann, S.J. Boulton. Mechanisms of oncogene-induced replication stress: jigsaw falling into place. Cancer Discov., 8 (5) (2018), pp. 537-555 <a href="#fnref110" class="footnote-backref">↩︎</a></p></li><li id="fn111" class="footnote-item"><p>S. Zhou, W. Ye, Q. Shao, et al., Nrf2 is a potential therapeutic target in radioresistance in human cancer. Crit. Rev. Oncol. Hematol., 88 (3) (2013), pp. 706-715 <a href="#fnref111" class="footnote-backref">↩︎</a></p></li><li id="fn112" class="footnote-item"><p>Lee KA, Kim B, Bhin J, Kim DH, You H, Kim EK, Kim SH, Ryu JH, Hwang D, Lee WJ. Bacterial uracil modulates Drosophila <abbr title="dual oxidase">DUOX</abbr>-dependent gut immunity via Hedgehog-induced signaling endosomes. Cell Host Microbe. 2015 Feb 11;17(2):191-204. doi: 10.1016/j.chom.2014.12.012. Epub 2015 Jan 29. PMID: 25639794. <a href="#fnref112" class="footnote-backref">↩︎</a></p></li><li id="fn113" class="footnote-item"><p>Ha EM, Oh CT, Ryu JH, Bae YS, Kang SW, Jang IH, Brey PT, Lee WJ. An antioxidant system required for host protection against gut infection in Drosophila. Dev Cell. 2005 Jan;8(1):125-32. doi: 10.1016/j.devcel.2004.11.007. PMID: 15621536. <a href="#fnref113" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">Drosophila Parasites</summary>
    
    
    
    <category term="Notes" scheme="https://karobben.github.io/categories/Notes/"/>
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Notes/Biology/"/>
    
    <category term="Paper" scheme="https://karobben.github.io/categories/Notes/Biology/Paper/"/>
    
    
    <category term="Paper" scheme="https://karobben.github.io/tags/Paper/"/>
    
    <category term="dme" scheme="https://karobben.github.io/tags/dme/"/>
    
    <category term="flies" scheme="https://karobben.github.io/tags/flies/"/>
    
  </entry>
  
  <entry>
    <title>Short reads aligner compartment</title>
    <link href="https://karobben.github.io/2022/09/25/Bioinfor/fq-aligner/"/>
    <id>https://karobben.github.io/2022/09/25/Bioinfor/fq-aligner/</id>
    <published>2022-09-25T20:29:16.000Z</published>
    <updated>2023-02-11T19:20:04.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction">Introduction</h2><h3 id="BWA">BWA</h3><p><a href="https://bio-bwa.sourceforge.net/">Burrows-Wheeler Aligner</a></p><div class="admonition note"><p class="admonition-title">According to the Documentation</p></div><p>BWA is a software package for mapping <strong>low-divergent sequences</strong> against a large reference genome, such as the human genome. It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.</p><ul><li><mark>BWA-backtrack</mark>: It is designed for <strong>Illumina sequence reads up to 100bp</strong>,</li><li><mark>BWA-MEM</mark>: BWA-MEM and BWA-SW share similar features such as <strong>long-read support</strong> (70bp to 1Mbp) and <strong>split alignment</strong>. It is generally recommended for high-quality queries as it is faster and <strong>more accurate</strong>. It also has better performance than <strong>BWA-backtrack for 70-100bp Illumina reads</strong>.</li></ul><div class="admonition error"><p class="admonition-title">QS</p></div><ul><li>There are three algorithms, which one should I choose?<br>For 70bp or longer Illumina, 454, Ion Torrent and Sanger reads, assembly contigs and BAC sequences, BWA-MEM is usually the preferred algorithm. For short sequences, BWA-backtrack may be better. BWA-SW may have better sensitivity when alignment gaps are frequent.</li><li>What is the tolerance of sequencing errors?<ul><li>Bwa-back is mainly designed for sequencing error rates <strong>below 2%</strong>.</li><li>WA-SW and BWA-MEM both tolerate more errors given longer alignment. Simulation suggests that they may work well given 2% error for an 100bp alignment, 3% error for a 200bp, 5% for 500bp and 10% for 1000bp or longer alignment.</li></ul></li><li>Does BWA find <strong>chimeric reads</strong>?<br>Yes, both BWA-SW and BWA-MEM are able to find chimera. BWA usually reports one alignment for each read but may output two or more alignments if the read/contig is a chimera.</li><li>Does BWA work on reference sequences longer than 4GB in total?<br>Yes. Since 0.6.x, all BWA algorithms work with a genome with total length over 4GB. However, <em><strong>individual chromosome should not be longer than 2GB.</strong></em></li></ul><div class="admonition note"><p class="admonition-title">PS</p></div><p>chimeric reads: Chimeric reads occur when <strong>one sequencing read aligns to two distinct portions of the genome</strong> with little or no overlap. Chimeric reads are indicative of structural variation. Chimeric reads are also called <strong>split reads</strong>. After aligning with bwa mem, chimeric reads will have an SA tag as described on page 7 of the SAM format specification. To find them all you have to do is extract them using grep. <a href="https://www.biostars.org/p/116201/">donfreed, 2014</a>. In the <a href="https://bio-bwa.sourceforge.net/bwa.shtml">documentation</a>, it mentioned that <code>bwa aln</code> is for find the SA reads.</p><h3 id="Bowtie2">Bowtie2</h3><blockquote><p>Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences. It is particularly good at aligning reads of about 50 up to 100s or 1,000s of characters, and particularly good at aligning to relatively long (e.g. mammalian) genomes. Bowtie 2 indexes the genome with an FM Index to keep its memory footprint small: for the human genome, its memory footprint is typically around 3.2 GB. Bowtie 2 supports gapped, local, and paired-end alignment modes.<br><strong>What isn’t Bowtie 2</strong>?<br>Bowtie 2 is geared toward aligning <strong>relatively short sequencing reads</strong> to long genomes. That said, it handles arbitrarily small reference sequences (e.g. amplicons) and very long reads (i.e. upwards of 10s or 100s of kilobases), though it is slower in those settings. It is optimized for the read lengths and error modes yielded by typical Illumina sequencers.<br>Bowtie 2 does not support alignment of colorspace reads. (Bowtie 1 does.) <a href="https://bowtie-bio.sourceforge.net/bowtie2/index.shtml">Documentation</a></p></blockquote><p>Bowtie2 could awareness splicing because it cut reads into even shorter before doing alignment.</p><div class="admonition note"><p class="admonition-title">PS</p></div><p>What is colorspace reads:</p><ul><li>Short answer: color space refers to the native format of ABI SoLID technology. Color space is translated to nucleotide, or base space (same thing) so that it can be understood.</li><li>That technology is not growing in market share, so in the next few years it will become less common. ABI is putting most of their effort behind the Ion Torrent now. <a href="https://www.biostars.org/p/44269/">swbarnes2, 2012</a></li></ul><h2 id="Test-Data">Test Data</h2><pre>>1_Perfect_match<font color="salmon">TAATTCCCAAGATGAAGTTCCTGATCATCCTTGCCCTGGCTGTGGCCGCC</font>>2_Intron_insertion<font color="salmon">TAATTCCCAAGATGAAGTTCCTGAT</font>TGCTGATCGATCGTAGCTAGCTAGCTAGCTAGCTAGCTACGTGCATCAGTCGATCAGTACGTCAGATGCTGTCGATCGTAGTCGATCGATGCTAGCTAGCTAGCTGCATAGTAGCTGCATGCTAGCTGCTAGCTCAGTAGCTCGTGCATGCATGCAT<font color="salmon">CATCCTTGCCCTGGCTGTGGCCGCC</font>>3_Intron_insertion<font color="salmon">TAATTCCCA</font>TGCTGATCGTGACTGCTGATCGATCGTGCTAGTCGATGCTCGTGCATGCTGCATGCTAGCTAGCTAGCTGACTGATCGTACGTCAGTGCATGCATGCTAGCTAGTAGCTAGCTAGCTAGCTCAGTCAGTCAGTCGATCGATGCTAGCTAGCTAGCTAGCTAGCTAGCTAGCTAGCTAGTCGATGCTAGCTAGCTAGCTCAGTCAGTAGCTCAGTCGAGCTGTGTGTGCTAGCACTACGTGTCGATGTGTCAGT<font color="salmon">AGATGAAGTTCCTGATCATCCTTGCCCTGGCTGTGGCCGCC</font>>4_Cross_Chrm_L<font color="salmon">TAATTCCCAAGATGAAGTTCCTGAT</font >TGCTGATCGATCGTAGCTAGCTAGCTAGCTAGCTAGCTACGTGCATCAGTCGATCAGTACGTCAG>5_Cross_Chrm_RATGCTGTCGATCGTAGTCGATCGATGCTAGCTAGCTAGCTGCATAGTAGCTGCATGCTAGCTGCTAGCTCAGTAGCTCGTGCATGCATGCAT<font color="salmon">CATCCTTGCCCTGGCTGTGGCCGCC</font>>6_Small_deletion_3TAATTCCCAAGATGAAGTTCCTATCCTTGCCCTGGCTGTGGCCGCC>6_deletion_10TAATTCCCAAGATGAAGTTCTTGCCCTGGCTGTGGCCGCC>6_deletion_20TAATTCCCAAGATGAAGTTCTGTGGCCGCC>7_Samll_insertion_3<font color="salmon">TAATTCCCAAGATGAAGTTCCTGAT</font>GAT<font color="salmon">CATCCTTGCCCTGGCTGTGGCCGCC</font>>8_SNP<font color="salmon">TAATTCCCAAGATGAAGTTCCTGAT</font>T<font color="salmon">ATCCTTGCCCTGGCTGTGGCCGCC</font></pre><h2 id="Build-reference-DB-index">Build reference DB (index)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">module load trinity/2.8.5<br>module load bwa<br>module load bowtie2<br>module load rsem<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(grep <span class="hljs-string">&quot;&gt;&quot;</span> Ref.fa|sed <span class="hljs-string">&#x27;s/&gt;//&#x27;</span>); <span class="hljs-keyword">do</span> grep -A 1 <span class="hljs-variable">$i</span> Ref.fa &gt; <span class="hljs-variable">$i</span>.fa; <span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(ls *.fa);<br><span class="hljs-keyword">do</span> bwa index <span class="hljs-variable">$i</span><br>    bowtie2-build <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span><br>    bowtie-build <span class="hljs-variable">$i</span> <span class="hljs-variable">$i</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure></div><h2 id="Aligning">Aligning</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(ls DB/*.fa)<br>    <span class="hljs-keyword">do</span> SAMPLE=$(<span class="hljs-built_in">echo</span>  <span class="hljs-variable">$i</span>| sed <span class="hljs-string">&#x27;s=DB/==&#x27;</span>);<br>    bwa mem <span class="hljs-variable">$i</span> test.fq | grep -v ^@ &gt; <span class="hljs-variable">$SAMPLE</span>.bwa.sam<br>    bowtie2 -x <span class="hljs-variable">$i</span> -U test.fq|grep -v ^@ &gt; <span class="hljs-variable">$SAMPLE</span>.bowtie2.sam<br>    bowtie <span class="hljs-variable">$i</span> test.fq|grep -v ^@ &gt; <span class="hljs-variable">$SAMPLE</span>.bowtie.sam<br><span class="hljs-keyword">done</span><br><br>grep . *.sam| sed <span class="hljs-string">&#x27;s/.sam:/\t/&#x27;</span>|awk -F<span class="hljs-string">&quot;\t&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&quot;\t&quot;$4&#125;&#x27;</span> | awk -F<span class="hljs-string">&quot;.&quot;</span> <span class="hljs-string">&#x27;&#123;print $1&quot;\t&quot;$NF&#125;&#x27;</span>&gt; Result<br></code></pre></td></tr></table></figure></div><h2 id="Results">Results</h2><p>Format of sam file:</p><pre>A00327:224:HW2JVDRXY:1:1101:1253:100001_Perfect_match16050M*00TAATTCCCAAGATGAAGTTCCTGATCATCCTTGCCCTGGCTGTGGCCGCC#FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFNM:i:0MD:Z:50AS:i:50XS:i:0</pre><table><thead><tr><th style="text-align:left">Columns</th><th style="text-align:left">Abbr.</th><th style="text-align:left">Exp</th><th style="text-align:left">Describe</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">QNAME</td><td style="text-align:left">A003…</td><td style="text-align:left">Query (pair) NAME</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">FLAG</td><td style="text-align:left">0</td><td style="text-align:left">bitwise FLAG</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">RNAME</td><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">Reference sequence NAME</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">POS</td><td style="text-align:left">1</td><td style="text-align:left">1-based leftmost POSition/coordinate of clipped sequence</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">MAPQ</td><td style="text-align:left">60</td><td style="text-align:left">MAPping Quality (Phred-scaled)</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">CIAGR</td><td style="text-align:left">50M</td><td style="text-align:left">extended CIGAR string</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">MRNM</td><td style="text-align:left">*</td><td style="text-align:left">Mate Reference sequence NaMe (‘=’ if same as RNAME)</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">MPOS</td><td style="text-align:left">0</td><td style="text-align:left">1-based Mate POSistion</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">ISIZE</td><td style="text-align:left">0</td><td style="text-align:left">Inferred insert SIZE</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">SEQ</td><td style="text-align:left">TAAT…</td><td style="text-align:left">query SEQuence on the same strand as the reference</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">QUAL</td><td style="text-align:left">FFFF…</td><td style="text-align:left">query QUALity (ASCII-33 gives the Phred base quality)</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">OPT</td><td style="text-align:left">NM:i:0MD:Z:50AS:i:50XS:i:0</td><td style="text-align:left">variable OPTional fields in the format TAG:VTYPE:VALUE</td></tr></tbody></table><table><thead><tr><th style="text-align:left">Reference</th><th style="text-align:left">bowtie2</th><th style="text-align:left">bowtie</th><th style="text-align:left">bwa</th></tr></thead><tbody><tr><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">1_Perfect_match</td></tr><tr><td style="text-align:left">2_Intron_insertion</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">*</td></tr><tr><td style="text-align:left">3_Intron_insertion</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">3_Intron_insertion</td></tr><tr><td style="text-align:left">4_Cross_Chrm_L</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">*</td></tr><tr><td style="text-align:left">5_Cross_Chrm_R</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">*</td></tr><tr><td style="text-align:left">6_deletion_10</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">*</td></tr><tr><td style="text-align:left">6_deletion_20</td><td style="text-align:left">*</td><td style="text-align:left">NA</td><td style="text-align:left">*</td></tr><tr><td style="text-align:left">6_Small_deletion_3</td><td style="text-align:left">6_Small_deletion_3</td><td style="text-align:left">NA</td><td style="text-align:left">6_Small_deletion_3</td></tr><tr><td style="text-align:left">7_Samll_insertion_3</td><td style="text-align:left">7_Samll_insertion_3</td><td style="text-align:left">NA</td><td style="text-align:left">7_Samll_insertion_3</td></tr><tr><td style="text-align:left">8_SNP</td><td style="text-align:left">8_SNP</td><td style="text-align:left">8_SNP</td><td style="text-align:left">8_SNP</td></tr><tr><td style="text-align:left">Ref</td><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">1_Perfect_match</td><td style="text-align:left">1_Perfect_match</td></tr></tbody></table><h2 id="TopHat">TopHat</h2><p>Unlike BWA and bowtie2, TopHat is a intron awareness aligner. It not only automatically split mapped and unmapped bam, but also given variation results like ‘junction’, ‘deletion’, and ‘insertion’ <code>bed</code> files. But the align performance of TopHat2 is not optimistic from some comparison.</p><div class="admonition note"><p class="admonition-title">column name of 'junction.bed':</p><p>[seqname] [start] [end] [id] [score] [strand] [thickStart] [thickEnd] [r,g,b] [block_count] [block_sizes] [block_locations]</p><ol><li>&quot;seqname&quot;: chromosome</li><li>&quot;start&quot;: is the start position of the leftmost read that contains the junction.</li><li>&quot;end&quot;: is the end position of the rightmost read that contains the junction.</li><li>&quot;id&quot;: is the junctions id, e.g. JUNC0001</li><li>&quot;score&quot;: is the number of reads that contain the junction.</li><li>&quot;strand&quot;: is either + or -.</li><li>&quot;thickStart&quot; and</li><li>&quot;thickEnd&quot;: don't seem to have any effect on display for a junctions track. TopHat sets them as equal to start and end respectively.</li><li>&quot;r.g.b&quot;: &quot;r&quot;,&quot;g&quot; and &quot;b&quot; are the red, green, and blue values. They affect the colour of the display.</li><li>&quot;block_count&quot;: The block_count will always be 2. The two blocks specify the regions on either side of the junction.</li><li>&quot;block_sizes&quot;: &quot;block_sizes&quot; tells you how large each region is.</li><li>&quot;block_locations&quot;: it tells you, relative to the &quot;start&quot; being 0, where the two blocks occur. Therefore, the first block_location will always be zero.from: <a href="https://www.seqanswers.com/forum/applications-forums/rna-sequencing/9002-how-to-make-sense-of-tophat-s-output-file-junctions-bed#post176257">Alex124, 2012</a></li></ol><p>basic use:<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">tophat -G sample.gtf -p 40 -o output_dir Genome.bowtie2.index Sample.fq.gz<br></code></pre></td></tr></table></figure></div></p></div><p>More infor for <code>bed</code> fromat: <a href="http://genome.ucsc.edu/FAQ/FAQformat.html#format1">UCSC</a></p><h2 id="Hisat2">Hisat2</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><code class="hljs bash">hisat2 -x indexed_genome -p 40 -U sample.fq.gz | samtools view -S -b - &gt; result.bam<br></code></pre></td></tr></table></figure></div><h2 id="Others">Others</h2><p>Ryan Musich, et al using 48 <mark>fubgi’s RNA-seq samples</mark>, <em><strong>Erysiphe necator</strong></em>, to compare the results of aligners bowtie2, bwa, hisat2, Mummer4, star, and tophat2. They found that bowtie2 and bwa have less unmapped reads. TopHat2 is the worst which has arround 80% unmapped reads. Bowtie2 and bwa have a similar positive result but bwa consume much less time.</p><table><thead><tr><th style="text-align:center"><img src="https://www.frontiersin.org/files/Articles/657240/fpls-12-657240-HTML/image_m/fpls-12-657240-g003.jpg" alt=""></th><th style="text-align:center"><img src="https://www.frontiersin.org/files/Articles/657240/fpls-12-657240-HTML/image_m/fpls-12-657240-g004.jpg" alt=""></th></tr></thead><tbody></tbody></table><p><a href="https://www.frontiersin.org/articles/10.3389/fpls.2021.657240/full">© Ryan Musich, et al., 2021</a></p><p>Grzegorz M. Boratyn, et al. developed a new tool <code>Magic-BLAST</code> for improving the accuracy of RNA-seq reads aligning. They compared the</p><table><thead><tr><th style="text-align:center"><img src="https://media.springernature.com/full/springer-static/image/art%3A10.1186%2Fs12859-019-2996-x/MediaObjects/12859_2019_2996_Fig7_HTML.png" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-2996-x">© Grzegorz M. Boratyn, et al.</a></td></tr></tbody></table><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">Short reads aligner compartment</summary>
    
    
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Biology/"/>
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/"/>
    
    <category term="others" scheme="https://karobben.github.io/categories/Biology/Bioinformatics/others/"/>
    
    
    <category term="Bioinformatics" scheme="https://karobben.github.io/tags/Bioinformatics/"/>
    
  </entry>
  
  <entry>
    <title>Riboviria, Something you&#39;d like to know</title>
    <link href="https://karobben.github.io/2022/09/22/LearnNotes/riboviria/"/>
    <id>https://karobben.github.io/2022/09/22/LearnNotes/riboviria/</id>
    <published>2022-09-22T18:36:14.000Z</published>
    <updated>2023-02-11T19:20:05.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Riboviria">Riboviria</h2><p>Riboviria is a realm of viruses that includes all viruses that use a homologous RNA-dependent polymerase for <strong>replication</strong>.<br>It includes:</p><ol><li>RNA viruses that encode an RNA-dependent RNA polymerase(<abbr title="RNA-dependent RNA polymerase">RdRp</abbr>).</li><li>Reverse-transcribing viruses (with either RNA or DNA genomes) that encode an RNA-dependent DNA polymerase(<abbr title="RNA-dependent DNA polymerase">RdDp</abbr>).</li></ol><p><abbr title="RNA-dependent RNA polymerase">RdRp</abbr> and <abbr title="RNA-dependent DNA polymerase">RdDp</abbr> enzymes are essential for replicating the viral genome and transcribing viral genes into messenger RNA (mRNA) for translation of viral proteins.</p><p>Riboviria likely <strong>descended from non-viral elements</strong> that encode reverse transcriptase. It has <strong>few prokaryotic viruses</strong>, and includes <strong>most eukaryotic viruses</strong>.</p><p>Well known species are included:</p><ul><li>coronaviruses, ebola virus, HIV, influenza viruses, rabies virus, and Tobacco mosaic virus.</li></ul><h2 id="Characteristics">Characteristics</h2><ol><li><abbr title="RNA-dependent RNA polymerase">RdRp</abbr>: Based on the Baltimore classification system:<ul><li>positive sense single-stranded RNA (+ssRNA) viruses</li><li>negative sense single-stranded RNA (-ssRNA) viruses</li><li>double-stranded RNA viruses (dsRNA)</li></ul></li></ol><p>Viral mRNA is translated by the <strong>host cell’s ribosomes to produce viral proteins</strong>. In order to produce more viruses, viral RNA-dependent polymerases use copies of the viral genome as templates to replicate the viral genome.</p><ul><li>For +ssRNA viruses, an intermediate dsRNA genome is created from which +ssRNA is synthesized from the negative strand.</li><li>For -ssRNA viruses, genomes are synthesized from complementary positive sense strands. dsRNA viruses replicate their genomes from mRNA by synthesizing a complementary negative sense strand to form genomic dsRNA. For dsDNA-RT viruses, pregenomic RNA created from the cccDNA is retrotranscribed into new dsDNA genomes. For +ssRNA-RT viruses, the genome is replicated from the integrated genome. After replication and translation, the genome and the viral proteins are assembled into complete virions, which then leave the host cell.</li></ul><h2 id="Some-virus-photos">Some virus photos</h2><table><thead><tr><th style="text-align:center"><img src="https://www.microbiologyresearch.org/docserver/ahah/fulltext/jgv/87/10/3045fig1_thmb.gif" alt=""></th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.microbiologyresearch.org/docserver/ahah/fulltext/jgv/87/10/3045fig1_thmb.gif">© Mazen S. Habayeb, 2006</a> Characterization of Nora virus in Rosiphila.</td></tr></tbody></table><style>pre {  background-color:#38393d;  color: #5fd381;}</style>]]></content>
    
    
    <summary type="html">About RNA virus, you like to know</summary>
    
    
    
    <category term="Notes" scheme="https://karobben.github.io/categories/Notes/"/>
    
    <category term="Biology" scheme="https://karobben.github.io/categories/Notes/Biology/"/>
    
    <category term="Virus" scheme="https://karobben.github.io/categories/Notes/Biology/Virus/"/>
    
    
    <category term="Biology" scheme="https://karobben.github.io/tags/Biology/"/>
    
  </entry>
  
</feed>
